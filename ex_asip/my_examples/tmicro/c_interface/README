Example of usage of C-API functions
===================================

This example demonstrates how to simulate code in batch mode without
making using of Tcl API.  A small main function is provided that
specifies the actual behavior.

There are 3 different ways to do this:
1/ generate executable by checkers directly
2/ generate dll by checkers and use with separate executable
3/ generate library by checkers and link with main in subsequent step 
   to build executable 

In the example code the checkers API function calls have been encapsulated
in new functions.  This allows to provide a limited API interface to the 
end user and otherwise allows to simplify usage by tailoring functions 
to parameters of interest.

The example main code will load the program 'test' and execute 10 cycles.
In addition, it will print some register values.

1/ generate executable by checkers 
----------------------------------

Having the executable generated by checkers is the simplest method, as 
checkers will automatically link with all the necessary libaries.

It is sufficient to write your own main function and make following settings
in the prx file:
- include your own main file as extra files
- uncheck generation of main file by checkers

2/ generate dll by checkers 
---------------------------

Creating a dll requires some specific annotating to the functions that need 
to be exported for Windows.

prx file:
- select creating of dll in the prx file
- include a file with a set of functions that you will use in the main file
- Linux: add +fPIC for compiling dll

For building your executable:
- Linux: g++ main_dll.c tmicro_ca_dbg_dll.so
- Windows: cl /TP /EHsc main_dll.c /link tmicro_ca_dbg_dll.lib 

For running executable
- Linux: setenv LD_LIBRARY_PATH=.:$LD_LIBRARY_PATH

3/ generate library by checkers
-------------------------------

Creating a library will only archive the compiled objects.  
You will need to link with checkers libraries to resolve linking.

prx file:
- select creating of lib in the prx file

For linking, check the Makefile generated by checkers for executable and copy 
the necessary libraries.

Linux: g++ main_dll.c libtmicro_ca_dbg_lib.a -L<your_install>/checkersdir/lib-15.2.20/LNa64gcc_4_1lib 
       -L<your_install>/checkersdir/tcltk-8.6/lib/LNa64gcc_4_1lib -L/usr/X11R6/lib64 
       -lcheckers_all_tui_common -lcheckers_all_tui_notcl -lcheckers_all_tui_common -lpthread -lm -ldl

Windows : cl /TP /EHsc /MD main_dll.c /link libtmicro_ca_dbg_lib.lib
          <your_install>/checkersdir/lib-15.2.13/WINVC_10lib/checkers_all_tui_notcl.lib  
          <your_install>/checkersdir/lib-15.2.13/WINVC_10lib/checkers_all_tui_common.lib  
          /NODEFAULTLIB:libc.lib  /NODEFAULTLIB:libcmt.lib  gdi32.lib shell32.lib comctl32.lib 
          netapi32.lib comdlg32.lib ole32.lib oleaut32.lib wbemuuid.lib wintrust.lib


