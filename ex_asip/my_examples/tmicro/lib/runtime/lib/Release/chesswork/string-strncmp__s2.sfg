
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:44 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strncmp_ tmicro

[
    0 : strncmp typ=iword bnd=e stl=PM
    9 : __extDM typ=word bnd=b stl=DM
   10 : __sp typ=word bnd=b stl=SP
   12 : __la typ=addr bnd=p tref=addr__
   14 : s1 typ=addr bnd=p tref=__P__cchar__
   15 : s2 typ=addr bnd=p tref=__P__cchar__
   16 : n typ=word bnd=p tref=size_t__
   21 : c1 typ=word bnd=m lscp=10 tref=__cchar__
   23 : c2 typ=word bnd=m lscp=10 tref=__cchar__
   34 : __tmp typ=bool bnd=m
   37 : __ct_0 typ=word val=0f bnd=m
   39 : __tmp typ=bool bnd=m
   40 : __tmp typ=bool bnd=m
   43 : __tmp typ=word bnd=m
   53 : __tmp typ=bool bnd=m
   68 : __ivcmp typ=addr bnd=m
   69 : __shv_s1 typ=addr bnd=m
   70 : __shv_s2 typ=addr bnd=m
   78 : __false typ=bool val=0f bnd=m
   79 : __either typ=bool bnd=m
   80 : __trgt typ=sbyte val=1j bnd=m
   81 : __trgt typ=sbyte val=2j bnd=m
   82 : __trgt typ=sbyte val=-12j bnd=m
   83 : __trgt typ=sbyte val=10j bnd=m
   84 : __seff typ=any bnd=m
   85 : __seff typ=any bnd=m
]
Fstrncmp {
    #29 off=0 nxt=-3 tgt=1
    (__extDM.8 var=9) source ()  <11>;
    (__sp.9 var=10) source ()  <12>;
    (__la.11 var=12 stl=LR off=0) inp ()  <14>;
    (s1.15 var=14 stl=R off=1) inp ()  <18>;
    (s2.18 var=15 stl=R off=2) inp ()  <21>;
    (n.21 var=16 stl=R off=3) inp ()  <24>;
    () sink (__sp.9)  <226>;
    (s1.318 var=14) never ()  <380>;
    (s2.319 var=15) never ()  <381>;
    (__trgt.330 var=80) const_inp ()  <396>;
    (__trgt.331 var=81) const_inp ()  <397>;
    (__trgt.332 var=82) const_inp ()  <398>;
    (__trgt.333 var=83) const_inp ()  <399>;
    <51> {
      (__ivcmp.291 var=68 stl=alut __seff.350 var=85) _pl_1_B1 (s1.509 n.508)  <419>;
      (__ivcmp.507 var=68 stl=R off=4) R_2_dr_move_alut_2_addr (__ivcmp.291)  <587>;
      (n.508 var=16 stl=alus) alur_alus_2_dr_move_R_2_word_B1 (n.21)  <588>;
      (s1.509 var=14 stl=alur) alur_alus_2_dr_move_R_2_addr_B0 (s1.15)  <589>;
    } stp=2;
    <53> {
      () jump_const_2_B1 (__trgt.333)  <421>;
    } stp=1;
    () sync_sink (s1.15) sid=23  <540>;
    () sync_sink (s2.18) sid=24  <541>;
    <147> {
      (__ct_0.513 var=37 stl=wbus) const_1_B2 ()  <551>;
      (__ct_0.512 var=37 stl=R off=0) R_2_dr_move___CTwbus_word_cstP16_E1_wbus_2_word_B1 (__ct_0.513)  <591>;
    } stp=0;
    do {
        {
            (s2.420 var=15 stl=R off=2) entry (s2.421 s2.319)  <474>;
            (s1.426 var=14 stl=R off=1) entry (s1.427 s1.318)  <479>;
        } #9
        {
            #11 off=3 nxt=15 tgt=23
            <46> {
              (c1.75 var=21 stl=dm_read __shv_s1.308 var=69 stl=ag1q) load__pl_const_1_B1 (s1.425 __extDM.8)  <414>;
              (s1.425 var=14 stl=ag1p) ag1p_1_dr_move_R_1_addr (s1.426)  <569>;
              (c1.434 var=21 stl=R off=3) R_2_dr_move_dm_read_2_word (c1.75)  <573>;
              (__shv_s1.441 var=69 stl=R off=1) R_1_dr_move_ag1q_1_addr (__shv_s1.308)  <575>;
            } stp=0;
            <47> {
              (c2.80 var=23 stl=dm_read __shv_s2.309 var=70 stl=ag1q) load__pl_const_1_B1 (s2.419 __extDM.8)  <415>;
              (s2.419 var=15 stl=ag1p) ag1p_1_dr_move_R_1_addr (s2.420)  <568>;
              (c2.432 var=23 stl=R off=5) R_2_dr_move_dm_read_2_word (c2.80)  <571>;
              (__shv_s2.442 var=70 stl=R off=2) R_1_dr_move_ag1q_1_addr (__shv_s2.309)  <576>;
            } stp=1;
            <48> {
              (__tmp.81 var=34 stl=cndw) _ne_2_B1 (c1.433 c2.431)  <416>;
              (__tmp.416 var=34 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.81)  <565>;
              (c2.431 var=23 stl=alus) alus_2_dr_move_R_2_word (c2.432)  <570>;
              (c1.433 var=21 stl=alur) alur_2_dr_move_R_2_word (c1.434)  <572>;
            } stp=2;
            <49> {
              () jump_const_1_B1 (__tmp.415 __trgt.330)  <417>;
              (__tmp.415 var=34 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.416)  <564>;
            } stp=3;
            if {
                {
                    () if_expr (__either.321)  <103>;
                    (__either.321 var=79) undefined ()  <384>;
                } #13
                {
                    (__false.322 var=78) const ()  <385>;
                } #14
                {
                    (__either.324 var=79) undefined ()  <388>;
                    <44> {
                      (__tmp.314 var=39 stl=cndw) _ne_2_B1 (c1.477 __ct_0.478)  <412>;
                      (__tmp.476 var=39 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.314)  <579>;
                      (c1.477 var=21 stl=alur) alur_2_dr_move_R_2_word (c1.434)  <580>;
                      (__ct_0.478 var=37 stl=alus) alus_2_dr_move_R_2_word (__ct_0.512)  <581>;
                    } stp=0;
                    <45> {
                      () jump_const_1_B1 (__tmp.475 __trgt.331)  <413>;
                      (__tmp.475 var=39 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.476)  <578>;
                    } stp=1;
                } #15 off=7 nxt=23 tgt=24
                {
                    (__tmp.315 var=40) merge (__false.322 __either.324)  <371>;
                } #16
            } #12
            if {
                {
                    () if_expr (__tmp.315)  <127>;
                } #19
                {
                } #24 off=12 nxt=34
                {
                    () out (__tmp.489)  <139>;
                    () sink (__sp.9)  <145>;
                    <42> {
                      (__tmp.124 var=43 stl=alut __seff.341 var=84 stl=cbw) _mi_1_B1 (c1.495 c2.494)  <410>;
                      (__tmp.489 var=43 stl=R off=0) R_2_dr_move_alut_2_word (__tmp.124)  <582>;
                      (c2.494 var=23 stl=alus) alus_2_dr_move_R_2_word (c2.432)  <584>;
                      (c1.495 var=21 stl=alur) alur_2_dr_move_R_2_word (c1.434)  <585>;
                      (__seff.496 var=84 stl=CB off=0) CB_2_dr_move_cbw_2_any (__seff.341)  <586>;
                    } stp=1;
                    <43> {
                      () ret_1_B1 (__la.490)  <411>;
                      (__la.490 var=12 stl=trgt) trgt_2_dr_move_LR_2_addr (__la.11)  <583>;
                    } stp=0;
                    <148> {
                      () vd_nop_E1 ()  <648>;
                    } stp=2;
                } #23 off=9 nxt=-2
                {
                } #25
            } #18
            #34 off=12 nxt=1
            sync {
                (s2.423 var=15 stl=R off=2) sync_link (__shv_s2.442) sid=24  <476>;
                (s1.429 var=14 stl=R off=1) sync_link (__shv_s1.441) sid=23  <481>;
            } #1 off=12 nxt=26
            #26 off=12 nxt=33 tgt=11
            <39> {
              (__tmp.189 var=53 stl=cndw) _ne_1_B1 (s1.435 __ivcmp.446)  <407>;
              (__tmp.418 var=53 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.189)  <567>;
              (s1.435 var=14 stl=alur) alur_2_dr_move_R_2_addr (s1.429)  <574>;
              (__ivcmp.446 var=68 stl=alus) alus_2_dr_move_R_2_addr (__ivcmp.507)  <577>;
            } stp=0;
            <40> {
              () jump_const_1_B1 (__tmp.417 __trgt.332)  <408>;
              (__tmp.417 var=53 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.418)  <566>;
            } stp=1;
        } #10
        {
            () while_expr (__either.326)  <203>;
            (__either.326 var=79) undefined ()  <391>;
            (s2.421 var=15 stl=R off=2 s2.422 var=15 stl=R off=2) exit (s2.423)  <475>;
            (s1.427 var=14 stl=R off=1 s1.428 var=14 stl=R off=1) exit (s1.429)  <480>;
        } #27
    } #8
    #33 off=14 nxt=-2
    () out (__ct_0.512)  <287>;
    () sink (__sp.9)  <293>;
    <38> {
      () ret_1_B1 (__la.511)  <406>;
      (__la.511 var=12 stl=trgt) trgt_2_dr_move_LR_2_addr (__la.11)  <590>;
    } stp=0;
} #0
0 : 'src/string.c';
----------
0 : (0,105:0,0);
1 : (0,108:4,20);
8 : (0,108:4,2);
10 : (0,108:4,2);
11 : (0,111:8,8);
12 : (0,111:14,8);
14 : (0,111:14,9);
15 : (0,111:20,10);
18 : (0,111:1,12);
23 : (0,112:5,13);
24 : (0,111:1,16);
26 : (0,108:4,24);
29 : (0,108:4,26);
33 : (0,114:4,29);
----------
103 : (0,111:14,8);
127 : (0,111:1,12);
203 : (0,108:4,24);
371 : (0,111:14,11);
406 : (0,114:4,29);
407 : (0,108:4,24);
408 : (0,108:4,24);
410 : (0,112:30,13);
411 : (0,112:5,13);
412 : (0,111:20,10);
413 : (0,111:1,12);
414 : (0,109:11,4);
415 : (0,110:11,7);
416 : (0,111:8,8);
417 : (0,111:14,8);
551 : (0,111:23,0);

