
// File generated by noodle version O-2018.09#f5599cac26#190121, Tue May 28 10:41:37 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I.. -I../isg -I../runtime/include -D__tct_patch__=300 -itmicro_chess.h +wlib/Release/chesswork src/stdio.c +Q0=+Sal,+Sca,+Osps,+NOtcr,+NOrle tmicro

                  bool__ : _basic() bool;
               __cchar__ : _basic() __cchar;
               __schar__ : _basic() __schar;
               __uchar__ : _basic() __uchar;
              __sshort__ : _basic() __sshort;
              __ushort__ : _basic() __ushort;
                __sint__ : _basic() __sint;
                __uint__ : _basic() __uint;
           __slonglong__ : _basic() __slonglong;
           __ulonglong__ : _basic() __ulonglong;
                  word__ : _basic() word;
               __slong__ : _basic() __slong;
               __ulong__ : _basic() __ulong;
                 uint1__ : _basic() uint1;
               __sint_DM : _basic(DM,1,1) __sint;
              __Pvoid_DM : _basic(DM,1,1) __Pvoid;
              __PFILE_DM : _pointer(DM,1,1) $__Pvoid_DM $FILE_void;
                 FILE_DM : _struct(DM,2,1) FILE {
                     stream $__sint_DM @0;
                     in_use $__sint_DM @1;
                 }
            __A16FILE_DM : _array(DM,32,1) [16] $FILE_DM;
            __PFILE_DM_1 : _pointer(DM,1,1) $__Pvoid_DM $FILE_DM;
               __Pvoid__ : _basic() __Pvoid;
               __PFILE__ : _pointer() $__Pvoid__ $FILE_DM;
              __ffloat__ : _basic() __ffloat;
             __fdouble__ : _basic() __fdouble;
         __flongdouble__ : _basic() __flongdouble;
             __PPMvoid__ : _basic() __PPMvoid;
             __PDMvoid__ : _basic() __PDMvoid;
              __cchar_DM : _basic(DM,1,1) __cchar;
          __A3__cchar_DM : _array(DM,3,1) [3] $__cchar_DM;
                  addr__ : _basic() addr;
           __P__cchar_DM : _pointer(DM,1,1) $__Pvoid_DM $__cchar_DM;
 __anonymous1__stdio__DM : _union(DM,1,1) __anonymous1__stdio_ {
                     path $__P__cchar_DM @0;
                     mem $__P__cchar_DM @0;
                 }
 __anonymous2__stdio__DM : _union(DM,1,1) __anonymous2__stdio_ {
                     mode $__P__cchar_DM @0;
                     oldpath $__P__cchar_DM @0;
                 }
              __slong_DM : _basic(DM,2,1) __slong;
 __anonymous3__stdio__DM : _union(DM,1,1) __anonymous3__stdio_ {
                     whence $__sint_DM @0;
                     lsb_first $__sint_DM @0;
                     oflag $__sint_DM @0;
                 }
 __anonymous4__stdio__DM : _union(DM,1,1) __anonymous4__stdio_ {
                     c $__sint_DM @0;
                     errno $__sint_DM @0;
                     mode $__sint_DM @0;
                 }
               __uint_DM : _basic(DM,1,1) __uint;
               size_t_DM : _typedef(DM,1,1) size_t $__uint_DM;
 __anonymous5__stdio__DM : _union(DM,1,1) __anonymous5__stdio_ {
                     write_ptr_dm $__Pvoid_DM @0;
                     write_ptr_pm $__Pvoid_DM @0;
                 }
            __PDMvoid_DM : _basic(DM,1,1) __PDMvoid;
            __PPMvoid_DM : _basic(DM,1,1) __PPMvoid;
 __anonymous6__stdio__DM : _union(DM,1,1) __anonymous6__stdio_ {
                     read_ptr_dm $__PDMvoid_DM @0;
                     read_ptr_pm $__PPMvoid_DM @0;
                 }
     Hosted_clib_vars_DM : _struct(DM,18,1) Hosted_clib_vars {
                     call_type $__sint_DM @0;
                     stream_id $__sint_DM @1;
                     stream_rt $__sint_DM @2;
                     str_arg1 $__anonymous1__stdio__DM @3;
                     str_arg2 $__anonymous2__stdio__DM @4;
                     format $__P__cchar_DM @5;
                     offset $__slong_DM @6;
                     int_arg1 $__anonymous3__stdio__DM @8;
                     eof $__sint_DM @9;
                     int_arg2 $__anonymous4__stdio__DM @10;
                     puts_s $__P__cchar_DM @11;
                     gets_s $__P__cchar_DM @12;
                     size $size_t_DM @13;
                     nmemb $size_t_DM @14;
                     write_ptr $__anonymous5__stdio__DM @15;
                     read_ptr $__anonymous6__stdio__DM @16;
                     ap $__Pvoid_DM @17;
                 }
   __PHosted_clib_vars__ : _pointer() $__Pvoid__ $Hosted_clib_vars_DM;
            __P__cchar__ : _pointer() $__Pvoid__ $__cchar_DM;
               va_list__ : _typedef() va_list $__Pvoid__;
                size_t__ : _typedef() size_t $__uint__;
