
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 12:03:33 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strcat_ tzscale


// m16, jump target: m1 (next offset: 28)
000000  2 0  "00101110"   // R[10] = R[11]; 
000001  0 0  "10000101"   // /
000002  4 0  "10110111"   // (R[11]) = lui_const_1_B1 (-4113); 
000003  0 0  "11110101"   // /
000004  0 0  "11111110"   // /
000005  0 0  "11111110"   // /
000006  4 0  "00110111"   // (R[4]) = lui_const_1_B1 (-522232); 
000007  0 0  "10000010"   // /
000008  0 0  "10000000"   // /
000009  0 0  "10000000"   // /
000010  4 0  "10010011"   // (R[5]) = w32_const_bor_1_B1 (R[11],3839); 
000011  0 0  "11100010"   // /
000012  0 0  "11110101"   // /
000013  0 0  "11101111"   // /
000014  2 0  "00010001"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_2_B2 (8,SP,SP); 
000015  0 0  "00001000"   // /
000016  4 0  "10010011"   // (R[3]) = const_1_B1 (); 
000017  0 0  "00000001"   // /
000018  0 0  "11110000"   // /
000019  0 0  "11111111"   // /
000020  4 0  "00010011"   // (R[4]) = w32_const_bor_1_B1 (R[4],128); 
000021  0 0  "01100010"   // /
000022  0 0  "00000010"   // /
000023  0 0  "00001000"   // /
000024  2 0  "10101010"   // R[11] = R[10]; 
000025  0 0  "10000101"   // /
000026  2 0  "00000001"   // () = j_const_1_B1 (2); 
000027  0 0  "10100010"   // /

// m12;   next: m1 (next offset: 30)
000028  2 0  "01011001" .loop_nesting 1    // (R[11]) = _pl_const_2_B2 (R[11]); 
000029  0 0  "00000100"   // /

// m1;   next: m52 (next offset: 30)

// m52;   next: m29, jump target: m12 (next offset: 52)
000030  4 0  "10000011"   // (R[7]) = load_2_B1 (R[11],DMb); 
000031  0 0  "10100011"   // /
000032  0 0  "00000101"   // /
000033  0 0  "00000000"   // /
000034  4 0  "00110011"   // (R[6]) = _er_1_B1 (R[7],R[3]); 
000035  0 0  "11000011"   // /
000036  0 0  "01110001"   // /
000037  0 0  "00000000"   // /
000038  2 0  "10010110"   // (R[7]) = _pl_1_B1 (R[7],R[5]); 
000039  0 0  "10010011"   // /
000040  4 0  "00110011"   // (R[6]) = _ad_1_B1 (R[7],R[6]); 
000041  0 0  "01110011"   // /
000042  0 0  "01110011"   // /
000043  0 0  "00000000"   // /
000044  4 0  "00110011"   // (R[6]) = _ad_1_B1 (R[6],R[4]); 
000045  0 0  "01110011"   // /
000046  0 0  "01100010"   // /
000047  0 0  "00000000"   // /
000048  4 0  "11100011"   // () = _eq_br_const_const_1_B1 (R[6],-24); 
000049  0 0  "00000100"   // /
000050  0 0  "00000011"   // /
000051  0 0  "11111110"   // /

// m29, jump target: m2 (next offset: 62)
000052  4 0  "00100011" .loop_nesting 0    // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[1],SP,-4); 
000053  0 0  "00101110"   // /
000054  0 0  "00010001"   // /
000055  0 0  "11111110"   // /
000056  4 0  "00100011"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[10],SP,-8); 
000057  0 0  "00101100"   // /
000058  0 0  "10100001"   // /
000059  0 0  "11111110"   // /
000060  2 0  "00000001"   // () = j_const_1_B1 (2); 
000061  0 0  "10100010"   // /

// m25;   next: m2 (next offset: 64)
000062  2 0  "01011001" .loop_nesting 1    // (R[11]) = _pl_const_1_B2 (R[11]); 
000063  0 0  "00000001"   // /

// m2;   next: m26 (next offset: 64)

// m26;   next: m31, jump target: m25 (next offset: 72)
000064  4 0  "10000011"   // (R[1]) = load_1_B1 (R[11],DMb); 
000065  0 0  "10000000"   // /
000066  0 0  "00000101"   // /
000067  0 0  "00000000"   // /
000068  4 0  "11100011"   // () = _ne_br_const_const_1_B1 (R[1],-10); 
000069  0 0  "10011011"   // /
000070  0 0  "00000000"   // /
000071  0 0  "11111110"   // /

// m31;   next: m32 (next offset: 76)
000072  4 0  "11101111" .loop_nesting 0    // (R[1]) = jal_const_1_B1 (0); 
000073  0 0  "00000000"   // /
000074  0 0  "00000000"   // /
000075  0 0  "00000000"   // /

// m32 subroutine call;   next: m34 (next offset: 76)

// m34 (next offset: /)
000076  4 0  "00000011"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000077  0 0  "00100110"   // /
000078  0 0  "11000001"   // /
000079  0 0  "11111111"   // /
000080  4 0  "00000011"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000081  0 0  "00100101"   // /
000082  0 0  "10000001"   // /
000083  0 0  "11111111"   // /
000084  2 0  "00010101"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-8,SP,SP); 
000085  0 0  "00011000"   // /
000086  4 0  "01100111"   // () = __rts_jr_1_B1 (R[12]); 
000087  0 0  "00000000"   // /
000088  0 0  "00000110"   // /
000089  0 0  "00000000"   // /

