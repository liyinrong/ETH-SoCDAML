
// File generated by pdg version O-2018.09#f5599cac26#190121, Tue May 28 10:11:01 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// pdg -B -I../lib -I../lib/isg -D__go__ -Verilog -cgo_options.cfg -D__tct_patch__=300 +wtmicro_vlog/tmp_pdg tmicro


`timescale 1ns/1ps

module trace_module
  #(// synopsys translate_off
    parameter reg_log = 1'b1
    // synopsys translate_on
  )
  ( input                    reset,
    input                    clock,
    input                    trace_data_valid_in,
    input             [15:0] trace_data_in,
    input                    dbg_trace_rd_in,
    input                    dbg_trace_rd_cnt_in,
    input                    dbg_trace_cfg_wr_in,
    input      signed [15:0] ocd_data_r_in,
    output reg               ocd_data_ocd_data_w_trace_module_req_pdg_en_out,
    output reg signed [15:0] ocd_data_w_out
  );

  reg        [15:0] traceCfgReg;
  reg        [15:0] pdg_update_traceCfgReg;
  reg               pdg_we_traceCfgReg;
  reg        [15:0] traceCount;
  reg        [15:0] pdg_update_traceCount;
  reg               pdg_we_traceCount;
  reg        [15:0] traceRdPtr;
  reg        [15:0] pdg_update_traceRdPtr;
  reg               pdg_we_traceRdPtr;
  reg        [15:0] traceWrPtr;
  reg        [15:0] pdg_update_traceWrPtr;
  reg               pdg_we_traceWrPtr;
  reg        [15:0] traceMem_trnMem_r_r_a;
  reg               traceMem_trnMem_r_re;
  reg        [15:0] traceMem_trnMem_w_w_a;
  reg               traceMem_trnMem_w_we;
  wire signed [15:0] trnMem_r;
  reg signed [15:0] trnMem_w;

  __ Go instantiate for PDG __ trace_module__traceMem

    // empty process p_process_result

    // process_request
    always @ (*)
  begin : p_process_request
    reg        [15:0] tmp;

    ocd_data_ocd_data_w_trace_module_req_pdg_en_out = 0;
    ocd_data_w_out = 0;
    traceMem_trnMem_r_r_a = 0;
    traceMem_trnMem_r_re = 0;
    traceMem_trnMem_w_w_a = 0;
    traceMem_trnMem_w_we = 0;
    trnMem_w = 0;

    pdg_we_traceCfgReg = 1'b0;
    pdg_update_traceCfgReg = 0;
    pdg_we_traceCount = 1'b0;
    pdg_update_traceCount = 0;
    pdg_we_traceRdPtr = 1'b0;
    pdg_update_traceRdPtr = 0;
    pdg_we_traceWrPtr = 1'b0;
    pdg_update_traceWrPtr = 0;

    tmp = traceCfgReg;
    if (tmp[0])
    begin
      if (trace_data_valid_in)
      begin
        traceMem_trnMem_w_w_a = traceWrPtr;
        traceMem_trnMem_w_we = 1'b1;
        trnMem_w = $signed(trace_data_in);
        if (traceWrPtr == 16'b0000000001111111)
        begin
          pdg_we_traceWrPtr = 1'b1;
          pdg_update_traceWrPtr = 16'b0000000000000000;
        end
        else
        begin
          pdg_we_traceWrPtr = 1'b1;
          pdg_update_traceWrPtr = traceWrPtr + 16'b0000000000000001;
        end
        if (traceCount < 16'b0000000010000000)
        begin
          pdg_we_traceCount = 1'b1;
          pdg_update_traceCount = traceCount + 16'b0000000000000001;
        end
      end
    end
    if (dbg_trace_rd_in)
    begin
      traceMem_trnMem_r_re = 1'b1;
      traceMem_trnMem_r_r_a = traceRdPtr;
      ocd_data_ocd_data_w_trace_module_req_pdg_en_out = 1'b1;
      ocd_data_w_out = trnMem_r;
      if (traceRdPtr == 16'b0000000000000000)
      begin
        pdg_we_traceRdPtr = 1'b1;
        pdg_update_traceRdPtr = 16'b0000000001111111;
      end
      else
      begin
        pdg_we_traceRdPtr = 1'b1;
        pdg_update_traceRdPtr = traceRdPtr - 16'b0000000000000001;
      end
    end
    if (dbg_trace_rd_cnt_in)
    begin
      ocd_data_ocd_data_w_trace_module_req_pdg_en_out = 1'b1;
      ocd_data_w_out = $signed(traceCount);
      if (traceCount > 16'b0000000000000000)
      begin
        if (traceWrPtr == 16'b0000000000000000)
        begin
          pdg_we_traceRdPtr = 1'b1;
          pdg_update_traceRdPtr = 16'b0000000001111111;
        end
        else
        begin
          pdg_we_traceRdPtr = 1'b1;
          pdg_update_traceRdPtr = traceWrPtr - 16'b0000000000000001;
        end
      end
    end
    if (dbg_trace_cfg_wr_in)
    begin
      pdg_we_traceCfgReg = 1'b1;
      pdg_update_traceCfgReg = $unsigned(ocd_data_r_in);
    end
  end //p_process_request



  always @ (posedge clock or posedge reset)
  begin : p_update_status
    if (reset)
    begin
      traceCfgReg <= 16'b0000000000000000;
      traceCount <= 16'b0000000000000000;
      traceRdPtr <= 16'b0000000000000000;
      traceWrPtr <= 16'b0000000000000000;
    end
    else
    begin
      if (pdg_we_traceCfgReg)
        traceCfgReg <= pdg_update_traceCfgReg;
      if (pdg_we_traceCount)
        traceCount <= pdg_update_traceCount;
      if (pdg_we_traceRdPtr)
        traceRdPtr <= pdg_update_traceRdPtr;
      if (pdg_we_traceWrPtr)
        traceWrPtr <= pdg_update_traceWrPtr;
    end
  end // p_update_status

endmodule // trace_module
