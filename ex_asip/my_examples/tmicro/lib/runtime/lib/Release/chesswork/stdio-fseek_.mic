
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:38 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i stdio-fseek_ tmicro


// m3;   next: m4 (next offset: 16)
000000  1 0  "0101000100110000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (19,SP,SP); 
000001  1 0  "0010010100001010"   // (R[0]) = rd_res_reg_1_B1 (SP); 
000002  1 0  "0011111011010101"   // (R[5]) = const_6_B2 (-19); 
000003  1 0  "0100000001000110"   // (R[6]) = load_1_B1 (R[1],DM); 
000004  1 0  "0000000000000101"   // (R[0],) = _pl_1_B1 (R[0],R[5]); 
000005  1 0  "0011000010010001"   // (R[1]) = const_5_B2 (); 
000006  1 0  "0011000001000101"   // (R[5]) = const_4_B2 (); 
000007  1 0  "0111111111111011"   // (__spill_DM[-1]) = stack_store_bndl_B1 (LR,SP,-1); 
000008  1 0  "0111111011100110"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[6],-18,DM,SP); 
000009  1 0  "0111111100110010"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[2],-13,DM,SP); 
000010  1 0  "0111111101000011"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[3],-12,DM,SP); 
000011  1 0  "0111111101010100"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[4],-11,DM,SP); 
000012  1 0  "0111111011110001"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[1],-17,DM,SP); 
000013  1 0  "0100001000000101"   // (DM) = store_1_B1 (R[5],R[0],DM); 
000014  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000015  0 0  "0000000000000000"   // /

// m4 subroutine call;   next: m5 (next offset: 16)

// m5;   next: m8, jump target: m9 (next offset: 20)
000016  1 0  "0110111011110000"   // (R[0]) = load__pl_rd_res_reg_const_1_B1 (-17,DM,SP); 
000017  1 0  "0011000000000100"   // (R[4]) = const_3_B2 (); 
000018  1 0  "0001101000000100"   // (CND) = _eq_1_B1 (R[0],R[4]); 
000019  1 0  "0010111100000011"   // () = jump_const_2_B1 (CND,3); 

// m8;   next: m12 (next offset: 24)
000020  2 0  "0010010000010100"   // (R[4]) = const_2_B1 (0); 
000021  0 0  "0000000000000000"   // /
000022  1 0  "0100001100000000"   // (DM) = store_1_B1 (R[0],R[4],DM); 
000023  1 0  "0011111111110000"   // (R[0]) = const_1_B2 (); 

// m9;   next: m12 (next offset: 24)

// m12 (next offset: /)
000024  1 0  "0110111111111011"   // (LR) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000025  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000026  1 0  "0101111011010000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-19,SP,SP); 
000027  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

