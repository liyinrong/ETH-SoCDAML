
// File generated by pdg version O-2018.09#f5599cac26#190121, Tue May 28 10:45:21 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// pdg -B -I../lib -I../lib/isg -D__go__ -Verilog -cgo_options.cfg -D__tct_patch__=300 +wtmicro_vlog/tmp_pdg tmicro


`timescale 1ns/1ps

module interrupt_io
  ( input            reset,
    input            clock,
    input      [7:0] ireq_inp_in,
    input      [7:0] iack_pcu_out_in,
    output reg [7:0] ireq_pcu_inp_out,
    output reg [7:0] iack_out_out,
    input            proc_stall_in
  );

  reg         [7:0] reg_ipend;
  reg         [7:0] pdg_update_reg_ipend;
  reg               pdg_we_reg_ipend;
  reg         [7:0] reg_ireq0;
  reg         [7:0] pdg_update_reg_ireq0;
  reg               pdg_we_reg_ireq0;
  reg         [7:0] reg_ireq1;
  reg         [7:0] pdg_update_reg_ireq1;
  reg               pdg_we_reg_ireq1;
  reg         [7:0] ireq;

  // process_result
  always @ (*)
  begin : p_process_result

    ireq = 0;
    ireq_pcu_inp_out = 0;

    pdg_we_reg_ireq0 = 1'b0;
    pdg_update_reg_ireq0 = 0;
    pdg_we_reg_ireq1 = 1'b0;
    pdg_update_reg_ireq1 = 0;

    pdg_we_reg_ireq0 = 1'b1;
    pdg_update_reg_ireq0 = ireq_inp_in;
    pdg_we_reg_ireq1 = 1'b1;
    pdg_update_reg_ireq1 = reg_ireq0;
    ireq = reg_ipend | reg_ireq0 & ~reg_ireq1;
    ireq_pcu_inp_out = ireq;
  end //p_process_result

  // process_request
  always @ (*)
  begin : p_process_request
    reg         [7:0] t;
    reg         [7:0] iack;

    iack_out_out = 0;

    pdg_we_reg_ipend = 1'b0;
    pdg_update_reg_ipend = 0;

    if (proc_stall_in)
    begin
      t = 8'b00000000;
    end
    else
    begin
      t = iack_pcu_out_in;
    end
    iack = t;
    iack_out_out = iack;
    pdg_we_reg_ipend = 1'b1;
    pdg_update_reg_ipend = ireq & ~iack;
  end //p_process_request



  always @ (posedge clock or posedge reset)
  begin : p_update_status
    if (reset)
    begin
      reg_ipend <= 8'b00000000;
      reg_ireq0 <= 8'b00000000;
      reg_ireq1 <= 8'b00000000;
    end
    else
    begin
      if (pdg_we_reg_ipend)
        reg_ipend <= pdg_update_reg_ipend;
      if (pdg_we_reg_ireq0)
        reg_ireq0 <= pdg_update_reg_ireq0;
      if (pdg_we_reg_ireq1)
        reg_ireq1 <= pdg_update_reg_ireq1;
    end
  end // p_update_status

endmodule // interrupt_io
