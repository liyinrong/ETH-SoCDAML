
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:38 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i stdio-freopen_ tmicro


// m3;   next: m4 (next offset: 16)
000000  1 0  "0101000101000000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (20,SP,SP); 
000001  1 0  "0010010100001010"   // (R[0]) = rd_res_reg_1_B1 (SP); 
000002  1 0  "0011111011000100"   // (R[4]) = const_5_B2 (-20); 
000003  1 0  "0000000000000100"   // (R[0],) = _pl_1_B1 (R[0],R[4]); 
000004  1 0  "0100000011000100"   // (R[4]) = load_1_B1 (R[3],DM); 
000005  1 0  "0111111111110011"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[3],SP,-1); 
000006  1 0  "0011000010010011"   // (R[3]) = const_7_B2 (); 
000007  1 0  "0011000110100101"   // (R[5]) = const_6_B2 (); 
000008  1 0  "0111111111101011"   // (__spill_DM[-2]) = stack_store_bndl_B1 (LR,SP,-2); 
000009  1 0  "0111111011110001"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[1],-17,DM,SP); 
000010  1 0  "0111111100000010"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[2],-16,DM,SP); 
000011  1 0  "0111111011010100"   // (DM) = store__pl_rd_res_reg_const_2_B1 (R[4],-19,DM,SP); 
000012  1 0  "0111111011100011"   // (DM) = store__pl_rd_res_reg_const_2_B1 (R[3],-18,DM,SP); 
000013  1 0  "0100001000000101"   // (DM) = store_1_B1 (R[5],R[0],DM); 
000014  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000015  0 0  "0000000000000000"   // /

// m4 subroutine call;   next: m5 (next offset: 16)

// m5;   next: m9, jump target: m8 (next offset: 21)
000016  1 0  "0110111011100000"   // (R[0]) = load__pl_rd_res_reg_const_1_B1 (-18,DM,SP); 
000017  1 0  "0011000000000001"   // (R[1]) = const_4_B2 (); 
000018  1 0  "0110111111110010"   // (R[2]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000019  1 0  "0001101001000001"   // (CND) = _ne_1_B1 (R[0],R[1]); 
000020  1 0  "0010111100000110"   // () = jump_const_2_B1 (CND,6); 

// m9, jump target: m12 (next offset: 28)
000021  1 0  "0110111011010000"   // (R[0]) = load__pl_rd_res_reg_const_1_B1 (-19,DM,SP); 
000022  1 0  "0010010100110010"   // R[3] = R[2]; 
000023  1 0  "0100001010010000"   // (R[2],DM) = store__pl_const_1_B1 (R[0],R[2],DM); 
000024  1 0  "0011000000010001"   // (R[1]) = const_1_B2 (); 
000025  1 0  "0010010100000011"   // R[0] = R[3]; 
000026  1 0  "0010110000000101"   // () = jump_const_1_B1 (5); 
000027  1 0  "0100001010000001"   // (DM) = store_1_B1 (R[1],R[2],DM); 

// m8;   next: m12 (next offset: 32)
000028  2 0  "0010010000010010"   // (R[2]) = const_3_B1 (0); 
000029  0 0  "0000000000000000"   // /
000030  1 0  "0100001010000000"   // (DM) = store_1_B1 (R[0],R[2],DM); 
000031  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 

// m12 (next offset: /)
000032  1 0  "0010111000000000" .swstall "dm_addr_conflict"   // () = vd_nop_E1 (); 
000033  1 0  "0110111111101011"   // (LR) = stack_load_bndl_B1 (__spill_DM[-2],SP,-2); 
000034  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000035  1 0  "0101111011000000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-20,SP,SP); 
000036  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

