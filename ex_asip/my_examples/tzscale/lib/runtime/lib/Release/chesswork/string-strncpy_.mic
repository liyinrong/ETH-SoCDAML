
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 12:03:32 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strncpy_ tzscale


// m7;   next: m33, jump target: m2 (next offset: 8)
000000  4 0  "00010011"   // (R[10]) = const_2_B1 (); 
000001  0 0  "00000101"   // /
000002  0 0  "01000000"   // /
000003  0 0  "00000000"   // /
000004  4 0  "01100011"   // () = _lt_br_const_1_B1 (R[13],R[10],84); 
000005  0 0  "11101010"   // /
000006  0 0  "10100110"   // /
000007  0 0  "00000100"   // /

// m33, jump target: m1 (next offset: 30)
000008  4 0  "00110111"   // (R[4]) = lui_const_1_B1 (-522232); 
000009  0 0  "10000010"   // /
000010  0 0  "10000000"   // /
000011  0 0  "10000000"   // /
000012  4 0  "10110111"   // (R[5]) = lui_const_1_B1 (-4113); 
000013  0 0  "11110010"   // /
000014  0 0  "11111110"   // /
000015  0 0  "11111110"   // /
000016  4 0  "10010011"   // (R[3]) = const_3_B1 (); 
000017  0 0  "00000001"   // /
000018  0 0  "11110000"   // /
000019  0 0  "11111111"   // /
000020  4 0  "00010011"   // (R[4]) = w32_const_bor_1_B1 (R[4],128); 
000021  0 0  "01100010"   // /
000022  0 0  "00000010"   // /
000023  0 0  "00001000"   // /
000024  4 0  "10010011"   // (R[5]) = w32_const_bor_1_B1 (R[5],3839); 
000025  0 0  "11100010"   // /
000026  0 0  "11110010"   // /
000027  0 0  "11101111"   // /
000028  2 0  "00000001"   // () = j_const_1_B1 (14); 
000029  0 0  "10101110"   // /

// m24;   next: m1 (next offset: 44)
000030  4 0  "00000011" .loop_nesting 1    // (R[6]) = load_2_B1 (R[12],DMb); 
000031  0 0  "00100011"   // /
000032  0 0  "00000110"   // /
000033  0 0  "00000000"   // /
000034  2 0  "01101101"   // (R[13]) = _pl_const_3_B2 (R[13]); 
000035  0 0  "00011100"   // /
000036  4 0  "00100011"   // (DMb) = store_2_B1 (R[6],R[11],DMb); 
000037  0 0  "10100000"   // /
000038  0 0  "01100101"   // /
000039  0 0  "00000000"   // /
000040  2 0  "01011001"   // (R[11]) = _pl_const_4_B2 (R[11]); 
000041  0 0  "00000100"   // /
000042  2 0  "01100001"   // (R[12]) = _pl_const_4_B2 (R[12]); 
000043  0 0  "00000100"   // /

// m1;   next: m25 (next offset: 44)

// m25;   next: m103, jump target: m2 (next offset: 48)
000044  4 0  "01100011"   // () = _lt_br_const_1_B1 (R[13],R[10],44); 
000045  0 0  "11100110"   // /
000046  0 0  "10100110"   // /
000047  0 0  "00000010"   // /

// m103;   next: m152, jump target: m24 (next offset: 70)
000048  4 0  "10000011"   // (R[7]) = load_2_B1 (R[12],DMb); 
000049  0 0  "00100011"   // /
000050  0 0  "00000110"   // /
000051  0 0  "00000000"   // /
000052  4 0  "00110011"   // (R[6]) = _er_1_B1 (R[7],R[3]); 
000053  0 0  "11000011"   // /
000054  0 0  "01110001"   // /
000055  0 0  "00000000"   // /
000056  2 0  "10010110"   // (R[7]) = _pl_1_B1 (R[7],R[5]); 
000057  0 0  "10010011"   // /
000058  4 0  "00110011"   // (R[6]) = _ad_1_B1 (R[7],R[6]); 
000059  0 0  "01110011"   // /
000060  0 0  "01110011"   // /
000061  0 0  "00000000"   // /
000062  4 0  "00110011"   // (R[6]) = _ad_1_B1 (R[6],R[4]); 
000063  0 0  "01110011"   // /
000064  0 0  "01100010"   // /
000065  0 0  "00000000"   // /
000066  4 0  "11100011"   // () = _eq_br_const_const_2_B1 (R[6],-40); 
000067  0 0  "00001100"   // /
000068  0 0  "00000011"   // /
000069  0 0  "11111100"   // /

// m152;   next: m55 (next offset: 70)

// m55, jump target: m2 (next offset: 72)
000070  2 0  "00001001" .loop_nesting 0    // () = j_const_1_B1 (20); 
000071  0 0  "10100100"   // /

// m44;   next: m50, jump target: m3 (next offset: 92)
000072  4 0  "10000011" .loop_nesting 1    // (R[3]) = load_1_B1 (R[12],DMb); 
000073  0 0  "00000001"   // /
000074  0 0  "00000110"   // /
000075  0 0  "00000000"   // /
000076  2 0  "00101110"   // R[10] = R[11]; 
000077  0 0  "10000101"   // /
000078  2 0  "01101101"   // (R[13]) = _pl_const_2_B2 (R[13]); 
000079  0 0  "00011111"   // /
000080  2 0  "01011001"   // (R[11]) = _pl_const_1_B2 (R[11]); 
000081  0 0  "00000001"   // /
000082  2 0  "01100001"   // (R[12]) = _pl_const_1_B2 (R[12]); 
000083  0 0  "00000001"   // /
000084  4 0  "00100011"   // (DMb) = store_1_B1 (R[3],R[10],DMb); 
000085  0 0  "00000000"   // /
000086  0 0  "00110101"   // /
000087  0 0  "00000000"   // /
000088  4 0  "01100011"   // () = _eq_br_const_const_1_B1 (R[3],8); 
000089  0 0  "10000100"   // /
000090  0 0  "00000001"   // /
000091  0 0  "00000000"   // /

// m50;   next: m155 (next offset: 92)

// m155;   next: m2 (next offset: 92)

// m2;   next: m108 (next offset: 92)

// m108;   next: m154, jump target: m44 (next offset: 96)
000092  4 0  "11100011"   // () = _lt_br_const_const_1_B1 (R[13],-24); 
000093  0 0  "01100100"   // /
000094  0 0  "11010000"   // /
000095  0 0  "11111110"   // /

// m154;   next: m3 (next offset: 100)
000096  4 0  "00110111" .loop_nesting 0    // (R[10]) = const_1_B5 (); 
000097  0 0  "00000101"   // /
000098  0 0  "00000000"   // /
000099  0 0  "00000000"   // /

// m3;   next: m68 (next offset: 100)

// m68, jump target: m4 (next offset: 104)
000100  2 0  "10101110"   // (R[13]) = _pl_1_B1 (R[11],R[13]); 
000101  0 0  "10010110"   // /
000102  2 0  "00000001"   // () = j_const_1_B1 (6); 
000103  0 0  "10100110"   // /

// m64;   next: m4 (next offset: 110)
000104  4 0  "00100011" .loop_nesting 1    // (DMb) = store_const_1_B1 (R[11],DMb); 
000105  0 0  "10000000"   // /
000106  0 0  "00000101"   // /
000107  0 0  "00000000"   // /
000108  2 0  "01011001"   // (R[11]) = _pl_const_1_B2 (R[11]); 
000109  0 0  "00000001"   // /

// m4;   next: m65 (next offset: 110)

// m65;   next: m70, jump target: m64 (next offset: 114)
000110  4 0  "11100011"   // () = _lt_br_const_1_B1 (R[11],R[13],-10); 
000111  0 0  "11101011"   // /
000112  0 0  "11010101"   // /
000113  0 0  "11111110"   // /

// m70;   next: m74, jump target: m73 (next offset: 118)
000114  4 0  "01100011" .loop_nesting 0    // () = _ne_br_const_const_1_B1 (R[10],2); 
000115  0 0  "00010001"   // /
000116  0 0  "00000101"   // /
000117  0 0  "00000000"   // /

// m74;   next: m77 (next offset: 120)
000118  2 0  "00101110"   // R[10] = R[11]; 
000119  0 0  "10000101"   // /

// m73;   next: m77 (next offset: 120)

// m77 (next offset: /)
000120  4 0  "01100111"   // () = __rts_jr_1_B1 (R[1]); 
000121  0 0  "10000000"   // /
000122  0 0  "00000000"   // /
000123  0 0  "00000000"   // /

