
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:51 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i malloc-calloc_ tmicro

[
    0 : calloc typ=iword bnd=e stl=PM
    5 : __vola typ=iword bnd=b stl=PM
    8 : __extPM typ=iword bnd=b stl=PM
    9 : __extDM typ=word bnd=b stl=DM
   10 : __sp typ=word bnd=b stl=SP
   11 : __extPM_void typ=iword bnd=b stl=PM
   12 : __extDM_void typ=word bnd=b stl=DM
   14 : __la typ=addr bnd=p tref=addr__
   16 : nmemb typ=word bnd=p tref=size_t__
   17 : size typ=word bnd=p tref=size_t__
   18 : __ct_0s0 typ=word val=3s0 bnd=m
   22 : __tmp typ=word bnd=m
   23 : malloc typ=addr val=0r bnd=m
   25 : __link typ=addr bnd=m
   26 : __tmp typ=addr bnd=m
   27 : __ct_0 typ=addr val=0f bnd=m
   30 : __tmp typ=bool bnd=m
   31 : __ct_0 typ=word val=0f bnd=m
   34 : memset typ=addr val=0r bnd=m
   36 : __link typ=addr bnd=m
   37 : __tmp typ=addr bnd=m
   38 : __ct_0S0 typ=word val=-3S0 bnd=m
   59 : __either typ=bool bnd=m
   60 : __trgt typ=sbyte val=4j bnd=m
   62 : __seff typ=any bnd=m
   65 : __stack_offs_ typ=any val=-3o0 bnd=m
   66 : __stack_offs_ typ=any val=-1o0 bnd=m
   67 : __stack_offs_ typ=any val=-2o0 bnd=m
]
Fcalloc {
    #16 off=0 nxt=4
    (__vola.4 var=5) source ()  <7>;
    (__extPM.7 var=8) source ()  <10>;
    (__extDM.8 var=9) source ()  <11>;
    (__sp.9 var=10) source ()  <12>;
    (__extPM_void.10 var=11) source ()  <13>;
    (__extDM_void.11 var=12) source ()  <14>;
    (__la.13 var=14 stl=LR off=0) inp ()  <16>;
    (nmemb.17 var=16 stl=R off=1) inp ()  <20>;
    (size.20 var=17 stl=R off=2) inp ()  <23>;
    (__ct_0s0.125 var=18) const_inp ()  <178>;
    (malloc.126 var=23) const_inp ()  <179>;
    <46> {
      (__sp.28 var=10) _pl_rd_res_reg_const_wr_res_reg_1_B2 (__ct_0s0.125 __sp.9 __sp.9)  <195>;
    } stp=1;
    <47> {
      (__tmp.113 var=22 stl=__t __seff.139 var=62 stl=__t1) mulss_1_B1 (nmemb.167 size.166)  <196>;
      (size.166 var=17 stl=muls) muls_2_dr_move_R_2_word (size.20)  <265>;
      (nmemb.167 var=16 stl=mulr) mulr_2_dr_move_R_2_word (nmemb.17)  <266>;
      (__seff.168 var=62 stl=PH off=0) PH_2_dr_move___t1_2_any (__seff.139)  <267>;
      (__tmp.171 var=22 stl=PL off=0) PL_2_dr_move___t_2_word (__tmp.113)  <270>;
    } stp=0;
    <48> {
      (__link.35 var=25 stl=lnk_pf) bsr_const_1_B1 (malloc.126)  <197>;
      (__link.169 var=25 stl=LR off=0) LR_1_dr_move_lnk_pf_1_addr (__link.35)  <268>;
    } stp=5;
    <66> {
      (__tmp.170 var=22 stl=R off=1) R_2_dr_move_R_2_word (__tmp.171)  <269>;
    } stp=2;
    <67> {
      (__tmp.210 var=22 stl=__spill_DM off=-1) stack_store_bndl_B1 (__tmp.172 __sp.28 __stack_offs_.248)  <271>;
      (__tmp.172 var=22 stl=dm_write) to___spill_DM_dm_write_2_dr_move_R_2_word (__tmp.170)  <274>;
      (__stack_offs_.248 var=66) const_inp ()  <319>;
    } stp=4;
    <68> {
      (__la.213 var=14 stl=__spill_DM off=-2) stack_store_bndl_B1 (__la.173 __sp.28 __stack_offs_.249)  <275>;
      (__la.173 var=14 stl=dm_write) to___spill_DM_dm_write_2_dr_move_LR_2_addr (__la.13)  <278>;
      (__stack_offs_.249 var=67) const_inp ()  <320>;
    } stp=3;
    call {
        (__tmp.37 var=26 stl=R off=0 __extDM.40 var=9 __extDM_void.41 var=12 __extPM.42 var=8 __extPM_void.43 var=11 __vola.44 var=5) Fmalloc (__link.169 __tmp.170 __extDM.8 __extDM_void.11 __extPM.7 __extPM_void.10 __vola.4)  <40>;
    } #4 off=7 nxt=5
    #5 off=7 nxt=9 tgt=11
    (__trgt.129 var=60) const_inp ()  <182>;
    <44> {
      (__tmp.119 var=30 stl=cndw) _eq_1_B1 (__tmp.174 __ct_0.180)  <193>;
      (__tmp.164 var=30 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.119)  <260>;
      (__tmp.174 var=26 stl=alur) alur_2_dr_move_R_2_addr (__tmp.37)  <279>;
      (__ct_0.180 var=27 stl=alus) alus_2_dr_move_R_2_addr (__ct_0.181)  <294>;
    } stp=2;
    <45> {
      () jump_const_2_B1 (__tmp.163 __trgt.129)  <194>;
      (__tmp.163 var=30 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.164)  <259>;
    } stp=3;
    <72> {
      (__ct_0.182 var=27 stl=wbus) const_2_B2 ()  <238>;
      (__ct_0.181 var=27 stl=R off=1) R_2_dr_move___CTwbus_word_cstP16_E1_wbus_2_addr_B1 (__ct_0.182)  <295>;
    } stp=0;
    <70> {
      (__tmp.219 var=26 stl=__spill_DM off=-3) stack_store_bndl_B1 (__tmp.177 __sp.28 __stack_offs_.251)  <285>;
      (__tmp.177 var=26 stl=dm_write) to___spill_DM_dm_write_2_dr_move_R_2_addr (__tmp.37)  <288>;
      (__stack_offs_.251 var=65) const_inp ()  <322>;
    } stp=1;
    if {
        {
            () if_expr (__either.123)  <60>;
            (__either.123 var=59) undefined ()  <175>;
        } #7
        {
        } #11 off=16 nxt=14
        {
            #9 off=11 nxt=10
            (memset.127 var=34) const_inp ()  <180>;
            <42> {
              (__link.70 var=36 stl=lnk_pf) bsr_const_1_B1 (memset.127)  <191>;
              (__link.175 var=36 stl=LR off=0) LR_1_dr_move_lnk_pf_1_addr (__link.70)  <280>;
            } stp=3;
            <73> {
              (__ct_0.184 var=31 stl=wbus) const_1_B2 ()  <240>;
              (__ct_0.183 var=31 stl=R off=2) R_2_dr_move___CTwbus_word_cstP16_E1_wbus_2_word_B1 (__ct_0.184)  <296>;
            } stp=1;
            <69> {
              (__tmp.216 var=22 stl=dm_read) stack_load_bndl_B1 (__tmp.210 __sp.28 __stack_offs_.250)  <281>;
              (__tmp.176 var=22 stl=R off=3) from___spill_DM_R_2_dr_move_dm_read_2_word (__tmp.216)  <284>;
              (__stack_offs_.250 var=66) const_inp ()  <321>;
            } stp=0;
            <77> {
              (__tmp.246 var=26 stl=dm_read) stack_load_bndl_B1 (__tmp.219 __sp.28 __stack_offs_.253)  <315>;
              (__tmp.240 var=26 stl=R off=1) from___spill_DM_R_2_dr_move_dm_read_2_addr (__tmp.246)  <317>;
              (__stack_offs_.253 var=65) const_inp ()  <324>;
            } stp=2;
            call {
                (__tmp.72 var=37 stl=R off=0 __extDM.75 var=9 __extDM_void.76 var=12 __extPM.77 var=8 __extPM_void.78 var=11 __vola.79 var=5) Fmemset (__link.175 __tmp.240 __ct_0.183 __tmp.176 __extDM.40 __extDM_void.41 __extPM.42 __extPM_void.43 __vola.44)  <71>;
            } #10 off=16 nxt=19
            #19 off=16 nxt=14
        } #8
        {
            (__vola.80 var=5) merge (__vola.44 __vola.79)  <74>;
            (__extPM.81 var=8) merge (__extPM.42 __extPM.77)  <75>;
            (__extDM.82 var=9) merge (__extDM.40 __extDM.75)  <76>;
            (__extPM_void.83 var=11) merge (__extPM_void.43 __extPM_void.78)  <77>;
            (__extDM_void.84 var=12) merge (__extDM_void.41 __extDM_void.76)  <78>;
        } #12
    } #6
    #14 off=16 nxt=-2
    () out (__tmp.165)  <86>;
    () sink (__vola.80)  <87>;
    () sink (__extPM.81)  <90>;
    () sink (__extDM.82)  <91>;
    () sink (__sp.90)  <92>;
    () sink (__extPM_void.83)  <93>;
    () sink (__extDM_void.84)  <94>;
    (__ct_0S0.128 var=38) const_inp ()  <181>;
    <38> {
      (__sp.90 var=10) _pl_rd_res_reg_const_wr_res_reg_1_B2 (__ct_0S0.128 __sp.28 __sp.28)  <187>;
    } stp=3;
    <39> {
      () ret_1_B1 (__la.178)  <188>;
      (__la.178 var=14 stl=trgt) trgt_2_dr_move_LR_2_addr (__la.179)  <289>;
    } stp=1;
    <65> {
      (__tmp.207 var=26 stl=dm_read) stack_load_bndl_B1 (__tmp.219 __sp.28 __stack_offs_.247)  <261>;
      (__tmp.165 var=26 stl=R off=0) from___spill_DM_R_2_dr_move_dm_read_2_addr (__tmp.207)  <264>;
      (__stack_offs_.247 var=65) const_inp ()  <318>;
    } stp=2;
    <71> {
      (__la.222 var=14 stl=dm_read) stack_load_bndl_B1 (__la.213 __sp.28 __stack_offs_.252)  <290>;
      (__la.179 var=14 stl=LR off=0) from___spill_DM_LR_2_dr_move_dm_read_2_addr (__la.222)  <293>;
      (__stack_offs_.252 var=67) const_inp ()  <323>;
    } stp=0;
    71 -> 38 del=1;
    65 -> 38 del=1;
    68 -> 48 del=1;
} #0
0 : 'src/malloc.c';
----------
0 : (0,180:0,0);
4 : (0,183:8,2);
5 : (0,184:4,3);
6 : (0,184:4,3);
8 : (0,185:14,4);
9 : (0,185:24,4);
10 : (0,185:8,4);
11 : (0,184:4,6);
14 : (0,186:4,9);
16 : (0,183:8,2);
----------
40 : (0,183:8,2);
60 : (0,184:4,3);
71 : (0,185:8,4);
74 : (0,184:4,8);
75 : (0,184:4,8);
76 : (0,184:4,8);
77 : (0,184:4,8);
78 : (0,184:4,8);
187 : (0,186:4,0) (0,186:4,9);
188 : (0,186:4,9);
191 : (0,185:8,4);
193 : (0,184:4,3);
194 : (0,184:4,3);
195 : (0,180:6,0);
196 : (0,183:21,2);
197 : (0,183:8,2);
238 : (0,184:4,0);
240 : (0,185:17,0);
261 : (0,186:11,0);
269 : (0,183:21,0);
281 : (0,185:24,0);
290 : (0,186:4,0);
315 : (0,185:15,0);

