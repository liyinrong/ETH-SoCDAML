
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 12:03:33 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strcmp_ tzscale


// m82;   next: m11 (next offset: 0)

// m11;   next: m15, jump target: m23 (next offset: 12)
000000  4 0  "00000011" .loop_nesting 1    // (R[10]) = load_1_B1 (R[11],DMb); 
000001  0 0  "10000101"   // /
000002  0 0  "00000101"   // /
000003  0 0  "00000000"   // /
000004  4 0  "10000011"   // (R[3]) = load_1_B1 (R[12],DMb); 
000005  0 0  "00000001"   // /
000006  0 0  "00000110"   // /
000007  0 0  "00000000"   // /
000008  4 0  "01100011"   // () = _ne_br_const_1_B1 (R[10],R[3],4); 
000009  0 0  "00010010"   // /
000010  0 0  "00110101"   // /
000011  0 0  "00000000"   // /

// m15;   next: m23, jump target: m24 (next offset: 16)
000012  4 0  "01100011"   // () = _ne_br_const_const_1_B1 (R[10],16); 
000013  0 0  "00011000"   // /
000014  0 0  "00000101"   // /
000015  0 0  "00000000"   // /

// m23 (next offset: 32)
000016  4 0  "00010011"   // (R[12]) = __uchar_1_B1 (R[10]); 
000017  0 0  "01110110"   // /
000018  0 0  "11110101"   // /
000019  0 0  "00001111"   // /
000020  4 0  "10010011"   // (R[11]) = __uchar_1_B1 (R[3]); 
000021  0 0  "11110101"   // /
000022  0 0  "11110001"   // /
000023  0 0  "00001111"   // /
000024  4 0  "00110011"   // (R[10]) = _mi_1_B1 (R[12],R[11]); 
000025  0 0  "00000101"   // /
000026  0 0  "10110110"   // /
000027  0 0  "01000000"   // /
000028  4 0  "01100111"   // () = __rts_jr_1_B1 (R[1]); 
000029  0 0  "10000000"   // /
000030  0 0  "00000000"   // /
000031  0 0  "00000000"   // /

// m24;   next: m26 (next offset: 32)

// m26;   next: m30, jump target: m38 (next offset: 44)
000032  4 0  "00000011"   // (R[10]) = load__pl_const_3_B1 (R[11],DMb); 
000033  0 0  "10000101"   // /
000034  0 0  "00010101"   // /
000035  0 0  "00000000"   // /
000036  4 0  "10000011"   // (R[3]) = load__pl_const_3_B1 (R[12],DMb); 
000037  0 0  "00000001"   // /
000038  0 0  "00010110"   // /
000039  0 0  "00000000"   // /
000040  4 0  "01100011"   // () = _ne_br_const_1_B1 (R[10],R[3],4); 
000041  0 0  "00010010"   // /
000042  0 0  "00110101"   // /
000043  0 0  "00000000"   // /

// m30;   next: m38, jump target: m39 (next offset: 48)
000044  4 0  "01100011"   // () = _ne_br_const_const_1_B1 (R[10],16); 
000045  0 0  "00011000"   // /
000046  0 0  "00000101"   // /
000047  0 0  "00000000"   // /

// m38 (next offset: 64)
000048  4 0  "10000011"   // (R[11]) = __uchar_load__pl_const_3_B1 (R[11],DMb); 
000049  0 0  "11000101"   // /
000050  0 0  "00010101"   // /
000051  0 0  "00000000"   // /
000052  4 0  "00000011"   // (R[12]) = __uchar_load__pl_const_3_B1 (R[12],DMb); 
000053  0 0  "01000110"   // /
000054  0 0  "00010110"   // /
000055  0 0  "00000000"   // /
000056  4 0  "00110011"   // (R[10]) = _mi_1_B1 (R[11],R[12]); 
000057  0 0  "10000101"   // /
000058  0 0  "11000101"   // /
000059  0 0  "01000000"   // /
000060  4 0  "01100111"   // () = __rts_jr_1_B1 (R[1]); 
000061  0 0  "10000000"   // /
000062  0 0  "00000000"   // /
000063  0 0  "00000000"   // /

// m39;   next: m41 (next offset: 64)

// m41;   next: m45, jump target: m53 (next offset: 76)
000064  4 0  "00000011"   // (R[10]) = load__pl_const_2_B1 (R[11],DMb); 
000065  0 0  "10000101"   // /
000066  0 0  "00100101"   // /
000067  0 0  "00000000"   // /
000068  4 0  "10000011"   // (R[3]) = load__pl_const_2_B1 (R[12],DMb); 
000069  0 0  "00000001"   // /
000070  0 0  "00100110"   // /
000071  0 0  "00000000"   // /
000072  4 0  "01100011"   // () = _ne_br_const_1_B1 (R[10],R[3],4); 
000073  0 0  "00010010"   // /
000074  0 0  "00110101"   // /
000075  0 0  "00000000"   // /

// m45;   next: m53, jump target: m54 (next offset: 80)
000076  4 0  "01100011"   // () = _ne_br_const_const_1_B1 (R[10],16); 
000077  0 0  "00011000"   // /
000078  0 0  "00000101"   // /
000079  0 0  "00000000"   // /

// m53 (next offset: 96)
000080  4 0  "10000011"   // (R[11]) = __uchar_load__pl_const_2_B1 (R[11],DMb); 
000081  0 0  "11000101"   // /
000082  0 0  "00100101"   // /
000083  0 0  "00000000"   // /
000084  4 0  "00000011"   // (R[12]) = __uchar_load__pl_const_2_B1 (R[12],DMb); 
000085  0 0  "01000110"   // /
000086  0 0  "00100110"   // /
000087  0 0  "00000000"   // /
000088  4 0  "00110011"   // (R[10]) = _mi_1_B1 (R[11],R[12]); 
000089  0 0  "10000101"   // /
000090  0 0  "11000101"   // /
000091  0 0  "01000000"   // /
000092  4 0  "01100111"   // () = __rts_jr_1_B1 (R[1]); 
000093  0 0  "10000000"   // /
000094  0 0  "00000000"   // /
000095  0 0  "00000000"   // /

// m54;   next: m56 (next offset: 96)

// m56;   next: m60, jump target: m68 (next offset: 108)
000096  4 0  "00000011"   // (R[10]) = load__pl_const_1_B1 (R[11],DMb); 
000097  0 0  "10000101"   // /
000098  0 0  "00110101"   // /
000099  0 0  "00000000"   // /
000100  4 0  "10000011"   // (R[3]) = load__pl_const_1_B1 (R[12],DMb); 
000101  0 0  "00000001"   // /
000102  0 0  "00110110"   // /
000103  0 0  "00000000"   // /
000104  4 0  "01100011"   // () = _ne_br_const_1_B1 (R[10],R[3],4); 
000105  0 0  "00010010"   // /
000106  0 0  "00110101"   // /
000107  0 0  "00000000"   // /

// m60;   next: m68, jump target: m69 (next offset: 112)
000108  4 0  "01100011"   // () = _ne_br_const_const_1_B1 (R[10],16); 
000109  0 0  "00011000"   // /
000110  0 0  "00000101"   // /
000111  0 0  "00000000"   // /

// m68 (next offset: 128)
000112  4 0  "10000011"   // (R[11]) = __uchar_load__pl_const_1_B1 (R[11],DMb); 
000113  0 0  "11000101"   // /
000114  0 0  "00110101"   // /
000115  0 0  "00000000"   // /
000116  4 0  "00000011"   // (R[12]) = __uchar_load__pl_const_1_B1 (R[12],DMb); 
000117  0 0  "01000110"   // /
000118  0 0  "00110110"   // /
000119  0 0  "00000000"   // /
000120  4 0  "00110011"   // (R[10]) = _mi_1_B1 (R[11],R[12]); 
000121  0 0  "10000101"   // /
000122  0 0  "11000101"   // /
000123  0 0  "01000000"   // /
000124  4 0  "01100111"   // () = __rts_jr_1_B1 (R[1]); 
000125  0 0  "10000000"   // /
000126  0 0  "00000000"   // /
000127  0 0  "00000000"   // /

// m69;   next: m84 (next offset: 128)

// m84, jump target: m11 (next offset: /)
000128  2 0  "01011001"   // (R[11]) = _pl_const_1_B2 (R[11]); 
000129  0 0  "00000100"   // /
000130  2 0  "01100001"   // (R[12]) = _pl_const_1_B2 (R[12]); 
000131  0 0  "00000100"   // /
000132  2 0  "11111101"   // () = j_const_1_B1 (-134); 
000133  0 0  "10111010"   // /

