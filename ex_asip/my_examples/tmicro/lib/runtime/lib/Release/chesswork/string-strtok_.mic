
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:45 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strtok_ tmicro


// m7;   next: m10, jump target: m48 (next offset: 5)
000000  1 0  "0101000000010000"   // (SP) = wr_res_reg__pl_rd_res_reg_const_1_B2 (1,SP,SP); 
000001  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 
000002  1 0  "0001101001001000"   // (CND) = _ne_2_B1 (R[1],R[0]); 
000003  1 0  "0111111111110010"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[2],SP,-1); 
000004  1 0  "0010111100000101"   // () = jump_const_2_B1 (CND,5); 

// m10;   next: m48, jump target: m16 (next offset: 11)
000005  2 0  "0010010000010001"   // (R[1]) = const_3_B1 (0); 
000006  0 0  "0000000000000000"   // /
000007  1 0  "0100000001000001"   // (R[1]) = load_2_B1 (R[1],DM); 
000008  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 
000009  1 0  "0001101000001000"   // (CND) = _eq_2_B1 (R[1],R[0]); 
000010  1 0  "0010111100101101"   // () = jump_const_2_B1 (CND,45); 

// m48, jump target: m2 (next offset: 15)
000011  2 0  "0010010000010011"   // (R[3]) = const_3_B1 (0); 
000012  0 0  "0000000000000000"   // /
000013  1 0  "0010110000001011"   // () = jump_const_1_B1 (11); 
000014  1 0  "0011000000000100"   // (R[4]) = const_1_B2 (); 

// m192;   next: m29 (next offset: 17)
000015  1 0  "0110111111110101" .loop_nesting 1    // (R[5]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000016  1 0  "0010111000000000" .swstall "read_after_write_R"   // () = vd_nop_E1 (); 

// m29;   next: m34, jump target: m1 (next offset: 20)
000017  1 0  "0100000101010110" .loop_nesting 2    // (R[6],R[5]) = load__pl_const_1_B1 (R[5],DM); 
000018  1 0  "0001101000000110"   // (CND) = _eq_1_B1 (R[0],R[6]); 
000019  1 0  "0010111100000001"   // () = jump_const_2_B1 (CND,1); 

// m34;   next: m36 (next offset: 20)

// m36;   next: m193, jump target: m29 (next offset: 22)
000020  1 0  "0001101001110100"   // (CND) = _ne_1_B1 (R[6],R[4]); 
000021  1 0  "0010111111111010"   // () = jump_const_2_B1 (CND,-6); 

// m193;   next: m1 (next offset: 22)

// m1;   next: m38 (next offset: 22)

// m38;   next: m43, jump target: m3 (next offset: 25)
000022  1 0  "0001101000110100" .loop_nesting 1    // (CND) = _eq_1_B1 (R[6],R[4]); 
000023  1 0  "0100000001010101"   // (R[1],R[5]) = _pl_const_2_B1 (R[1]); 
000024  1 0  "0010111100000011"   // () = jump_const_2_B1 (CND,3); 

// m43;   next: m194 (next offset: 25)

// m194;   next: m2 (next offset: 25)

// m2;   next: m45 (next offset: 25)

// m45;   next: m123, jump target: m192 (next offset: 28)
000025  1 0  "0100000001000000"   // (R[0]) = load_1_B1 (R[1],DM); 
000026  1 0  "0001101001000100"   // (CND) = _ne_1_B1 (R[0],R[4]); 
000027  1 0  "0010111111110010"   // () = jump_const_2_B1 (CND,-14); 

// m123;   next: m3 (next offset: 29)
000028  1 0  "0100000001010010" .loop_nesting 0    // (R[1],R[2]) = _pl_const_2_B1 (R[1]); 

// m3;   next: m50 (next offset: 29)

// m50;   next: m55, jump target: m53 (next offset: 31)
000029  1 0  "0001101000000100"   // (CND) = _eq_1_B1 (R[0],R[4]); 
000030  1 0  "0010111100010110"   // () = jump_const_2_B1 (CND,22); 

// m55;   next: m62 (next offset: 34)
000031  1 0  "0010010100000001"   // R[0] = R[1]; 
000032  1 0  "0010111000000000" .swstall "read_after_write_R"   // () = vd_nop_E1 (); 
000033  1 0  "0100000000100010"   // (R[0],R[2]) = _pl_const_1_B1 (R[0]); 

// m62;   next: m66 (next offset: 37)
000034  1 0  "0010010100100001" .loop_nesting 1    // R[2] = R[1]; 
000035  1 0  "0110111111110110"   // (R[6]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000036  1 0  "0100000001010101"   // (R[5],R[1]) = load__pl_const_1_B1 (R[1],DM); 

// m66;   next: m185, jump target: m78 (next offset: 40)
000037  1 0  "0100000110010111" .loop_nesting 2    // (R[7],R[6]) = load__pl_const_1_B1 (R[6],DM); 
000038  1 0  "0001101001101111"   // (CND) = _ne_1_B1 (R[5],R[7]); 
000039  1 0  "0010111100001001"   // () = jump_const_2_B1 (CND,9); 

// m185;   next: m74, jump target: m73 (next offset: 42)
000040  1 0  "0001101000101100"   // (CND) = _eq_1_B1 (R[5],R[4]); 
000041  1 0  "0010111100000010"   // () = jump_const_2_B1 (CND,2); 

// m74, jump target: m77 (next offset: 45)
000042  1 0  "0100001010010100"   // (R[2],DM) = store__pl_const_1_B1 (R[4],R[2],DM); 
000043  1 0  "0010110000000011"   // () = jump_const_1_B1 (3); 
000044  1 0  "0100001011000010"   // (DM) = store_1_B1 (R[2],R[3],DM); 

// m73;   next: m77 (next offset: 47)
000045  1 0  "0011000000000001"   // (R[1]) = const_2_B2 (); 
000046  1 0  "0100001011000001"   // (DM) = store_1_B1 (R[1],R[3],DM); 

// m77 (next offset: 50)
000047  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000048  1 0  "0101111111110000"   // (SP) = wr_res_reg__pl_rd_res_reg_const_1_B2 (-1,SP,SP); 
000049  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

// m78;   next: m80 (next offset: 50)

// m80;   next: m188, jump target: m66 (next offset: 52)
000050  1 0  "0001101001111100"   // (CND) = _ne_1_B1 (R[7],R[4]); 
000051  1 0  "0010111111110000"   // () = jump_const_2_B1 (CND,-16); 

// m188, jump target: m62 (next offset: 54)
000052  1 0  "0010111000000000" .loop_nesting 1  .swstall "offs_conflict"   // () = vd_nop_E1 (); 
000053  1 0  "0010110111101100"   // () = jump_const_1_B1 (-20); 

// m53, jump target: m91 (next offset: 57)
000054  1 0  "0011000000000000" .loop_nesting 0    // (R[0]) = const_2_B2 (); 
000055  1 0  "0010110000000010"   // () = jump_const_1_B1 (2); 
000056  1 0  "0100001011000000"   // (DM) = store_1_B1 (R[0],R[3],DM); 

// m16;   next: m91 (next offset: 58)
000057  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 

// m91 (next offset: /)
000058  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000059  1 0  "0101111111110000"   // (SP) = wr_res_reg__pl_rd_res_reg_const_1_B2 (-1,SP,SP); 
000060  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

