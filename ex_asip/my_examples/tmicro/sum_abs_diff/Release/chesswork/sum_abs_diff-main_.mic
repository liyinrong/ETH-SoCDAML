
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:43:38 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i sum_abs_diff-main_ tmicro


// m1;   next: m4 (next offset: 1)
000000  1 0  "0101000001010000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (5,SP,SP); 

// m4 chess_cycle_count;   next: m5 (next offset: 1)

// m5;   next: m6 (next offset: 11)
000001  1 0  "0111111111000001"   // (__spill_DM[-4]) = stack_store_bndl_B1 (R[1],SP,-4); 
000002  1 0  "0111111111011011"   // (__spill_DM[-3]) = stack_store_bndl_B1 (LR,SP,-3); 
000003  1 0  "0111111110110000"   // (__spill_DM[-5]) = stack_store_bndl_B1 (R[0],SP,-5); 
000004  2 0  "0010010000010010"   // (R[2]) = const_2_B1 (0); 
000005  0 0  "0000000000000000"   // /
000006  1 0  "0011000010100011"   // (R[3]) = const_3_B2 (); 
000007  2 0  "0010010000010001"   // (R[1]) = const_2_B1 (0); 
000008  0 0  "0000000000000000"   // /
000009  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000010  0 0  "0000000000000000"   // /

// m6 subroutine call;   next: m18 (next offset: 11)

// m18;   next: m8 (next offset: 12)
000011  1 0  "0110111110110010"   // (R[2]) = stack_load_bndl_B1 (__spill_DM[-5],SP,-5); 

// m8 chess_cycle_count;   next: m17 (next offset: 12)

// m17;   next: m10 (next offset: 21)
000012  1 0  "0000010000000010"   // (R[0],CB) = sub_1_B1 (R[0],R[2]); 
000013  1 0  "0110111111000010"   // (R[2]) = stack_load_bndl_B1 (__spill_DM[-4],SP,-4); 
000014  1 0  "0000011010001010"   // (R[2],CB) = subb_1_B1 (R[1],R[2],CB); 
000015  1 0  "0111111111110010"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[2],SP,-1); 
000016  1 0  "0111111111100000"   // (__spill_DM[-2]) = stack_store_bndl_B1 (R[0],SP,-2); 
000017  2 0  "0010010000010001"   // (R[1]) = const_2_B1 (0); 
000018  0 0  "0000000000000000"   // /
000019  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000020  0 0  "0000000000000000"   // /

// m10 subroutine call;   next: m13 (next offset: 21)

// m13 (next offset: /)
000021  1 0  "0110111111011011"   // (LR) = stack_load_bndl_B1 (__spill_DM[-3],SP,-3); 
000022  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000023  1 0  "0011000000000000"   // (R[0]) = const_1_B2 (); 
000024  1 0  "0101111110110000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-5,SP,SP); 

