
// File generated by Go version O-2018.09#f5599cac26#190121, Tue May 28 10:45:21 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// go -B -I../lib -F -D__tct_patch__=300 -Verilog -otmicro_vlog -cgo_options.cfg -Itmicro_vlog/tmp_pdg -updg -updg_controller tmicro



`timescale 1ns/1ps

// module reg_IM : reg_IM
module reg_IM
  // synopsys translate_off
  #(parameter reg_log = 1'b1,
    parameter reg_log_name = "IM"
  )
  // synopsys translate_on
  ( input            clock,
    input      [2:0] bin_selector_E1,
    input      [7:0] __CTubyte_cstP8_E1_in, // ubyte
    input      [7:0] __pm_read_w_SR_el5_in, // ubyte
    input      [7:0] dm_read_rec6_in, // ubyte
    input      [7:0] wbus_rec13_in, // ubyte
    output reg [7:0] __pm_write_r_SR_el5_out, // ubyte
    output reg [7:0] dm_write_rec6_out, // ubyte
    output reg [7:0] imr_out, // ubyte
    output reg [7:0] wbus_rec6_out // ubyte
  );


  reg [7:0] reg_val;

  reg [7:0] reg_val_next;

  reg  reg_write_enab;


  // synopsys translate_off

  reg reg_write_log;
  reg old_reg_write_log;
  initial reg_write_log     = 1'b0;
  initial old_reg_write_log = 1'b0;

  always @ (negedge clock)
  begin : p_reg_IM_log


    if (reg_log)
    begin
      if (reg_write_log !=old_reg_write_log)
      begin
        $fdisplay(tmicro.inst_reg_PC.log_file, "%s = %0d", reg_log_name, reg_val);
      end
      old_reg_write_log <= reg_write_log;
    end
  end
  // synopsys translate_on

  always @ (*)
  begin : p_read_reg_IM

    // __pm_write_r_SR_el5_out = 0;
    // dm_write_rec6_out = 0;
    // imr_out = 0;
    // wbus_rec6_out = 0;

    // (wbus_rd_SR_E1_t5)
    // [move.n:48][move.n:96][control.n:225][dma.n:51](tmicro.n:132)
    wbus_rec6_out = reg_val;

    // (dm_write_rd_SR_E1_t5)
    // [load_store.n:57][load_store.n:99](tmicro.n:132)
    dm_write_rec6_out = reg_val;

    // (__pm_write_r_SR_rd_SR_E1_t5)
    // [load_store.n:130](tmicro.n:132)
    __pm_write_r_SR_el5_out = reg_val;

    // (imr_rd_IM)
    imr_out = reg_val;

  end

  always @ (*)
  begin : p_write_combin_reg_IM

    reg_write_enab = 0;
    reg_val_next = 0;


    case (bin_selector_E1)
      3'b001 : // (IM_wr_imw_E1)
      begin
        // [move.n:69]
        reg_write_enab = 1'b1;
        reg_val_next = __CTubyte_cstP8_E1_in;
      end
      3'b010 : // (SR_wr_wbus_E1_t5)
      begin
        // [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        reg_write_enab = 1'b1;
        reg_val_next = wbus_rec13_in;
      end
      3'b011 : // (SR_wr_dm_read_E1_t5)
      begin
        // [load_store.n:51][load_store.n:93](tmicro.n:132)
        reg_write_enab = 1'b1;
        reg_val_next = dm_read_rec6_in;
      end
      3'b100 : // (SR_wr___pm_read_w_SR_E1_t5)
      begin
        // [load_store.n:116](tmicro.n:132)
        reg_write_enab = 1'b1;
        reg_val_next = __pm_read_w_SR_el5_in;
      end
      default :
        ; // null
    endcase

  end

  always @ (posedge clock)
  begin : p_write_reg_IM

    if (reg_write_enab)
    begin
      reg_val <= reg_val_next;
      // synopsys translate_off
      reg_write_log <= ~reg_write_log;
      // synopsys translate_on
    end
  end

endmodule
