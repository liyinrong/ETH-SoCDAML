
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 12:03:43 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i malloc-realloc_ tzscale

[
    0 : realloc typ=uint8 bnd=e stl=PMb
   13 : __vola typ=uint8 bnd=b stl=PMb
   16 : __extPMb typ=uint8 bnd=b stl=PMb
   17 : __extDMb typ=w08 bnd=b stl=DMb
   18 : __sp typ=w32 bnd=b stl=SP
   19 : __extPMb_void typ=uint8 bnd=b stl=PMb
   20 : __extDMb_void typ=w08 bnd=b stl=DMb
   22 : __la typ=w32 bnd=p tref=w32__
   23 : __rt typ=w32 bnd=p tref=__Pvoid__
   24 : ptr typ=w32 bnd=p tref=__Pvoid__
   25 : size typ=w32 bnd=p tref=size_t__
   26 : __ct_0s0 typ=w32 val=16s0 bnd=m
   31 : __ct_0 typ=int20p val=0f bnd=m
   40 : free typ=int21s2 val=0r bnd=m
   41 : __link typ=w32 bnd=m
   45 : __ct_0S0 typ=w32 val=-16S0 bnd=m
   50 : malloc typ=int21s2 val=0r bnd=m
   51 : __link typ=w32 bnd=m
   52 : __tmp typ=w32 bnd=m
   59 : __sint_block_size___Pvoid typ=int21s2 val=0r bnd=m
   60 : __link typ=w32 bnd=m
   61 : __tmp typ=w32 bnd=m
   64 : __tmp typ=w32 bnd=m
   67 : memcpy typ=int21s2 val=0r bnd=m
   68 : __link typ=w32 bnd=m
   69 : __tmp typ=w32 bnd=m
   73 : __link typ=w32 bnd=m
   78 : __tmp typ=w32 bnd=m
   94 : __either typ=bool bnd=m
   95 : __trgt typ=int21s2 val=22j bnd=m
   96 : __trgt typ=int21s2 val=2j bnd=m
   98 : __trgt typ=int21s2 val=46j bnd=m
   99 : __trgt typ=int21s2 val=4j bnd=m
  100 : __trgt typ=int21s2 val=12j bnd=m
  103 : __stack_offs_ typ=any val=-16o0 bnd=m
  104 : __stack_offs_ typ=any val=-4o0 bnd=m
  105 : __stack_offs_ typ=any val=-8o0 bnd=m
  106 : __stack_offs_ typ=any val=-12o0 bnd=m
]
Frealloc {
    #3 off=0 nxt=46 tgt=7
    (__vola.12 var=13) source ()  <23>;
    (__extPMb.15 var=16) source ()  <26>;
    (__extDMb.16 var=17) source ()  <27>;
    (__sp.17 var=18) source ()  <28>;
    (__extPMb_void.18 var=19) source ()  <29>;
    (__extDMb_void.19 var=20) source ()  <30>;
    (__la.21 var=22 stl=R off=1) inp ()  <32>;
    (ptr.25 var=24 stl=R8_15 off=3) inp ()  <36>;
    (size.28 var=25 stl=R8_15 off=4) inp ()  <39>;
    (__ct_0s0.301 var=26) const_inp ()  <369>;
    (__ct_0S0.303 var=45) const_inp ()  <371>;
    (malloc.304 var=50) const_inp ()  <372>;
    (__trgt.312 var=100) const_inp ()  <380>;
    <107> {
      (__sp.36 var=18) _pl_rd_res_reg_const_wr_res_reg_1_B2 (__ct_0s0.301 __sp.17 __sp.17)  <401>;
    } stp=0;
    <109> {
      () _ne_br_const_const_1_B3 (ptr.399 __trgt.312)  <403>;
      (ptr.399 var=24 stl=eqA) eqA_1_dr_move_R8_15_1_w32_B0 (ptr.25)  <561>;
    } stp=14;
    <172> {
      (size.503 var=25 stl=__spill_DMw off=-4) stack_store_bndl_B3 (size.402 __sp.36 __stack_offs_.611)  <564>;
      (size.402 var=25 stl=dmw_wr) to___spill_DMw_dmw_wr_1_dr_move_R_1_w32 (size.28)  <567>;
      (__stack_offs_.611 var=104) const_inp ()  <680>;
    } stp=2;
    <173> {
      (ptr.506 var=24 stl=__spill_DMw off=-8) stack_store_bndl_B3 (ptr.403 __sp.36 __stack_offs_.612)  <568>;
      (ptr.403 var=24 stl=dmw_wr) to___spill_DMw_dmw_wr_1_dr_move_R_1_w32 (ptr.25)  <571>;
      (__stack_offs_.612 var=105) const_inp ()  <681>;
    } stp=6;
    <174> {
      (__la.509 var=22 stl=__spill_DMw off=-12) stack_store_bndl_B3 (__la.404 __sp.36 __stack_offs_.613)  <572>;
      (__la.404 var=22 stl=dmw_wr) to___spill_DMw_dmw_wr_1_dr_move_R_1_w32 (__la.21)  <575>;
      (__stack_offs_.613 var=106) const_inp ()  <682>;
    } stp=10;
    if {
        {
            () if_expr (__either.300)  <68>;
            (__either.300 var=94) undefined ()  <368>;
        } #5
        {
            #7 off=28 nxt=11 tgt=16
            (free.302 var=40) const_inp ()  <370>;
            (__trgt.307 var=95) const_inp ()  <375>;
            <106> {
              () _ne_br_const_const_1_B3 (size.400 __trgt.307)  <400>;
              (size.400 var=25 stl=eqA) eqA_1_dr_move_R8_15_1_w32_B0 (size.28)  <562>;
            } stp=0;
            if {
                {
                    () if_expr (__either.292)  <86>;
                    (__either.292 var=94) undefined ()  <355>;
                } #9
                {
                } #16 off=52 nxt=18
                {
                    #11 off=30 nxt=12
                    <105> {
                      (__link.78 var=41 stl=lnk) jal_const_1_B1 (free.302)  <399>;
                      (__link.467 var=41 stl=R off=1) R_2_dr_move_lnk_1_w32 (__link.78)  <615>;
                    } stp=4;
                    <212> {
                      (ptr.533 var=24 stl=dmw_rd) stack_load_bndl_B3 (ptr.506 __sp.36 __stack_offs_.621)  <611>;
                      (ptr.466 var=24 stl=R off=10) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (ptr.533)  <614>;
                      (__stack_offs_.621 var=105) const_inp ()  <690>;
                    } stp=0;
                    call {
                        (__extDMb.80 var=17 __extDMb_void.81 var=20 __extPMb.82 var=16 __extPMb_void.83 var=19 __vola.84 var=13) Ffree (__link.467 ptr.466 __extDMb.16 __extDMb_void.19 __extPMb.15 __extPMb_void.18 __vola.12)  <93>;
                    } #12 off=38 nxt=15
                    #15 off=38 nxt=-2
                    () out (__ct_0.470)  <104>;
                    () sink (__vola.84)  <105>;
                    () sink (__extPMb.82)  <108>;
                    () sink (__extDMb.80)  <109>;
                    () sink (__sp.93)  <110>;
                    () sink (__extPMb_void.83)  <111>;
                    () sink (__extDMb_void.81)  <112>;
                    <103> {
                      (__sp.93 var=18) wr_res_reg__pl_rd_res_reg_const_1_B2 (__ct_0S0.303 __sp.36 __sp.36)  <397>;
                    } stp=4;
                    <104> {
                      () __rts_jr_1_B1 (__la.468)  <398>;
                      (__la.468 var=22 stl=trgt) trgt_1_dr_move_R_1_w32_B0 (__la.469)  <616>;
                    } stp=10;
                    <214> {
                      (__ct_0.471 var=31 stl=__CTaluU_int20p_cstP12_DE) const_1_B5 ()  <528>;
                      (__ct_0.470 var=31 stl=R off=10) R_2_dr_move___CTaluU_int20p_cstP12_DE___CTr1_w32_cstV0_DE___CTr2_w32_cstV0_DE_aluB_1_int20p_B0 (__ct_0.471)  <621>;
                    } stp=6;
                    <213> {
                      (__la.536 var=22 stl=dmw_rd) stack_load_bndl_B3 (__la.509 __sp.36 __stack_offs_.622)  <617>;
                      (__la.469 var=22 stl=R off=1) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__la.536)  <620>;
                      (__stack_offs_.622 var=106) const_inp ()  <691>;
                    } stp=0;
                } #10
                {
                } #17
            } #8
            #18 off=52 nxt=19
            <102> {
              (__link.128 var=51 stl=lnk) jal_const_1_B1 (malloc.304)  <396>;
              (__link.401 var=51 stl=R off=1) R_2_dr_move_lnk_1_w32 (__link.128)  <563>;
            } stp=2;
            <221> {
              (size.609 var=25 stl=R8_15 off=3) R_ra_move_R_w32_nguard_B6 (size.28)  <678>;
            } stp=0;
            call {
                (__tmp.130 var=52 stl=R8_15 off=2 __extDMb.133 var=17 __extDMb_void.134 var=20 __extPMb.135 var=16 __extPMb_void.136 var=19 __vola.137 var=13) Fmalloc (__link.401 size.609 __extDMb.16 __extDMb_void.19 __extPMb.15 __extPMb_void.18 __vola.12)  <148>;
            } #19 off=58 nxt=20
            #20 off=58 nxt=24 tgt=36
            (__trgt.310 var=98) const_inp ()  <378>;
            <101> {
              () _eq_br_const_const_1_B3 (__tmp.405 __trgt.310)  <395>;
              (__tmp.405 var=52 stl=eqA) eqA_1_dr_move_R8_15_1_w32_B0 (__tmp.130)  <576>;
            } stp=0;
            if {
                {
                    () if_expr (__either.297)  <169>;
                    (__either.297 var=94) undefined ()  <363>;
                } #22
                {
                    <216> {
                      (__tmp.539 var=52 stl=__spill_DMw off=-16) stack_store_bndl_B3 (__tmp.474 __sp.36 __stack_offs_.623)  <623>;
                      (__tmp.474 var=52 stl=dmw_wr) to___spill_DMw_dmw_wr_1_dr_move_R_1_w32 (__tmp.130)  <626>;
                      (__stack_offs_.623 var=103) const_inp ()  <692>;
                    } stp=0;
                } #36 off=106 nxt=43
                {
                    #24 off=60 nxt=25
                    (__sint_block_size___Pvoid.305 var=59) const_inp ()  <373>;
                    <100> {
                      (__link.161 var=60 stl=lnk) jal_const_1_B1 (__sint_block_size___Pvoid.305)  <394>;
                      (__link.406 var=60 stl=R off=1) R_2_dr_move_lnk_1_w32 (__link.161)  <577>;
                    } stp=8;
                    <175> {
                      (ptr.512 var=24 stl=dmw_rd) stack_load_bndl_B3 (ptr.506 __sp.36 __stack_offs_.614)  <578>;
                      (ptr.407 var=24 stl=R off=11) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (ptr.512)  <581>;
                      (__stack_offs_.614 var=105) const_inp ()  <683>;
                    } stp=0;
                    <176> {
                      (__tmp.515 var=52 stl=__spill_DMw off=-16) stack_store_bndl_B3 (__tmp.408 __sp.36 __stack_offs_.615)  <582>;
                      (__tmp.408 var=52 stl=dmw_wr) to___spill_DMw_dmw_wr_1_dr_move_R_1_w32 (__tmp.130)  <585>;
                      (__stack_offs_.615 var=103) const_inp ()  <684>;
                    } stp=4;
                    call {
                        (__tmp.163 var=61 stl=R off=10 __extDMb.166 var=17 __extDMb_void.167 var=20 __extPMb.168 var=16 __extPMb_void.169 var=19 __vola.170 var=13) F__sint_block_size___Pvoid (__link.406 ptr.407 __extDMb.133 __extDMb_void.134 __extPMb.135 __extPMb_void.136 __vola.137)  <177>;
                    } #25 off=72 nxt=26
                    #26 off=72 nxt=30 tgt=29
                    (__trgt.308 var=96) const_inp ()  <376>;
                    <99> {
                      () _lt_br_const_1_B1 (__tmp.411 size.409 __trgt.308)  <393>;
                      (size.409 var=25 stl=eqB) eqB_1_dr_move_R_1_w32 (size.410)  <586>;
                      (__tmp.411 var=61 stl=eqA) eqA_1_dr_move_R8_15_1_w32_B1 (__tmp.608)  <591>;
                    } stp=6;
                    <177> {
                      (size.518 var=25 stl=dmw_rd) stack_load_bndl_B3 (size.503 __sp.36 __stack_offs_.616)  <587>;
                      (size.410 var=25 stl=R off=1) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (size.518)  <590>;
                      (__stack_offs_.616 var=104) const_inp ()  <685>;
                    } stp=0;
                    <220> {
                      (__tmp.608 var=61 stl=R off=13) R_ra_move_R_w32_nguard_B6 (__tmp.163)  <677>;
                    } stp=4;
                    if {
                        {
                            () if_expr (__either.294)  <198>;
                            (__either.294 var=94) undefined ()  <358>;
                        } #28
                        {
                        } #29 off=84 nxt=32
                        {
                            <218> {
                              (size.606 var=25 stl=R off=13) R_ra_move_R_w32_nguard_B6 (size.410)  <675>;
                            } stp=0;
                        } #30 off=82 nxt=32
                        {
                            (__tmp.455 var=64 stl=R off=13) merge (__tmp.608 size.606)  <513>;
                        } #31
                    } #27
                    #32 off=84 nxt=33
                    (memcpy.306 var=67) const_inp ()  <374>;
                    <97> {
                      (__link.194 var=68 stl=lnk) jal_const_1_B1 (memcpy.306)  <391>;
                      (__link.412 var=68 stl=R off=1) R_2_dr_move_lnk_1_w32 (__link.194)  <592>;
                    } stp=8;
                    <178> {
                      (ptr.521 var=24 stl=dmw_rd) stack_load_bndl_B3 (ptr.506 __sp.36 __stack_offs_.617)  <593>;
                      (ptr.413 var=24 stl=R off=12) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (ptr.521)  <596>;
                      (__stack_offs_.617 var=105) const_inp ()  <686>;
                    } stp=0;
                    <179> {
                      (__tmp.524 var=52 stl=dmw_rd) stack_load_bndl_B3 (__tmp.515 __sp.36 __stack_offs_.618)  <597>;
                      (__tmp.414 var=52 stl=R off=11) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__tmp.524)  <600>;
                      (__stack_offs_.618 var=103) const_inp ()  <687>;
                    } stp=4;
                    call {
                        (__tmp.196 var=69 stl=R off=10 __extDMb.199 var=17 __extDMb_void.200 var=20 __extPMb.201 var=16 __extPMb_void.202 var=19 __vola.203 var=13) Fmemcpy (__link.412 __tmp.414 ptr.413 __tmp.455 __extDMb.166 __extDMb_void.167 __extPMb.168 __extPMb_void.169 __vola.170)  <206>;
                    } #33 off=96 nxt=34
                    #34 off=96 nxt=35
                    <96> {
                      (__link.208 var=73 stl=lnk) jal_const_1_B1 (free.302)  <390>;
                      (__link.416 var=73 stl=R off=1) R_2_dr_move_lnk_1_w32 (__link.208)  <605>;
                    } stp=4;
                    <180> {
                      (ptr.527 var=24 stl=dmw_rd) stack_load_bndl_B3 (ptr.506 __sp.36 __stack_offs_.619)  <601>;
                      (ptr.415 var=24 stl=R off=10) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (ptr.527)  <604>;
                      (__stack_offs_.619 var=105) const_inp ()  <688>;
                    } stp=0;
                    call {
                        (__extDMb.210 var=17 __extDMb_void.211 var=20 __extPMb.212 var=16 __extPMb_void.213 var=19 __vola.214 var=13) Ffree (__link.416 ptr.415 __extDMb.199 __extDMb_void.200 __extPMb.201 __extPMb_void.202 __vola.203)  <215>;
                    } #35 off=104 nxt=49
                    #49 off=104 tgt=43
                    (__trgt.311 var=99) const_inp ()  <379>;
                    <95> {
                      () j_const_2_B1 (__trgt.311)  <389>;
                    } stp=0;
                } #23
                {
                    (__vola.215 var=13) merge (__vola.137 __vola.214)  <216>;
                    (__extPMb.216 var=16) merge (__extPMb.135 __extPMb.212)  <217>;
                    (__extDMb.217 var=17) merge (__extDMb.133 __extDMb.210)  <218>;
                    (__extPMb_void.218 var=19) merge (__extPMb_void.136 __extPMb_void.213)  <219>;
                    (__extDMb_void.219 var=20) merge (__extDMb_void.134 __extDMb_void.211)  <220>;
                    (__tmp.459 var=52 stl=__spill_DMw off=-16) merge (__tmp.539 __tmp.515)  <517>;
                } #37
            } #21
        } #6
        {
            #46 off=16 nxt=40
            <93> {
              (__sp.283 var=18) wr_res_reg__pl_rd_res_reg_const_1_B2 (__ct_0S0.303 __sp.36 __sp.36)  <387>;
            } stp=4;
            <94> {
              () j_const_1_B1 (malloc.304)  <388>;
            } stp=8;
            <217> {
              (__la.542 var=22 stl=dmw_rd) stack_load_bndl_B3 (__la.509 __sp.36 __stack_offs_.624)  <627>;
              (__la.475 var=22 stl=R off=1) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__la.542)  <630>;
              (__stack_offs_.624 var=106) const_inp ()  <693>;
            } stp=0;
            <219> {
              (size.607 var=25 stl=R8_15 off=3) R_ra_move_R_w32_nguard_B6 (size.28)  <676>;
            } stp=6;
            call {
                (__tmp.227 var=78 stl=R off=10 __extDMb.230 var=17 __extDMb_void.231 var=20 __extPMb.232 var=16 __extPMb_void.233 var=19 __vola.234 var=13) Fmalloc (__la.475 size.607 __extDMb.16 __extDMb_void.19 __extPMb.15 __extPMb_void.18 __vola.12)  <228>;
            } #40 off=28 nxt=47
            #47 nxt=-2
            () out (__tmp.227)  <339>;
            () sink (__vola.234)  <340>;
            () sink (__extPMb.232)  <341>;
            () sink (__extDMb.230)  <342>;
            () sink (__sp.283)  <343>;
            () sink (__extPMb_void.233)  <344>;
            () sink (__extDMb_void.231)  <345>;
            (__vola.285 var=13) never ()  <347>;
            (__extPMb.286 var=16) never ()  <348>;
            (__extDMb.287 var=17) never ()  <349>;
            (__extPMb_void.288 var=19) never ()  <350>;
            (__extDMb_void.289 var=20) never ()  <351>;
            (__tmp.290 var=78) never ()  <352>;
        } #38
        {
            (__vola.235 var=13) merge (__vola.215 __vola.285)  <231>;
            (__extPMb.238 var=16) merge (__extPMb.216 __extPMb.286)  <234>;
            (__extDMb.239 var=17) merge (__extDMb.217 __extDMb.287)  <235>;
            (__extPMb_void.241 var=19) merge (__extPMb_void.218 __extPMb_void.288)  <237>;
            (__extDMb_void.242 var=20) merge (__extDMb_void.219 __extDMb_void.289)  <238>;
            (__rt.461 var=23 stl=__spill_DMw off=-16) merge (__tmp.459 __tmp.290)  <519>;
        } #41
    } #4
    #43 off=110 nxt=-2
    () out (__rt.398)  <252>;
    () sink (__vola.235)  <253>;
    () sink (__extPMb.238)  <256>;
    () sink (__extDMb.239)  <257>;
    () sink (__sp.254)  <258>;
    () sink (__extPMb_void.241)  <259>;
    () sink (__extDMb_void.242)  <260>;
    <91> {
      (__sp.254 var=18) wr_res_reg__pl_rd_res_reg_const_1_B2 (__ct_0S0.303 __sp.36 __sp.36)  <385>;
    } stp=8;
    <92> {
      () __rts_jr_1_B1 (__la.417)  <386>;
      (__la.417 var=22 stl=trgt) trgt_1_dr_move_R_1_w32_B0 (__la.418)  <606>;
    } stp=10;
    <171> {
      (__rt.500 var=23 stl=dmw_rd) stack_load_bndl_B3 (__rt.461 __sp.36 __stack_offs_.610)  <557>;
      (__rt.398 var=23 stl=R off=10) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__rt.500)  <560>;
      (__stack_offs_.610 var=103) const_inp ()  <679>;
    } stp=4;
    <181> {
      (__la.530 var=22 stl=dmw_rd) stack_load_bndl_B3 (__la.509 __sp.36 __stack_offs_.620)  <607>;
      (__la.418 var=22 stl=R off=1) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__la.530)  <610>;
      (__stack_offs_.620 var=106) const_inp ()  <689>;
    } stp=0;
    181 -> 91 del=1;
    171 -> 91 del=1;
    217 -> 93 del=1;
    213 -> 103 del=1;
} #0
0 : '../runtime/src/malloc.c';
----------
0 : (0,188:0,0);
3 : (0,190:4,1);
4 : (0,190:4,1);
6 : (0,204:8,2);
7 : (0,191:10,2);
8 : (0,191:1,2);
10 : (0,191:17,3);
11 : (0,192:10,3);
12 : (0,192:5,3);
15 : (0,193:5,4);
16 : (0,191:1,8);
18 : (0,195:25,11);
19 : (0,195:18,11);
20 : (0,196:1,12);
21 : (0,196:1,12);
23 : (0,196:8,13);
24 : (0,197:36,13);
25 : (0,197:25,13);
26 : (0,198:29,14);
27 : (0,198:36,14);
29 : (0,198:38,15);
30 : (0,198:49,16);
32 : (0,198:36,18);
33 : (0,198:5,18);
34 : (0,199:10,19);
35 : (0,199:5,19);
36 : (0,196:1,22);
38 : (0,201:1,29);
40 : (0,204:15,29);
43 : (0,190:4,33);
46 : (0,190:4,33);
47 : (0,190:4,33);
----------
68 : (0,190:4,1);
86 : (0,191:1,2);
93 : (0,192:5,3);
148 : (0,195:18,11);
169 : (0,196:1,12);
177 : (0,197:25,13);
198 : (0,198:36,14);
206 : (0,198:5,18);
215 : (0,199:5,19);
216 : (0,196:1,24);
217 : (0,196:1,24);
218 : (0,196:1,24);
219 : (0,196:1,24);
220 : (0,196:1,24);
228 : (0,204:15,29);
231 : (0,190:4,32);
234 : (0,190:4,32);
235 : (0,190:4,32);
237 : (0,190:4,32);
238 : (0,190:4,32);
385 : (0,190:4,33) (0,193:5,0);
386 : (0,190:4,33);
387 : (0,190:4,33) (0,193:5,0);
388 : (0,204:15,29);
390 : (0,199:5,19);
391 : (0,198:5,18);
393 : (0,198:29,14) (0,198:36,14);
394 : (0,197:25,13);
395 : (0,196:1,12);
396 : (0,195:18,11);
397 : (0,193:5,4) (0,193:5,0);
398 : (0,193:5,4);
399 : (0,192:5,3);
400 : (0,191:10,2) (0,191:1,2);
401 : (0,188:6,0);
403 : (0,190:4,1);
528 : (0,190:4,0);
557 : (0,190:4,0);
578 : (0,197:36,0);
587 : (0,198:29,0) (0,198:36,0);
593 : (0,198:15,0);
597 : (0,198:12,0);
601 : (0,199:10,0);
607 : (0,190:4,0);
611 : (0,192:10,0);
617 : (0,193:5,0);
627 : (0,204:15,0);
675 : (0,198:36,0);
676 : (0,204:22,0);
677 : (0,198:29,0) (0,198:36,0);
678 : (0,195:25,0);

