
// File generated by animal version O-2018.09#f5599cac26#190121, Tue May 28 10:41:30 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// animal -A -B -Iisg +wisg -Iruntime/include -D__tct_patch__=300 -h -C -D__darts__ -D__programmers_view__ tmicro

andrule add_sp_byte {
    ( enc {add_sp_byte} @p 4 )
    ins : 114;
    ctrn imm (
         __CTag1m_sbyte_cstP4_ID
    )
}

andrule add_sp_word {
    ( enc {add_sp_word} @p 3 )
    ins : 113;
    ctrn imm (
         __CTag1m_word_cstP16_ID
    )
}

andrule ag1_opn {
    ( enc {ag} @p 7 )
    ins : 90;
    ctrn  (
         __CTag1m_word_cstV1_ID
         __CTag1m_word_cstVm1_ID
    )
}

orrule alu_instr {
    ( enc {alu_instr} @p 0 )
    ins : 142;
    alu_rr ( enc {alu_instr} @p 0 )
    ins : 147;
    alu_rrr ( enc {alu_instr} @p 0 )
    ins : 143;
    compare_rr ( enc {alu_instr} @p 0 )
    ins : 145;
    div_r ( enc {alu_instr} @p 0 )
    ins : 29;
    equal_rr ( enc {alu_instr} @p 0 )
    ins : 146;
    minmax_rrr ( enc {alu_instr} @p 0 )
    ins : 148;
    mul_rr ( enc {alu_instr} @p 0 )
    ins : 22;
    select_rrr ( enc {alu_instr} @p 0 )
    ins : 46;
    shift_rrr ( enc {alu_instr} @p 0 )
    ins : 18;
}

andrule alu_rr {
    ( enc {alu_rr} @p 3 )
    ins : 147;
}

andrule alu_rrr {
    ( enc {alu_rrr} @p 3 )
    ins : 143;
}

andrule cl {
    ( enc {cl} @p 16 )
    ins : 123;
    ctrn tg (
         __CTtrgt_addr_cstP16_ID
    )
}

andrule clid {
    ( enc {clid} @p 13 )
    ins : 124;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
    )
}

andrule compare_rr {
    ( enc {compare_rr} @p 3 )
    ins : 145;
}

orrule control_instr {
    ( enc {control_instr} @p 0 )
    ins : 176;
    cl ( enc {control_instr} @p 0 )
    ins : 123;
    clid ( enc {control_instr} @p 0 )
    ins : 124;
    dlf ( enc {control_instr} @p 0 )
    ins : 129;
    do ( enc {control_instr} @p 0 )
    ins : 126;
    doi ( enc {control_instr} @p 0 )
    ins : 128;
    halt ( enc {control_instr} @p 0 )
    ins : 131;
    j ( enc {control_instr} @p 0 )
    ins : 119;
    jc ( enc {control_instr} @p 0 )
    ins : 120;
    jcr ( enc {control_instr} @p 0 )
    ins : 117;
    ji ( enc {control_instr} @p 0 )
    ins : 122;
    jr ( enc {control_instr} @p 0 )
    ins : 178;
    jrd ( enc {control_instr} @p 0 )
    ins : 177;
    nop ( enc {control_instr} @p 0 )
    ins : 133;
    ret ( enc {control_instr} @p 0 )
    ins : 179;
    rtd ( enc {control_instr} @p 0 )
    ins : 180;
    rti ( enc {control_instr} @p 0 )
    ins : 130;
    swbrk ( enc {control_instr} @p 0 )
    ins : 132;
    swi ( enc {control_instr} @p 0 )
    ins : 0;
}

andrule di {
    ( enc {di} @p 16 )
    ins : 172;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
         __CTiew_uint1_cstV0_E1
    )
}

andrule div_r {
    ( enc {div_r} @p 3 )
    ins : 29;
}

andrule dlf {
    ( enc {dlf} @p 16 )
    ins : 129;
}

orrule dma {
    ( enc {dma} @p 0 )
    ins : 181;
    read_dma_ready ( enc {dma} @p 0 )
    ins : 137;
    write_dma_command ( enc {dma} @p 0 )
    ins : 135;
    write_dma_reset ( enc {dma} @p 0 )
    ins : 136;
}

andrule do {
    ( enc {do} @p 13 )
    ins : 126;
}

andrule doi {
    ( enc {doi} @p 16 )
    ins : 128;
    ctrn count (
         __CTlcw_addr_cstP32_E1
    )
}

andrule ei {
    ( enc {ei} @p 16 )
    ins : 65;
    ctrn  (
         __CTiew_uint1_cstV1_E1
    )
}

andrule equal_rr {
    ( enc {equal_rr} @p 3 )
    ins : 146;
}

andrule ext_abs_r {
    ( enc {ext_abs_r} @p 3 )
    ins : 138;
}

orrule ext_instr {
    ( enc {ext_instr} @p 0 )
    ins : 138;
    ext_abs_r ( enc {ext_instr} @p 0 )
    ins : 138;
}

andrule halt {
    ( enc {halt} @p 16 )
    ins : 131;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
    )
}

andrule ilr_reg {
    ( enc {ilr_reg} @p 12 )
    ins : 191;
    ( enc {ilr_reg} @p 16 )
    ins : 192;
}

andrule isr_reg {
    ( enc {isr_reg} @p 12 )
    ins : 193;
    ( enc {isr_reg} @p 16 )
    ins : 194;
}

andrule j {
    ( enc {j} @p 16 )
    ins : 119;
    ctrn tg (
         __CTtrgt_addr_cstP16_ID
    )
}

andrule jc {
    ( enc {jc} @p 16 )
    ins : 120;
    ctrn  (
         __CTjc_bool_cstV1_E1
    )
    ctrn tg (
         __CTtrgt_addr_cstP16_E1
    )
}

andrule jcr {
    ( enc {jcr} @p 8 )
    ins : 117;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
         __CTjcr_bool_cstV1_E1
    )
    ctrn of (
         __CToffs_sbyte_cstP8_E1
    )
}

andrule ji {
    ( enc {ji} @p 13 )
    ins : 122;
}

andrule jr {
    ( enc {jr} @p 8 )
    ins : 178;
    ctrn of (
         __CToffs_sbyte_cstP8_ID
    )
}

andrule jrd {
    ( enc {jrd} @p 8 )
    ins : 177;
    ctrn  (
         __CTdiid_bool_cstV1_ID
    )
    ctrn of (
         __CToffs_sbyte_cstP8_ID
    )
}

andrule load_pm_wreg_indirect {
    ( enc {load_store_pm_wreg_indirect} @p 6 )
    ins : 96;
}

orrule load_store_instr {
    ( enc {load_store_instr} @p 0 )
    ins : 173;
    add_sp_byte ( enc {load_store_instr} @p 0 )
    ins : 114;
    add_sp_word ( enc {load_store_instr} @p 0 )
    ins : 113;
    load_store_pm_wreg_indirect ( enc {load_store_instr} @p 0 )
    ins : 175;
    load_store_wreg_indirect ( enc {load_store_instr} @p 0 )
    ins : 174;
    load_store_wreg_sp_indexed ( enc {load_store_instr} @p 0 )
    ins : 72;
}

orrule load_store_pm_wreg_indirect {
    ( enc {load_store_pm_wreg_indirect} @p 6 )
    ins : 175;
    load_pm_wreg_indirect ( enc {load_store_pm_wreg_indirect} @p 6 )
    ins : 96;
    store_pm_wreg_indirect ( enc {load_store_pm_wreg_indirect} @p 6 )
    ins : 104;
}

andrule load_store_wreg_indirect {
    ( enc {load_store_wreg_indirect} @p 6 )
    ins : 174;
}

andrule load_store_wreg_sp_indexed {
    ( enc {load_store_wreg_sp_indexed} @p 3 )
    ins : 72;
    ctrn offs (
         __CTag1m_nint9_cstP4_7_0_ID
    )
}

andrule loop {
    ( enc {l} @p 16 )
    ins : 127;
    ctrn last (
         __CTlew_addr_cstP16_E1
    )
}

andrule lr_reg {
    ( enc {lr_reg} @p 12 )
    ins : 195;
    ( enc {lr_reg} @p 16 )
    ins : 196;
}

andrule minmax_rrr {
    ( enc {minmax_rrr} @p 3 )
    ins : 148;
}

orrule move_instr {
    ( enc {move_instr} @p 0 )
    ins : 149;
    di ( enc {move_instr} @p 0 )
    ins : 172;
    ei ( enc {move_instr} @p 0 )
    ins : 65;
    mv_dbg_wreg ( enc {move_instr} @p 0 )
    ins : 69;
    mv_wreg ( enc {move_instr} @p 0 )
    ins : 150;
    mv_wreg_dbg ( enc {move_instr} @p 0 )
    ins : 70;
    mvi_im ( enc {move_instr} @p 0 )
    ins : 63;
    mvi_wreg_byte ( enc {move_instr} @p 0 )
    ins : 62;
    mvi_wreg_word ( enc {move_instr} @p 0 )
    ins : 61;
}

andrule mul_rr {
    ( enc {mul_rr} @p 3 )
    ins : 22;
}

andrule mv_dbg_wreg {
    ( enc {mv_dbg_wreg} @p 12 )
    ins : 69;
}

andrule mv_wreg {
    ( enc {mv_wreg} @p 8 )
    ins : 150;
}

andrule mv_wreg_dbg {
    ( enc {mv_wreg_dbg} @p 12 )
    ins : 70;
}

andrule mvi_im {
    ( enc {mvi_im} @p 8 )
    ins : 63;
    ctrn imm (
         __CTimw_ubyte_cstP8_E1
    )
}

andrule mvi_wreg_byte {
    ( enc {mvi_wreg_byte} @p 4 )
    ins : 62;
    ctrn imm (
         __CTwbus_sbyte_cstP4_E1
    )
}

andrule mvi_wreg_word {
    ( enc {mvi_wreg_word} @p 12 )
    ins : 61;
    ctrn imm (
         __CTwbus_word_cstP16_E1
    )
}

andrule nop {
    ( enc {nop} @p 16 )
    ins : 133;
}

andrule r_reg {
    ( enc {r_reg} @p 9 )
    ins : 47;
    ( enc {r_reg} @p 13 )
    ins : 197;
    ctrn r (
         __CTuint3_cstP9_E1
         __CTuint3_cstP13_E1
    )
}

andrule read_dma_ready {
    ( enc {read_dma_ready} @p 12 )
    ins : 137;
}

andrule ret {
    ( enc {ret} @p 16 )
    ins : 179;
}

andrule rr {
    ( enc {r} @p 10 )
    ins : 1;
    ctrn r (
         __CTuint3_cstP10_E1
    )
}

andrule rrid {
    ( enc {r} @p 7 )
    ins : 90;
    ctrn r (
         __CTuint3_cstP7_ID
    )
}

andrule rs {
    ( enc {s} @p 13 )
    ins : 144;
    ctrn r (
         __CTuint3_cstP13_E1
    )
}

andrule rt {
    ( enc {t} @p 7 )
    ins : 15;
    ctrn r (
         __CTuint3_cstP7_E1
    )
}

andrule rtd {
    ( enc {rtd} @p 16 )
    ins : 180;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
    )
}

andrule rti {
    ( enc {rti} @p 16 )
    ins : 130;
}

andrule select_rrr {
    ( enc {select_rrr} @p 3 )
    ins : 46;
}

andrule shift_rrr {
    ( enc {shift_rrr} @p 3 )
    ins : 18;
}

andrule sp_reg {
    ( enc {sp_reg} @p 12 )
    ins : 198;
    ( enc {sp_reg} @p 16 )
    ins : 199;
}

andrule sr_reg {
    ( enc {sr_reg} @p 12 )
    ins : 200;
    ( enc {sr_reg} @p 16 )
    ins : 201;
}

andrule store_pm_wreg_indirect {
    ( enc {load_store_pm_wreg_indirect} @p 6 )
    ins : 104;
}

andrule swbrk {
    ( enc {swbrk} @p 16 )
    ins : 132;
    ctrn  (
         __CTocd_swbreak_req_bool_cstV1_ID
    )
}

andrule swi {
    ( enc {swi} @p 12 )
    ins : 0;
    ctrn  (
         __CTdiid_bool_cstV1_ID
         __CTdie1_bool_cstV1_E1
         __CTiew_uint1_cstV0_E1
    )
    ctrn tg (
         __CTtrgt_uint4_cstP12_ID
    )
}

orrule tmicro {
    ( enc {} @p 0 )
    ins : 141;
    alu_instr ( enc {} @p 0 )
    ins : 142;
    control_instr ( enc {} @p 0 )
    ins : 176;
    dma ( enc {} @p 0 )
    ins : 181;
    ext_instr ( enc {} @p 0 )
    ins : 138;
    load_store_instr ( enc {} @p 0 )
    ins : 173;
    move_instr ( enc {} @p 0 )
    ins : 149;
}

orrule wreg {
    ( enc {dst} @p 8 )
    ins : 150;
    ( enc {src} @p 12 )
    ins : 151;
    ilr_reg ( enc {dst} @p 8 )
    ins : 191;
    ilr_reg ( enc {src} @p 12 )
    ins : 192;
    isr_reg ( enc {dst} @p 8 )
    ins : 193;
    isr_reg ( enc {src} @p 12 )
    ins : 194;
    lr_reg ( enc {dst} @p 8 )
    ins : 195;
    lr_reg ( enc {src} @p 12 )
    ins : 196;
    r_reg ( enc {dst} @p 8 )
    ins : 47;
    r_reg ( enc {src} @p 12 )
    ins : 197;
    sp_reg ( enc {dst} @p 8 )
    ins : 198;
    sp_reg ( enc {src} @p 12 )
    ins : 199;
    sr_reg ( enc {dst} @p 8 )
    ins : 200;
    sr_reg ( enc {src} @p 12 )
    ins : 201;
}

andrule write_dma_command {
    ( enc {write_dma_command} @p 10 )
    ins : 135;
    ctrn op (
         __CTcbus_uint2_cstP10_E1
    )
}

andrule write_dma_reset {
    ( enc {write_dma_reset} @p 16 )
    ins : 136;
    ctrn  (
         __CTcbus_uint2_cstV0_E1
    )
}

enum ag1_op{
    0 ( enc {op} @p 10 )
    ins : 202;
    1 ( enc {op} @p 10 )
    ins : 92;
    2 ( enc {op} @p 10 )
    ins : 93;
}

enum alu_op{
    0 ( enc {op} @p 3 )
    ins : 7;
    1 ( enc {op} @p 3 )
    ins : 9;
    2 ( enc {op} @p 3 )
    ins : 10;
    3 ( enc {op} @p 3 )
    ins : 11;
    4 ( enc {op} @p 3 )
    ins : 12;
    5 ( enc {op} @p 3 )
    ins : 13;
    6 ( enc {op} @p 3 )
    ins : 14;
    8 ( enc {op} @p 3 )
    ins : 19;
    9 ( enc {op} @p 3 )
    ins : 20;
    10 ( enc {op} @p 3 )
    ins : 21;
    14 ( enc {op} @p 3 )
    ins : 43;
    15 ( enc {op} @p 3 )
    ins : 44;
}

enum compare_op{
    0 ( enc {op} @p 7 )
    ins : 31;
    1 ( enc {op} @p 7 )
    ins : 32;
    2 ( enc {op} @p 7 )
    ins : 33;
    3 ( enc {op} @p 7 )
    ins : 34;
    4 ( enc {op} @p 7 )
    ins : 35;
    5 ( enc {op} @p 7 )
    ins : 36;
    6 ( enc {op} @p 7 )
    ins : 37;
    7 ( enc {op} @p 7 )
    ins : 38;
}

enum dma_op{
    1 ( enc {op} @p 10 )
    ins : 203;
    2 ( enc {op} @p 10 )
    ins : 204;
    3 ( enc {op} @p 10 )
    ins : 205;
}

enum equal_op{
    0 ( enc {op} @p 7 )
    ins : 39;
    1 ( enc {op} @p 7 )
    ins : 40;
}

enum load_store_op{
    0 ( enc {ls} @p 3 )
    ins : 74;
    0 ( enc {op} @p 6 )
    ins : 94;
    1 ( enc {ls} @p 3 )
    ins : 83;
    1 ( enc {op} @p 6 )
    ins : 95;
}

enum mul_op{
    0 ( enc {op} @p 7 )
    ins : 25;
    1 ( enc {op} @p 7 )
    ins : 26;
    3 ( enc {op} @p 7 )
    ins : 27;
}

enum stage_names{
}

enum unary_op{
    0 ( enc {op} @p 10 )
    ins : 41;
    1 ( enc {op} @p 10 )
    ins : 42;
}

