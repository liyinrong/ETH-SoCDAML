
// File generated by Go version O-2018.09#f5599cac26#190121, Tue May 28 10:45:22 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// go -B -I../lib -F -D__tct_patch__=300 -Verilog -otmicro_vlog -cgo_options.cfg -Itmicro_vlog/tmp_pdg -updg -updg_controller tmicro



`timescale 1ns/1ps

// module decoder : decoder
module decoder
  ( input         reset,
    input         clock,
    input         kill_ID_in,
    input         mcw_kill_in,
    input         trn_ID_valid_in,
    input  [15:0] trn_IR_ID,
    output [85:0] E1_enabling_out,
    output [25:0] ID_enabling_out,
    output  [2:0] R_ag1p_grad_out, // uint3
    output  [2:0] R_rre1_grad_out, // uint3
    output  [2:0] R_rse1_grad_out, // uint3
    output  [2:0] R_rtid_gwad_out, // uint3
    output  [2:0] __R_rte1_wad_out, // uint3
    output        issue_sig_out,
    output        mw_stall_out,
    output [15:0] reg_IR_E1_out,
    output [15:0] reg_IR_ID_out
  );


  parameter NOP = 16'b0010111000000000;

  reg    [85:0] E1_enabling;
  wire   [25:0] ID_enabling;
  wire   internal_mc_stall;
  wire   internal_mw_stall;
  reg    mc_reg;
  reg    mw_reg;
  wire   [1:0] new_mc_reg_val;
  wire   [1:0] new_mw_reg_val;
  reg    [85:0] predec_E1_enabling;
  reg    [25:0] predec_ID_enabling;
  reg    reg_ID_valid;
  reg    [15:0] reg_IR_E1;
  reg    [15:0] reg_IR_ID;
  wire   trn_E1_valid;

  reg en_R_ag1p_graddr_ID;
  reg [2:0] R_ag1p_graddr_ID;
  reg [2:0] r_R_ag1p_graddr;
  reg en_R_rre1_graddr_E1;
  reg [2:0] R_rre1_graddr_E1;
  reg [2:0] r_R_rre1_graddr;
  reg en_R_rse1_graddr_E1;
  reg [2:0] R_rse1_graddr_E1;
  reg [2:0] r_R_rse1_graddr;
  reg en___R_rte1_waddr_E1;
  reg [2:0] __R_rte1_waddr_E1;
  reg [2:0] r___R_rte1_waddr;
  reg en_R_rtid_gwaddr_ID;
  reg [2:0] R_rtid_gwaddr_ID;
  reg [2:0] r_R_rtid_gwaddr;
  // 15 register address bits

  function [1:0] decode_words (input [15:0]  ins);
    begin

      decode_words = 2'b00; // 1 word (default)
      if (
           ( ins[15:0] == 16'b0001011000111000) // 0001011000111000
        || ( ins[15:3] == 13'b0010010000010) // 0010010000010xxx
        || ( ins[15:4] == 12'b001001000001 && ins[2:1] == 2'b01) // 001001000001x01x
        || ( ins[15:4] == 12'b001001000001 && ins[2:1] == 2'b10) // 001001000001x10x
        || ( ins[15:4] == 12'b001001000001 && ins[1:0] == 2'b10) // 001001000001xx10
        || ( ins[15:4] == 12'b001011101001 && ins[2:0] == 3'b000) // 001011101001x000
        || ( ins[15:5] == 11'b00101110100 && ins[3:0] == 4'b0000) // 00101110100x0000
        || ( ins[15:3] == 13'b0010111011011) // 0010111011011xxx
         )
      begin
        decode_words = 2'b01; // 2 words
      end
      if (
           ( ins[15:0] == 16'b0010111011100000) // 0010111011100000
         )
      begin
        decode_words = 2'b11; // 3 words
      end
    end
  endfunction

  function [1:0] decode_cycles (input [15:0]  ins);
    begin

      decode_cycles = 2'b00; // 1 cycle (default)
      if (
           ( ins[15:0] == 16'b0001011000111000) // 0001011000111000
        || ( ins[15:3] == 13'b0010010000010) // 0010010000010xxx
        || ( ins[15:4] == 12'b001001000001 && ins[2:1] == 2'b01) // 001001000001x01x
        || ( ins[15:4] == 12'b001001000001 && ins[2:1] == 2'b10) // 001001000001x10x
        || ( ins[15:4] == 12'b001001000001 && ins[1:0] == 2'b10) // 001001000001xx10
        || ( ins[15:8] == 8'b00101101) // 00101101xxxxxxxx
        || ( ins[15:4] == 12'b001011100111) // 001011100111xxxx
        || ( ins[15:5] == 11'b00101110100 && ins[3:0] == 4'b0000) // 00101110100x0000
        || ( ins[15:3] == 13'b0010111011011) // 0010111011011xxx
        || ( ins[15:5] == 11'b00101110110 && ins[3:0] == 4'b1000) // 00101110110x1000
        || ( ins[15:7] == 9'b001011101 && ins[5:4] == 2'b01 && ins[2:0] == 3'b000) // 001011101x01x000
        || ( ins[15:8] == 8'b00101110 && ins[6:0] == 7'b1110000) // 00101110x1110000
        || ( ins[15:9] == 7'b0100010 && ins[5] == 1'b0 && ins[3] == 1'b0) // 0100010xxx0x0xxx
        || ( ins[15:9] == 7'b0100010 && ins[5] == 1'b0 && ins[2:1] == 2'b01) // 0100010xxx0xx01x
        || ( ins[15:9] == 7'b0100010 && ins[5] == 1'b0 && ins[2:1] == 2'b10) // 0100010xxx0xx10x
        || ( ins[15:9] == 7'b0100010 && ins[5] == 1'b0 && ins[1:0] == 2'b10) // 0100010xxx0xxx10
        || ( ins[15:9] == 7'b0100010 && ins[4:3] == 2'b00) // 0100010xxxx00xxx
        || ( ins[15:9] == 7'b0100010 && ins[4] == 1'b0 && ins[2:1] == 2'b01) // 0100010xxxx0x01x
        || ( ins[15:9] == 7'b0100010 && ins[4] == 1'b0 && ins[2:1] == 2'b10) // 0100010xxxx0x10x
        || ( ins[15:9] == 7'b0100010 && ins[4] == 1'b0 && ins[1:0] == 2'b10) // 0100010xxxx0xx10
         )
      begin
        decode_cycles = 2'b01; // 2 cycles
      end
      if (
           ( ins[15:3] == 13'b0010111010101) // 0010111010101xxx
        || ( ins[15:5] == 11'b00101110101 && ins[3:0] == 4'b1000) // 00101110101x1000
        || ( ins[15:0] == 16'b0010111011100000) // 0010111011100000
        || ( ins[15:9] == 7'b0100011 && ins[5] == 1'b0 && ins[3] == 1'b0) // 0100011xxx0x0xxx
        || ( ins[15:9] == 7'b0100011 && ins[5] == 1'b0 && ins[2:1] == 2'b01) // 0100011xxx0xx01x
        || ( ins[15:9] == 7'b0100011 && ins[5] == 1'b0 && ins[2:1] == 2'b10) // 0100011xxx0xx10x
        || ( ins[15:9] == 7'b0100011 && ins[5] == 1'b0 && ins[1:0] == 2'b10) // 0100011xxx0xxx10
        || ( ins[15:9] == 7'b0100011 && ins[4:3] == 2'b00) // 0100011xxxx00xxx
        || ( ins[15:9] == 7'b0100011 && ins[4] == 1'b0 && ins[2:1] == 2'b01) // 0100011xxxx0x01x
        || ( ins[15:9] == 7'b0100011 && ins[4] == 1'b0 && ins[2:1] == 2'b10) // 0100011xxxx0x10x
        || ( ins[15:9] == 7'b0100011 && ins[4] == 1'b0 && ins[1:0] == 2'b10) // 0100011xxxx0xx10
         )
      begin
        decode_cycles = 2'b11; // 3 cycles
      end
    end
  endfunction

  assign ID_enabling_out = (!kill_ID_in) ? ID_enabling : 0;
  assign E1_enabling_out = E1_enabling;

  assign reg_IR_E1_out = reg_IR_E1;
  assign reg_IR_ID_out = reg_IR_ID;

  assign mw_stall_out = internal_mw_stall;
  assign internal_mw_stall = mw_reg | new_mw_reg_val[0];
  assign new_mw_reg_val = (reg_ID_valid) ? decode_words(reg_IR_ID) : 2'b00;

  always @ (posedge clock or posedge reset)
  begin
    if (reset)
      mw_reg <= 0;
    else
    begin
      if (mcw_kill_in)
        mw_reg <= 0;
      else
      begin
        if (mw_reg == 0)
          mw_reg <= new_mw_reg_val[1];
        else
        begin
          mw_reg <= 1'b0;
        end
      end
    end
  end

  assign issue_sig_out = !internal_mc_stall;
  assign internal_mc_stall = mc_reg | new_mc_reg_val[0];
  assign new_mc_reg_val = (reg_ID_valid) ? decode_cycles(reg_IR_ID) : 2'b00;

  always @ (posedge clock or posedge reset)
  begin
    if (reset)
      mc_reg <= 0;
    else
    begin
      if (mcw_kill_in)
        mc_reg <= 0;
      else
      begin
        if (mc_reg == 0)
          mc_reg <= new_mc_reg_val[1];
        else
        begin
          mc_reg <= 1'b0;
        end
      end
    end
  end

  always @ (*)
  begin : decode_ID
    reg en_ag1_ohe_sel_ID;
    reg [2:0] en_controller_bin_sel_ID;
    reg en_reg_R_ohe_sel_ID;
    reg en_reg_LR_ohe_sel_ID;
    reg en_reg_SP_ohe_sel_ID;
    reg en_reg_ILR_ohe_sel_ID;
    reg en_mem_PM_ohe_sel_ID;
    reg en_mem_DM_ohe_sel_ID;
    reg en_mux_pm_addr_ohe_sel_ID;
    reg [1:0] en_mux_dm_addr_bin_sel_ID;
    reg [1:0] en_mux_ag1p_bin_sel_ID;
    reg [2:0] en_mux_ag1m_bin_sel_ID;
    reg [1:0] en_mux_trgt_bin_sel_ID;
    reg en_mux_offs_ohe_sel_ID;
    reg en_mux_diid_ohe_sel_ID;
    reg en_mux_ocd_swbreak_req_ohe_sel_ID;
    reg en_mux___pm_addr_pipe_w_ohe_sel_ID;
    reg [1:0] en_mux___dm_addr_pipe_w_bin_sel_ID;


    en_R_ag1p_graddr_ID = 0;
    R_ag1p_graddr_ID = 0;
    en_R_rtid_gwaddr_ID = 0;
    R_rtid_gwaddr_ID = 0;

    en_ag1_ohe_sel_ID = 0; // ag1
    en_controller_bin_sel_ID = 0; // controller
    en_reg_R_ohe_sel_ID = 0; // reg_R
    en_reg_LR_ohe_sel_ID = 0; // reg_LR
    en_reg_SP_ohe_sel_ID = 0; // reg_SP
    en_reg_ILR_ohe_sel_ID = 0; // reg_ILR
    en_mem_PM_ohe_sel_ID = 0; // mem_PM
    en_mem_DM_ohe_sel_ID = 0; // mem_DM
    en_mux_pm_addr_ohe_sel_ID = 0; // mux_pm_addr
    en_mux_dm_addr_bin_sel_ID = 0; // mux_dm_addr
    en_mux_ag1p_bin_sel_ID = 0; // mux_ag1p
    en_mux_ag1m_bin_sel_ID = 0; // mux_ag1m
    en_mux_trgt_bin_sel_ID = 0; // mux_trgt
    en_mux_offs_ohe_sel_ID = 0; // mux_offs
    en_mux_diid_ohe_sel_ID = 0; // mux_diid
    en_mux_ocd_swbreak_req_ohe_sel_ID = 0; // mux_ocd_swbreak_req
    en_mux___pm_addr_pipe_w_ohe_sel_ID = 0; // mux___pm_addr_pipe_w
    en_mux___dm_addr_pipe_w_bin_sel_ID = 0; // mux___dm_addr_pipe_w

    if (reg_ID_valid)
    begin
      if (
           ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 01000xxxxx0x0xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxx0xx01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxx0xx10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxx0xxx10
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[4:3] == 2'b00) // 01000xxxxxx00xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxxx0x01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxxx0x10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxxx0xx10
         )
      begin
        en_R_ag1p_graddr_ID = 1'b1;
        R_ag1p_graddr_ID = reg_IR_ID[8:6]; // R_ag1p_graddr_cp___CTuint3_cstP7_ID_ID [load_store.n:75][load_store.n:76][load_store.n:77](tmicro.n:154)
        en_mux_ag1p_bin_sel_ID = 2'b01; // ag1p_copy_ag1p1_ID [load_store.n:75][load_store.n:76][load_store.n:77](tmicro.n:154)
      end
      if (
           ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:3] == 3'b010) // 01000xxxxx010xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxx01x01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxx01x10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxx01xx10
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:3] == 3'b100) // 01000xxxxx100xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxx10x01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxx10x10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxx10xx10
         )
      begin
        en_R_rtid_gwaddr_ID = 1'b1;
        R_rtid_gwaddr_ID = reg_IR_ID[8:6]; // R_rtid_gwaddr_cp___CTuint3_cstP7_ID_ID [load_store.n:76][load_store.n:77](tmicro.n:154)
        en_reg_R_ohe_sel_ID = 1'b1; // R_wr_rtid_R_rtid_gwad_ID [load_store.n:76][load_store.n:77](tmicro.n:154)
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0001011000111000) // 0001011000111000
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[3] == 1'b0) // 011xxxxxxxxx0xxx
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b01) // 011xxxxxxxxxx01x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b10) // 011xxxxxxxxxx10x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[1:0] == 2'b10) // 011xxxxxxxxxxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:3] == 3'b010) // 01x00xxxxx010xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b01) // 01x00xxxxx01x01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b10) // 01x00xxxxx01x10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[1:0] == 2'b10) // 01x00xxxxx01xx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:3] == 3'b100) // 01x00xxxxx100xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b01) // 01x00xxxxx10x01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b10) // 01x00xxxxx10x10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[1:0] == 2'b10) // 01x00xxxxx10xx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12] == 1'b1 && reg_IR_ID[3:0] == 4'b0000) // 01x1xxxxxxxx0000
         )
      begin
        en_ag1_ohe_sel_ID = 1'b1; // ag1q_add_ag1p_ag1m_ag1_ID [load_store.n:46][load_store.n:76][load_store.n:77][load_store.n:138][load_store.n:145]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111010011000) // 0010111010011000
         )
      begin
        en_controller_bin_sel_ID = 3'b001; // lnk_pf_bsr_trgt_ID [control.n:132]
        en_reg_LR_ohe_sel_ID = 1'b1; // LR_wr___lnk_pf_w_LR_ID [control.n:132]
      end
      if (
           ( reg_IR_ID[15:4] == 12'b001011100111) // 001011100111xxxx
         )
      begin
        en_controller_bin_sel_ID = 3'b010; // lnk_if_jti_trgt_ID [control.n:220]
        en_reg_ILR_ohe_sel_ID = 1'b1; // ILR_wr___lnk_if_w_ILR_ID [control.n:220]
        en_mux_trgt_bin_sel_ID = 2'b10; // trgt_copy0___CTuint4_cstP12_ID [control.n:220]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111011010000) // 0010111011010000
         )
      begin
        en_controller_bin_sel_ID = 3'b011; // vd_halt_ID [control.n:249]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111010000000) // 0010111010000000
         )
      begin
        en_controller_bin_sel_ID = 3'b100; // vd_jump_trgt_ID [control.n:105]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0010110) // 0010110xxxxxxxxx
         )
      begin
        en_controller_bin_sel_ID = 3'b101; // vd_jump_offs_ID [control.n:76][control.n:83]
        en_mux_offs_ohe_sel_ID = 1'b1; // offs_copy0___CTsbyte_cstP8_ID [control.n:76][control.n:83]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111011001000) // 0010111011001000
         )
      begin
        en_controller_bin_sel_ID = 3'b110; // vd_rti_trgt_ID [control.n:235]
        en_mux_trgt_bin_sel_ID = 2'b11; // trgt_copy0___trgt_r_ILR_ID [control.n:235]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0001011000111000) // 0001011000111000
        || ( reg_IR_ID[15:12] == 4'b0101 && reg_IR_ID[3:0] == 4'b0000) // 0101xxxxxxxx0000
         )
      begin
        en_reg_SP_ohe_sel_ID = 1'b1; // SP_wr_ag1q_ID [load_store.n:138][load_store.n:145]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100010xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100010xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100010xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100010xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:3] == 2'b00) // 0100010xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100010xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100010xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100010xxxx0xx10
         )
      begin
        en_mem_PM_ohe_sel_ID = 1'b1; // mem_enab_pm_read_ld_PM_pm_addr_ID [load_store.n:116]
                                     // cp_extad_pm_read_ld_PM_pm_addr_ID [load_store.n:116]
        en_mux_pm_addr_ohe_sel_ID = 1'b1; // pm_addr_copy0_ag1p_ID [load_store.n:115]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b01) // 0110xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b10) // 0110xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[1:0] == 2'b10) // 0110xxxxxxxxxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 01x0000xxx0x0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01x0000xxx0xx01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01x0000xxx0xx10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01x0000xxx0xxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:3] == 2'b00) // 01x0000xxxx00xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01x0000xxxx0x01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01x0000xxxx0x10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01x0000xxxx0xx10
         )
      begin
        en_mem_DM_ohe_sel_ID = 1'b1; // mem_enab_dm_read_ld_DM_dm_addr_ID [load_store.n:51][load_store.n:93]
                                     // cp_extad_dm_read_ld_DM_dm_addr_ID [load_store.n:51][load_store.n:93]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100000xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100000xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100000xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100000xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[4:3] == 2'b00) // 0100000xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100000xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100000xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100000xxxx0xx10
         )
      begin
        en_mux_dm_addr_bin_sel_ID = 2'b01; // dm_addr_copy0_ag1p_ID [load_store.n:92]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b01) // 0110xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b10) // 0110xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[1:0] == 2'b10) // 0110xxxxxxxxxx10
         )
      begin
        en_mux_dm_addr_bin_sel_ID = 2'b10; // dm_addr_copy0_ag1q_ID [load_store.n:50]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0001011000111000) // 0001011000111000
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[3] == 1'b0) // 011xxxxxxxxx0xxx
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b01) // 011xxxxxxxxxx01x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b10) // 011xxxxxxxxxx10x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[1:0] == 2'b10) // 011xxxxxxxxxxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12] == 1'b1 && reg_IR_ID[3:0] == 4'b0000) // 01x1xxxxxxxx0000
         )
      begin
        en_mux_ag1p_bin_sel_ID = 2'b10; // ag1p_copy_ag1p2_ID [load_store.n:46][load_store.n:138][load_store.n:145]
      end
      if (
           ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[3] == 1'b0) // 011xxxxxxxxx0xxx
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b01) // 011xxxxxxxxxx01x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[2:1] == 2'b10) // 011xxxxxxxxxx10x
        || ( reg_IR_ID[15:13] == 3'b011 && reg_IR_ID[1:0] == 2'b10) // 011xxxxxxxxxxx10
         )
      begin
        en_mux_ag1m_bin_sel_ID = 3'b001; // ag1m_copy0___CTnint9_cstP4_7_0_ID [load_store.n:46]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0101 && reg_IR_ID[3:0] == 4'b0000) // 0101xxxxxxxx0000
         )
      begin
        en_mux_ag1m_bin_sel_ID = 3'b010; // ag1m_copy0___CTsbyte_cstP4_ID [load_store.n:145]
      end
      if (
           ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:3] == 3'b010) // 01000xxxxx010xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxx01x01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxx01x10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b01 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxx01xx10
         )
      begin
        en_mux_ag1m_bin_sel_ID = 3'b011; // ag1m_copy0___CTword_cstV1_ID [load_store.n:76]
      end
      if (
           ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:3] == 3'b100) // 01000xxxxx100xxx
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b01) // 01000xxxxx10x01x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[2:1] == 2'b10) // 01000xxxxx10x10x
        || ( reg_IR_ID[15:11] == 5'b01000 && reg_IR_ID[5:4] == 2'b10 && reg_IR_ID[1:0] == 2'b10) // 01000xxxxx10xx10
         )
      begin
        en_mux_ag1m_bin_sel_ID = 3'b100; // ag1m_copy0___CTword_cstVm1_ID [load_store.n:77]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0001011000111000) // 0001011000111000
         )
      begin
        en_mux_ag1m_bin_sel_ID = 3'b101; // ag1m_copy0___CTword_cstP16_ID [load_store.n:138]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111010000000) // 0010111010000000
        || ( reg_IR_ID[15:0] == 16'b0010111010011000) // 0010111010011000
         )
      begin
        en_mux_trgt_bin_sel_ID = 2'b01; // trgt_copy0___CTaddr_cstP16_ID [control.n:105][control.n:132]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010011000100001) // 0010011000100001
        || ( reg_IR_ID[15:8] == 8'b00101100) // 00101100xxxxxxxx
        || ( reg_IR_ID[15:8] == 8'b00101111) // 00101111xxxxxxxx
        || ( reg_IR_ID[15:10] == 6'b001011 && reg_IR_ID[8:4] == 5'b00111) // 001011x00111xxxx
        || ( reg_IR_ID[15:10] == 6'b001011 && reg_IR_ID[8:3] == 6'b010100) // 001011x010100xxx
        || ( reg_IR_ID[15:10] == 6'b001011 && reg_IR_ID[8:5] == 4'b0110 && reg_IR_ID[3:0] == 4'b0000) // 001011x0110x0000
         )
      begin
        en_mux_diid_ohe_sel_ID = 1'b1; // diid_copy0___CTbool_cstV1_ID [move.n:84][control.n:76][control.n:92][control.n:142][control.n:161][control.n:221][control.n:250]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111011110000) // 0010111011110000
         )
      begin
        en_mux_ocd_swbreak_req_ohe_sel_ID = 1'b1; // ocd_swbreak_req_copy0___CTbool_cstV1_ID [control.n:262]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100011xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100011xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100011xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100011xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:3] == 2'b00) // 0100011xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100011xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100011xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100011xxxx0xx10
         )
      begin
        en_mux___pm_addr_pipe_w_ohe_sel_ID = 1'b1; // pm_addr_pipe_copy0_ag1p_ID [load_store.n:127]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100001xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100001xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100001xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100001xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:3] == 2'b00) // 0100001xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100001xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100001xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100001xxxx0xx10
         )
      begin
        en_mux___dm_addr_pipe_w_bin_sel_ID = 2'b01; // dm_addr_pipe_copy0_ag1p_ID [load_store.n:96]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3] == 1'b0) // 0111xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[2:1] == 2'b01) // 0111xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[2:1] == 2'b10) // 0111xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[1:0] == 2'b10) // 0111xxxxxxxxxx10
         )
      begin
        en_mux___dm_addr_pipe_w_bin_sel_ID = 2'b10; // dm_addr_pipe_copy0_ag1q_ID [load_store.n:54]
      end
    end
    predec_ID_enabling[0] = en_ag1_ohe_sel_ID;
    predec_ID_enabling[3:1] = en_controller_bin_sel_ID;
    predec_ID_enabling[4] = en_reg_R_ohe_sel_ID;
    predec_ID_enabling[5] = en_reg_LR_ohe_sel_ID;
    predec_ID_enabling[6] = en_reg_SP_ohe_sel_ID;
    predec_ID_enabling[7] = en_reg_ILR_ohe_sel_ID;
    predec_ID_enabling[8] = en_mem_PM_ohe_sel_ID;
    predec_ID_enabling[9] = en_mem_DM_ohe_sel_ID;
    predec_ID_enabling[10] = en_mux_pm_addr_ohe_sel_ID;
    predec_ID_enabling[12:11] = en_mux_dm_addr_bin_sel_ID;
    predec_ID_enabling[14:13] = en_mux_ag1p_bin_sel_ID;
    predec_ID_enabling[17:15] = en_mux_ag1m_bin_sel_ID;
    predec_ID_enabling[19:18] = en_mux_trgt_bin_sel_ID;
    predec_ID_enabling[20] = en_mux_offs_ohe_sel_ID;
    predec_ID_enabling[21] = en_mux_diid_ohe_sel_ID;
    predec_ID_enabling[22] = en_mux_ocd_swbreak_req_ohe_sel_ID;
    predec_ID_enabling[23] = en_mux___pm_addr_pipe_w_ohe_sel_ID;
    predec_ID_enabling[25:24] = en_mux___dm_addr_pipe_w_bin_sel_ID;
  end

  always @ (*)
  begin : decode_E1
    reg [1:0] en_dlflg_bin_sel_E1;
    reg [4:0] en_alu_bin_sel_E1;
    reg [1:0] en_sh_bin_sel_E1;
    reg [1:0] en_mul_bin_sel_E1;
    reg [2:0] en_controller_bin_sel_E1;
    reg en_reg_R_ohe_sel_E1;
    reg [1:0] en_reg_R_bin_sel_E1;
    reg [2:0] en_reg_LR_bin_sel_E1;
    reg [1:0] en_reg_SP_bin_sel_E1;
    reg en_reg_LF_ohe_sel_E1;
    reg en_reg_LS_ohe_sel_E1;
    reg en_reg_LE_ohe_sel_E1;
    reg en_reg_LC_ohe_sel_E1;
    reg en_reg_CND_ohe_sel_E1;
    reg [2:0] en_reg_CND_bin_sel_E1;
    reg [2:0] en_reg_CB_bin_sel_E1;
    reg [2:0] en_reg_IE_bin_sel_E1;
    reg [1:0] en_reg_SRa_bin_sel_E1;
    reg [1:0] en_reg_SRb_bin_sel_E1;
    reg [2:0] en_reg_IM_bin_sel_E1;
    reg [1:0] en_reg_ILR_bin_sel_E1;
    reg [1:0] en_reg_ISR_bin_sel_E1;
    reg en_reg_ocd_data_ohe_sel_E1;
    reg [1:0] en_mem_PM_bin_sel_E1;
    reg [1:0] en_mem_DM_bin_sel_E1;
    reg en_mux_pm_addr_ohe_sel_E1;
    reg [2:0] en_mux_pm_write_bin_sel_E1;
    reg en_mux_dm_addr_ohe_sel_E1;
    reg [2:0] en_mux_dm_write_bin_sel_E1;
    reg [2:0] en_mux_rte1_bin_sel_E1;
    reg en_mux_lfw_ohe_sel_E1;
    reg [1:0] en_mux_lcw_bin_sel_E1;
    reg [1:0] en_mux_iew_bin_sel_E1;
    reg [1:0] en_mux_mulx_bin_sel_E1;
    reg [1:0] en_mux_muly_bin_sel_E1;
    reg [3:0] en_mux_wbus_bin_sel_E1;
    reg [1:0] en_mux_trgt_bin_sel_E1;
    reg en_mux_offs_ohe_sel_E1;
    reg en_mux_tcc_ohe_sel_E1;
    reg en_mux_die1_ohe_sel_E1;
    reg en_mux_jcr_ohe_sel_E1;
    reg en_mux_jc_ohe_sel_E1;
    reg [1:0] en_mux_cbus_bin_sel_E1;
    reg en_mux___LC_lcw_wad_ohe_sel_E1;


    en_R_rre1_graddr_E1 = 0;
    R_rre1_graddr_E1 = 0;
    en_R_rse1_graddr_E1 = 0;
    R_rse1_graddr_E1 = 0;
    en___R_rte1_waddr_E1 = 0;
    __R_rte1_waddr_E1 = 0;

    en_dlflg_bin_sel_E1 = 0;
    en_alu_bin_sel_E1 = 0;
    en_sh_bin_sel_E1 = 0;
    en_mul_bin_sel_E1 = 0;
    en_controller_bin_sel_E1 = 0;
    en_reg_R_ohe_sel_E1 = 0;
    en_reg_R_bin_sel_E1 = 0;
    en_reg_LR_bin_sel_E1 = 0;
    en_reg_SP_bin_sel_E1 = 0;
    en_reg_LF_ohe_sel_E1 = 0;
    en_reg_LS_ohe_sel_E1 = 0;
    en_reg_LE_ohe_sel_E1 = 0;
    en_reg_LC_ohe_sel_E1 = 0;
    en_reg_CND_ohe_sel_E1 = 0;
    en_reg_CND_bin_sel_E1 = 0;
    en_reg_CB_bin_sel_E1 = 0;
    en_reg_IE_bin_sel_E1 = 0;
    en_reg_SRa_bin_sel_E1 = 0;
    en_reg_SRb_bin_sel_E1 = 0;
    en_reg_IM_bin_sel_E1 = 0;
    en_reg_ILR_bin_sel_E1 = 0;
    en_reg_ISR_bin_sel_E1 = 0;
    en_reg_ocd_data_ohe_sel_E1 = 0;
    en_mem_PM_bin_sel_E1 = 0;
    en_mem_DM_bin_sel_E1 = 0;
    en_mux_pm_addr_ohe_sel_E1 = 0;
    en_mux_pm_write_bin_sel_E1 = 0;
    en_mux_dm_addr_ohe_sel_E1 = 0;
    en_mux_dm_write_bin_sel_E1 = 0;
    en_mux_rte1_bin_sel_E1 = 0;
    en_mux_lfw_ohe_sel_E1 = 0;
    en_mux_lcw_bin_sel_E1 = 0;
    en_mux_iew_bin_sel_E1 = 0;
    en_mux_mulx_bin_sel_E1 = 0;
    en_mux_muly_bin_sel_E1 = 0;
    en_mux_wbus_bin_sel_E1 = 0;
    en_mux_trgt_bin_sel_E1 = 0;
    en_mux_offs_ohe_sel_E1 = 0;
    en_mux_tcc_ohe_sel_E1 = 0;
    en_mux_die1_ohe_sel_E1 = 0;
    en_mux_jcr_ohe_sel_E1 = 0;
    en_mux_jc_ohe_sel_E1 = 0;
    en_mux_cbus_bin_sel_E1 = 0;
    en_mux___LC_lcw_wad_ohe_sel_E1 = 0;

    if (trn_E1_valid)
    begin
      if (
           ( reg_IR_ID[15:12] == 4'b0000) // 0000xxxxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b00) // 000x00xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b11) // 000x11xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10] == 1'b0 && reg_IR_ID[8:7] == 2'b00) // 000xx0x00xxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10:9] == 2'b10) // 000xx10xxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[9:8] == 2'b00 && reg_IR_ID[6] == 1'b1) // 000xxx00x1xxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[9] == 1'b0 && reg_IR_ID[7:6] == 2'b00) // 000xxx0x00xxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:9] == 4'b0001) // 00x0001xxxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b1100000) // 1100000xxxxxxxxx
         )
      begin
        en_R_rre1_graddr_E1 = 1'b1;
        R_rre1_graddr_E1 = reg_IR_ID[5:3]; // R_rre1_graddr_cp___CTuint3_cstP10_E1_E1 [alu.n:65][alu.n:183][alu.n:215][alu.n:232][alu.n:86][alu.n:107][alu.n:137][alu.n:153][alu.n:166](tmicro.n:159)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0000) // 0000xxxxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b00) // 000x00xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b11) // 000x11xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10] == 1'b0 && reg_IR_ID[8:7] == 2'b00) // 000xx0x00xxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10:9] == 2'b10) // 000xx10xxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10] == 1'b1 && reg_IR_ID[5:4] == 2'b00) // 000xx1xxxx00xxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[9:8] == 2'b00 && reg_IR_ID[6] == 1'b1) // 000xxx00x1xxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:9] == 4'b0001) // 00x0001xxxxxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:7] == 6'b001010 && reg_IR_ID[3] == 1'b0) // 00x001010xxx0xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:8] == 5'b00101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3] == 1'b0) // 00x00101x01x0xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:8] == 5'b00101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3] == 1'b0) // 00x00101x10x0xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:8] == 5'b00101 && reg_IR_ID[5:3] == 3'b100) // 00x00101xx100xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[9:3] == 7'b1000010) // 00x00x1000010xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:4] == 9'b011101010) // 00x011101010xxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:3] == 10'b0111011011) // 00x0111011011xxx
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3] == 1'b0) // 0111xxxxxxxx0xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:11] == 3'b000 && reg_IR_ID[9] == 1'b1 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0x000x1xxx0x0xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:11] == 3'b000 && reg_IR_ID[9] == 1'b1 && reg_IR_ID[4:3] == 2'b00) // 0x000x1xxxx00xxx
        || ( reg_IR_ID[14:5] == 10'b0000000001 && reg_IR_ID[3] == 1'b0) // x0000000001x0xxx
        || ( reg_IR_ID[14:6] == 9'b000000000 && reg_IR_ID[4:3] == 2'b10) // x000000000x10xxx
         )
      begin
        en_R_rse1_graddr_E1 = 1'b1;
        R_rse1_graddr_E1 = reg_IR_ID[2:0]; // R_rse1_graddr_cp___CTuint3_cstP13_E1_E1 [alu.n:66][alu.n:184][alu.n:216][alu.n:87][alu.n:108][alu.n:122][alu.n:138][alu.n:154][move.n:48][move.n:96][load_store.n:57][load_store.n:99][load_store.n:130][control.n:112][control.n:145][control.n:191][dma.n:51](tmicro.n:160)(tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:11] == 5'b00000) // 00000xxxxxxxxxxx
        || ( reg_IR_ID[15:12] == 4'b0000 && reg_IR_ID[10] == 1'b0) // 0000x0xxxxxxxxxx
        || ( reg_IR_ID[15:10] == 6'b000111) // 000111xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b00) // 000x00xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11] == 1'b0 && reg_IR_ID[5:4] == 2'b00) // 000x0xxxxx00xxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10:9] == 2'b10) // 000xx10xxxxxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:9] == 4'b0001) // 00x0001xxxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b1100000) // 1100000xxxxxxxxx
         )
      begin
        en___R_rte1_waddr_E1 = 1'b1;
        __R_rte1_waddr_E1 = reg_IR_ID[8:6]; // __R_rte1_waddr_cp___CTuint3_cstP7_E1_E1 [alu.n:76][alu.n:190][alu.n:127][alu.n:143][alu.n:156][alu.n:168](tmicro.n:161)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3] == 1'b0) // 001001010xxx0xxx
        || ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[2:1] == 2'b01) // 001001010xxxx01x
        || ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[2:1] == 2'b10) // 001001010xxxx10x
        || ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[1:0] == 2'b10) // 001001010xxxxx10
         )
      begin
        en___R_rte1_waddr_E1 = 1'b1;
        __R_rte1_waddr_E1 = reg_IR_ID[6:4]; // __R_rte1_waddr_cp___CTuint3_cstP9_E1_E1 [move.n:48](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3] == 1'b0) // 0011xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[9] == 1'b0 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 01x00x0xxx0x0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:11] == 2'b00 && reg_IR_ID[9] == 1'b0 && reg_IR_ID[4:3] == 2'b00) // 01x00x0xxxx00xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:3] == 11'b10010000010) // 0x10010000010xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:3] == 11'b10011000000) // 0x10011000000xxx
        || ( reg_IR_ID[15:3] == 13'b1000000001000) // 1000000001000xxx
         )
      begin
        en___R_rte1_waddr_E1 = 1'b1;
        __R_rte1_waddr_E1 = reg_IR_ID[2:0]; // __R_rte1_waddr_cp___CTuint3_cstP13_E1_E1 [move.n:55][move.n:62][move.n:106][load_store.n:51][load_store.n:93][load_store.n:116][dma.n:70](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111011101000) // 0010111011101000
         )
      begin
        en_dlflg_bin_sel_E1 = 2'b01; // lfw_decr_lfr_dlflg_E1 [control.n:211]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010111011011) // 0010111011011xxx
        || ( reg_IR_ID[15:0] == 16'b0010111011100000) // 0010111011100000
         )
      begin
        en_dlflg_bin_sel_E1 = 2'b10; // lfw_incr_lfr_dlflg_E1 [control.n:177]
        en_controller_bin_sel_E1 = 3'b010; // vd_hwdo_lcw_lew_E1 [control.n:175]
        en_reg_LS_ohe_sel_E1 = 1'b1; // LS_wr_lsw___LS_lsw_wad_E1 [control.n:179]
        en_reg_LE_ohe_sel_E1 = 1'b1; // LE_wr_lew___LE_lew_wad_E1 [control.n:178]
        en_reg_LC_ohe_sel_E1 = 1'b1; // LC_wr_lcw___LC_lcw_wad_E1 [control.n:180]
        en_mux___LC_lcw_wad_ohe_sel_E1 = 1'b1; // __LC_lcw_wad_copy0_lfw_E1 [control.n:180]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001101000) // 0001101000xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00001; // cndw_eq_alur_alus_alu_E1 [alu.n:110]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111110) // 0000111110xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00010; // cndw_ges_alur_alus_alu_E1 [alu.n:95]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111111) // 0000111111xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00011; // cndw_geu_alur_alus_alu_E1 [alu.n:96]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111100) // 0000111100xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00100; // cndw_gts_alur_alus_alu_E1 [alu.n:93]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111101) // 0000111101xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00101; // cndw_gtu_alur_alus_alu_E1 [alu.n:94]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111010) // 0000111010xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00110; // cndw_les_alur_alus_alu_E1 [alu.n:91]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111011) // 0000111011xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b00111; // cndw_leu_alur_alus_alu_E1 [alu.n:92]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111000) // 0000111000xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01000; // cndw_lts_alur_alus_alu_E1 [alu.n:89]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0000111001) // 0000111001xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01001; // cndw_ltu_alur_alus_alu_E1 [alu.n:90]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001101001) // 0001101001xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01010; // cndw_ne_alur_alus_alu_E1 [alu.n:111]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001100100) // 0001100100xxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01011; // vd_divstep_alur_mulu_mulv_mulx_muly_alu_E1 [alu.n:232]
        en_mux_mulx_bin_sel_E1 = 2'b01; // mulx_copy_mulx1_E1 [alu.n:232]
        en_mux_muly_bin_sel_E1 = 2'b01; // muly_copy_muly1_E1 [alu.n:232]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000000) // 0000000xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01100; // alut_add_alur_alus_cbw_alu_E1 [alu.n:68]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000001) // 0000001xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01101; // alut_addc_alur_alus_cbr_cbw_alu_E1 [alu.n:69]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000100) // 0000100xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01110; // alut_andw_alur_alus_alu_E1 [alu.n:72]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001011 && reg_IR_ID[5:3] == 3'b000) // 0001011xxx000xxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b01111; // alut_complement_alus_alu_E1 [alu.n:124]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b1100000) // 1100000xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10000; // alut_ext_abs_alur_alu_E1 [alu.n:167]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001011 && reg_IR_ID[5:3] == 3'b001) // 0001011xxx001xxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10001; // alut_extend_sign_alus_alu_E1 [alu.n:125]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001111) // 0001111xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10010; // alut_maxw_alur_alus_alu_E1 [alu.n:141]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001110) // 0001110xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10011; // alut_minw_alur_alus_alu_E1 [alu.n:140]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000101) // 0000101xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10100; // alut_orw_alur_alus_alu_E1 [alu.n:73]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0010001) // 0010001xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10101; // alut_select_cndr_alur_alus_alu_E1 [alu.n:155]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000010) // 0000010xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10110; // alut_sub_alur_alus_cbw_alu_E1 [alu.n:70]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000011) // 0000011xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b10111; // alut_subb_alur_alus_cbr_cbw_alu_E1 [alu.n:71]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000110) // 0000110xxxxxxxxx
         )
      begin
        en_alu_bin_sel_E1 = 5'b11000; // alut_xorw_alur_alus_alu_E1 [alu.n:74]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001000) // 0001000xxxxxxxxx
         )
      begin
        en_sh_bin_sel_E1 = 2'b01; // sht_asr_shr_shf_sh_E1 [alu.n:186]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001010) // 0001010xxxxxxxxx
         )
      begin
        en_sh_bin_sel_E1 = 2'b10; // sht_lsl_shr_shf_sh_E1 [alu.n:188]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0001001) // 0001001xxxxxxxxx
         )
      begin
        en_sh_bin_sel_E1 = 2'b11; // sht_lsr_shr_shf_sh_E1 [alu.n:187]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001100011) // 0001100011xxxxxx
         )
      begin
        en_mul_bin_sel_E1 = 2'b01; // vd_mulss_mulr_muls_mulx_acc_muly_acc_mul_E1 [alu.n:220]
                                   // muly_add_mulx_acc_mulv_mul_E1 [alu.n:221]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001100000) // 0001100000xxxxxx
         )
      begin
        en_mul_bin_sel_E1 = 2'b10; // vd_mulss_mulr_muls_mulx_muly_mul_E1 [alu.n:218]
      end
      if (
           ( reg_IR_ID[15:6] == 10'b0001100001) // 0001100001xxxxxx
         )
      begin
        en_mul_bin_sel_E1 = 2'b11; // vd_muluu_mulr_muls_mulx_muly_mul_E1 [alu.n:219]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010111010100) // 0010111010100xxx
         )
      begin
        en_controller_bin_sel_E1 = 3'b001; // lnk_pf_bsr_trgt_E1 [control.n:145]
        en_reg_LR_bin_sel_E1 = 3'b100; // LR_wr___lnk_pf_w_LR_E1 [control.n:145]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010111010101) // 0010111010101xxx
         )
      begin
        en_controller_bin_sel_E1 = 3'b011; // vd_jump_trgt_E1 [control.n:112]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111010010000) // 0010111010010000
         )
      begin
        en_controller_bin_sel_E1 = 3'b100; // vd_jump_tcc_trgt_E1 [control.n:122]
        en_mux_trgt_bin_sel_E1 = 2'b01; // trgt_copy0___CTaddr_cstP16_E1 [control.n:122]
        en_mux_jc_ohe_sel_E1 = 1'b1; // jc_copy0___CTbool_cstV1_E1 [control.n:123]
      end
      if (
           ( reg_IR_ID[15:8] == 8'b00101111) // 00101111xxxxxxxx
         )
      begin
        en_controller_bin_sel_E1 = 3'b101; // vd_jump_tcc_offs_E1 [control.n:96]
        en_mux_offs_ohe_sel_E1 = 1'b1; // offs_copy0___CTsbyte_cstP8_E1 [control.n:96]
        en_mux_jcr_ohe_sel_E1 = 1'b1; // jcr_copy0___CTbool_cstV1_E1 [control.n:97]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111010111000) // 0010111010111000
        || ( reg_IR_ID[15:0] == 16'b0010111011000000) // 0010111011000000
         )
      begin
        en_controller_bin_sel_E1 = 3'b110; // vd_ret_trgt_E1 [control.n:153][control.n:162]
        en_mux_trgt_bin_sel_E1 = 2'b10; // trgt_copy0___trgt_r_LR_E1 [control.n:153][control.n:162]
      end
      if (
           ( reg_IR_ID[15:7] == 9'b000110000) // 000110000xxxxxxx
        || ( reg_IR_ID[15:8] == 8'b00011000 && reg_IR_ID[6] == 1'b1) // 00011000x1xxxxxx
        || ( reg_IR_ID[15:9] == 7'b0001100 && reg_IR_ID[7:6] == 2'b00) // 0001100x00xxxxxx
         )
      begin
        en_reg_R_ohe_sel_E1 = 1'b1; // PH_wr_muly_E1 [alu.n:218][alu.n:219][alu.n:221][alu.n:232]
      end
      if (
           ( reg_IR_ID[15:11] == 5'b00000) // 00000xxxxxxxxxxx
        || ( reg_IR_ID[15:12] == 4'b0000 && reg_IR_ID[10] == 1'b0) // 0000x0xxxxxxxxxx
        || ( reg_IR_ID[15:10] == 6'b000111) // 000111xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:10] == 2'b00) // 000x00xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11] == 1'b0 && reg_IR_ID[5:4] == 2'b00) // 000x0xxxxx00xxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[10:9] == 2'b10) // 000xx10xxxxxxxxx
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3] == 1'b0) // 0011xxxxxxxx0xxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:9] == 4'b0001) // 00x0001xxxxxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:7] == 6'b001010 && reg_IR_ID[2:1] == 2'b01) // 00x001010xxxx01x
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:7] == 6'b001010 && reg_IR_ID[2:1] == 2'b10) // 00x001010xxxx10x
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:7] == 6'b001010 && reg_IR_ID[1:0] == 2'b10) // 00x001010xxxxx10
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:11] == 3'b000 && reg_IR_ID[9] == 1'b0 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0x000x0xxx0x0xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:11] == 3'b000 && reg_IR_ID[9] == 1'b0 && reg_IR_ID[4:3] == 2'b00) // 0x000x0xxxx00xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:7] == 7'b1001010 && reg_IR_ID[3] == 1'b0) // 0x1001010xxx0xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[13:11] == 3'b100 && reg_IR_ID[9:3] == 7'b1000000) // 0x100x1000000xxx
        || ( reg_IR_ID[15] == 1'b0 && reg_IR_ID[12:9] == 4'b0010 && reg_IR_ID[7:3] == 5'b00010) // 0xx0010x00010xxx
        || ( reg_IR_ID[15:9] == 7'b1100000) // 1100000xxxxxxxxx
        || ( reg_IR_ID[13:3] == 11'b00000001000) // xx00000001000xxx
         )
      begin
        en_reg_R_bin_sel_E1 = 2'b01; // R_wr_rte1___R_rte1_wad_E1 [alu.n:76][alu.n:190][alu.n:127][alu.n:143][alu.n:156][move.n:48][move.n:55][move.n:62][move.n:106][load_store.n:51][load_store.n:93][load_store.n:116][dma.n:70][alu.n:168](tmicro.n:161)(tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b000110000) // 000110000xxxxxxx
        || ( reg_IR_ID[15:9] == 7'b0001100 && reg_IR_ID[7:6] == 2'b00) // 0001100x00xxxxxx
         )
      begin
        en_reg_R_bin_sel_E1 = 2'b10; // PL_wr_mulx_E1 [alu.n:218][alu.n:219][alu.n:232]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010110110) // 0010010110110xxx
        || ( reg_IR_ID[15:4] == 12'b001001011011 && reg_IR_ID[2:1] == 2'b01) // 001001011011x01x
        || ( reg_IR_ID[15:4] == 12'b001001011011 && reg_IR_ID[2:1] == 2'b10) // 001001011011x10x
        || ( reg_IR_ID[15:4] == 12'b001001011011 && reg_IR_ID[1:0] == 2'b10) // 001001011011xx10
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3:0] == 4'b1011) // 0011xxxxxxxx1011
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010000011011) // 001x010000011011
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b011000001011) // 001x011000001011
        || ( reg_IR_ID[15:0] == 16'b1000000001001011) // 1000000001001011
         )
      begin
        en_reg_LR_bin_sel_E1 = 3'b001; // LR_wr_wbus_E1 [move.n:48][move.n:55][move.n:62][move.n:106][dma.n:70](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3:0] == 4'b1011) // 0110xxxxxxxx1011
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1011) // 01x0000xxx0x1011
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:0] == 5'b01011) // 01x0000xxxx01011
         )
      begin
        en_reg_LR_bin_sel_E1 = 3'b010; // LR_wr_dm_read_E1 [load_store.n:51][load_store.n:93](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1011) // 0100010xxx0x1011
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:0] == 5'b01011) // 0100010xxxx01011
         )
      begin
        en_reg_LR_bin_sel_E1 = 3'b011; // LR_wr___pm_read_w_LR_E1 [load_store.n:116](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010110100) // 0010010110100xxx
        || ( reg_IR_ID[15:4] == 12'b001001011010 && reg_IR_ID[2:1] == 2'b01) // 001001011010x01x
        || ( reg_IR_ID[15:4] == 12'b001001011010 && reg_IR_ID[2:1] == 2'b10) // 001001011010x10x
        || ( reg_IR_ID[15:4] == 12'b001001011010 && reg_IR_ID[1:0] == 2'b10) // 001001011010xx10
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3:0] == 4'b1010) // 0011xxxxxxxx1010
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010000011010) // 001x010000011010
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b011000001010) // 001x011000001010
        || ( reg_IR_ID[15:0] == 16'b1000000001001010) // 1000000001001010
         )
      begin
        en_reg_SP_bin_sel_E1 = 2'b01; // SP_wr_wbus_E1 [move.n:48][move.n:55][move.n:62][move.n:106][dma.n:70](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3:0] == 4'b1010) // 0110xxxxxxxx1010
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1010) // 01x0000xxx0x1010
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:0] == 5'b01010) // 01x0000xxxx01010
         )
      begin
        en_reg_SP_bin_sel_E1 = 2'b10; // SP_wr_dm_read_E1 [load_store.n:51][load_store.n:93](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1010) // 0100010xxx0x1010
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:0] == 5'b01010) // 0100010xxxx01010
         )
      begin
        en_reg_SP_bin_sel_E1 = 2'b11; // SP_wr___pm_read_w_SP_E1 [load_store.n:116](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010111011011) // 0010111011011xxx
        || ( reg_IR_ID[15:4] == 12'b001011101110 && reg_IR_ID[2:0] == 3'b000) // 001011101110x000
         )
      begin
        en_reg_LF_ohe_sel_E1 = 1'b1; // LF_wr_lfw_E1 [control.n:177][control.n:211]
        en_mux_lfw_ohe_sel_E1 = 1'b1; // lfw_copy_lfw2_E1 [control.n:177][control.n:211]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0010001) // 0010001xxxxxxxxx
        || ( reg_IR_ID[15:8] == 8'b00101111) // 00101111xxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b0010111 && reg_IR_ID[7:0] == 8'b10010000) // 0010111x10010000
         )
      begin
        en_reg_CND_ohe_sel_E1 = 1'b1; // cndr_rd_CND_E1 [alu.n:155][control.n:95][control.n:121]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0000111) // 0000111xxxxxxxxx
        || ( reg_IR_ID[15:7] == 9'b000110100) // 000110100xxxxxxx
         )
      begin
        en_reg_CND_bin_sel_E1 = 3'b001; // CND_wr_cndw_E1 [alu.n:89][alu.n:90][alu.n:91][alu.n:92][alu.n:93][alu.n:94][alu.n:95][alu.n:96][alu.n:110][alu.n:111]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010111000) // 0010010111000xxx
        || ( reg_IR_ID[15:4] == 12'b001001011100 && reg_IR_ID[2:1] == 2'b01) // 001001011100x01x
        || ( reg_IR_ID[15:4] == 12'b001001011100 && reg_IR_ID[2:1] == 2'b10) // 001001011100x10x
        || ( reg_IR_ID[15:4] == 12'b001001011100 && reg_IR_ID[1:0] == 2'b10) // 001001011100xx10
        || ( reg_IR_ID[15:0] == 16'b0010111011001000) // 0010111011001000
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3:0] == 4'b1100) // 0011xxxxxxxx1100
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010000011100) // 001x010000011100
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b011000001100) // 001x011000001100
        || ( reg_IR_ID[15:0] == 16'b1000000001001100) // 1000000001001100
         )
      begin
        en_reg_CND_bin_sel_E1 = 3'b010; // SR_wr_wbus_E1_t0 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        en_reg_CB_bin_sel_E1 = 3'b010; // SR_wr_wbus_E1_t1 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        en_reg_IE_bin_sel_E1 = 3'b010; // SR_wr_wbus_E1_t2 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        en_reg_SRa_bin_sel_E1 = 2'b01; // SR_wr_wbus_E1_t3 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        en_reg_SRb_bin_sel_E1 = 2'b01; // SR_wr_wbus_E1_t4 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
        en_reg_IM_bin_sel_E1 = 3'b010; // SR_wr_wbus_E1_t5 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:238][dma.n:70](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3:0] == 4'b1100) // 0110xxxxxxxx1100
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1100) // 01x0000xxx0x1100
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:0] == 5'b01100) // 01x0000xxxx01100
         )
      begin
        en_reg_CND_bin_sel_E1 = 3'b011; // SR_wr_dm_read_E1_t0 [load_store.n:51][load_store.n:93](tmicro.n:132)
        en_reg_CB_bin_sel_E1 = 3'b011; // SR_wr_dm_read_E1_t1 [load_store.n:51][load_store.n:93](tmicro.n:132)
        en_reg_IE_bin_sel_E1 = 3'b011; // SR_wr_dm_read_E1_t2 [load_store.n:51][load_store.n:93](tmicro.n:132)
        en_reg_SRa_bin_sel_E1 = 2'b10; // SR_wr_dm_read_E1_t3 [load_store.n:51][load_store.n:93](tmicro.n:132)
        en_reg_SRb_bin_sel_E1 = 2'b10; // SR_wr_dm_read_E1_t4 [load_store.n:51][load_store.n:93](tmicro.n:132)
        en_reg_IM_bin_sel_E1 = 3'b011; // SR_wr_dm_read_E1_t5 [load_store.n:51][load_store.n:93](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1100) // 0100010xxx0x1100
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:0] == 5'b01100) // 0100010xxxx01100
         )
      begin
        en_reg_CND_bin_sel_E1 = 3'b100; // SR_wr___pm_read_w_SR_E1_t0 [load_store.n:116](tmicro.n:132)
        en_reg_CB_bin_sel_E1 = 3'b100; // SR_wr___pm_read_w_SR_E1_t1 [load_store.n:116](tmicro.n:132)
        en_reg_IE_bin_sel_E1 = 3'b100; // SR_wr___pm_read_w_SR_E1_t2 [load_store.n:116](tmicro.n:132)
        en_reg_SRa_bin_sel_E1 = 2'b11; // SR_wr___pm_read_w_SR_E1_t3 [load_store.n:116](tmicro.n:132)
        en_reg_SRb_bin_sel_E1 = 2'b11; // SR_wr___pm_read_w_SR_E1_t4 [load_store.n:116](tmicro.n:132)
        en_reg_IM_bin_sel_E1 = 3'b100; // SR_wr___pm_read_w_SR_E1_t5 [load_store.n:116](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:11] == 5'b00000) // 00000xxxxxxxxxxx
         )
      begin
        en_reg_CB_bin_sel_E1 = 3'b001; // CB_wr_cbw_E1 [alu.n:68][alu.n:69][alu.n:70][alu.n:71]
      end
      if (
           ( reg_IR_ID[15:1] == 15'b001001100010000) // 001001100010000x
        || ( reg_IR_ID[15:4] == 12'b001011100111) // 001011100111xxxx
         )
      begin
        en_reg_IE_bin_sel_E1 = 3'b001; // IE_wr_iew_E1 [move.n:76][move.n:87][control.n:224]
      end
      if (
           ( reg_IR_ID[15:8] == 8'b00100111) // 00100111xxxxxxxx
         )
      begin
        en_reg_IM_bin_sel_E1 = 3'b001; // IM_wr_imw_E1 [move.n:69]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010111010) // 0010010111010xxx
        || ( reg_IR_ID[15:4] == 12'b001001011101 && reg_IR_ID[2:1] == 2'b01) // 001001011101x01x
        || ( reg_IR_ID[15:4] == 12'b001001011101 && reg_IR_ID[2:1] == 2'b10) // 001001011101x10x
        || ( reg_IR_ID[15:4] == 12'b001001011101 && reg_IR_ID[1:0] == 2'b10) // 001001011101xx10
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3:0] == 4'b1101) // 0011xxxxxxxx1101
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010000011101) // 001x010000011101
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b011000001101) // 001x011000001101
        || ( reg_IR_ID[15:0] == 16'b1000000001001101) // 1000000001001101
         )
      begin
        en_reg_ILR_bin_sel_E1 = 2'b01; // ILR_wr_wbus_E1 [move.n:48][move.n:55][move.n:62][move.n:106][dma.n:70](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3:0] == 4'b1101) // 0110xxxxxxxx1101
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1101) // 01x0000xxx0x1101
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:0] == 5'b01101) // 01x0000xxxx01101
         )
      begin
        en_reg_ILR_bin_sel_E1 = 2'b10; // ILR_wr_dm_read_E1 [load_store.n:51][load_store.n:93](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1101) // 0100010xxx0x1101
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:0] == 5'b01101) // 0100010xxxx01101
         )
      begin
        en_reg_ILR_bin_sel_E1 = 2'b11; // ILR_wr___pm_read_w_ILR_E1 [load_store.n:116](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010111100) // 0010010111100xxx
        || ( reg_IR_ID[15:4] == 12'b001001011110 && reg_IR_ID[2:1] == 2'b01) // 001001011110x01x
        || ( reg_IR_ID[15:4] == 12'b001001011110 && reg_IR_ID[2:1] == 2'b10) // 001001011110x10x
        || ( reg_IR_ID[15:4] == 12'b001011100111) // 001011100111xxxx
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3:0] == 4'b1110) // 0011xxxxxxxx1110
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010000011110) // 001x010000011110
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b010111101110) // 001x010111101110
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:0] == 12'b011000001110) // 001x011000001110
        || ( reg_IR_ID[15:0] == 16'b1000000001001110) // 1000000001001110
         )
      begin
        en_reg_ISR_bin_sel_E1 = 2'b01; // ISR_wr_wbus_E1 [move.n:48][move.n:55][move.n:62][move.n:106][control.n:225][dma.n:70](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3:0] == 4'b1110) // 0110xxxxxxxx1110
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1110) // 01x0000xxx0x1110
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:0] == 5'b01110) // 01x0000xxxx01110
         )
      begin
        en_reg_ISR_bin_sel_E1 = 2'b10; // ISR_wr_dm_read_E1 [load_store.n:51][load_store.n:93](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1110) // 0100010xxx0x1110
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:0] == 5'b01110) // 0100010xxxx01110
         )
      begin
        en_reg_ISR_bin_sel_E1 = 2'b11; // ISR_wr___pm_read_w_ISR_E1 [load_store.n:116](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010011000010) // 0010011000010xxx
        || ( reg_IR_ID[15:4] == 12'b001001100001 && reg_IR_ID[2:1] == 2'b01) // 001001100001x01x
        || ( reg_IR_ID[15:4] == 12'b001001100001 && reg_IR_ID[2:1] == 2'b10) // 001001100001x10x
        || ( reg_IR_ID[15:4] == 12'b001001100001 && reg_IR_ID[1:0] == 2'b10) // 001001100001xx10
         )
      begin
        en_reg_ocd_data_ohe_sel_E1 = 1'b1; // ocd_data_wr_wbus_E1 [move.n:96]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100011xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100011xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100011xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100011xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:3] == 2'b00) // 0100011xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100011xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100011xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100011xxxx0xx10
         )
      begin
        en_mem_PM_bin_sel_E1 = 2'b01; // mem_enab_PM_st_pm_write_pm_addr_E1 [load_store.n:130]
                                      // cp_extad_PM_st_pm_write_pm_addr_E1 [load_store.n:130]
                                      // cp_extout_PM_st_pm_write_pm_addr_E1 [load_store.n:130]
        en_mux_pm_addr_ohe_sel_E1 = 1'b1; // pm_addr_copy0_pm_addr_pipe_E1 [load_store.n:129]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100010xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100010xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100010xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100010xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:3] == 2'b00) // 0100010xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100010xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100010xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100010xxxx0xx10
         )
      begin
        en_mem_PM_bin_sel_E1 = 2'b10; // cp_extin_pm_read_ld_PM_pm_addr_ID [load_store.n:116]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100001xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100001xxx0xx01x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100001xxx0xx10x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100001xxx0xxx10
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:3] == 2'b00) // 0100001xxxx00xxx
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 0100001xxxx0x01x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 0100001xxxx0x10x
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 0100001xxxx0xx10
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3] == 1'b0) // 0111xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[2:1] == 2'b01) // 0111xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[2:1] == 2'b10) // 0111xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[1:0] == 2'b10) // 0111xxxxxxxxxx10
         )
      begin
        en_mem_DM_bin_sel_E1 = 2'b01; // mem_enab_DM_st_dm_write_dm_addr_E1 [load_store.n:57][load_store.n:99]
                                      // cp_extad_DM_st_dm_write_dm_addr_E1 [load_store.n:57][load_store.n:99]
                                      // cp_extout_DM_st_dm_write_dm_addr_E1 [load_store.n:57][load_store.n:99]
        en_mux_dm_addr_ohe_sel_E1 = 1'b1; // dm_addr_copy0_dm_addr_pipe_E1 [load_store.n:56][load_store.n:98]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b01) // 0110xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[2:1] == 2'b10) // 0110xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[1:0] == 2'b10) // 0110xxxxxxxxxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 01x0000xxx0x0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01x0000xxx0xx01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01x0000xxx0xx10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01x0000xxx0xxx10
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:3] == 2'b00) // 01x0000xxxx00xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b01) // 01x0000xxxx0x01x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[2:1] == 2'b10) // 01x0000xxxx0x10x
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4] == 1'b0 && reg_IR_ID[1:0] == 2'b10) // 01x0000xxxx0xx10
         )
      begin
        en_mem_DM_bin_sel_E1 = 2'b10; // cp_extin_dm_read_ld_DM_dm_addr_ID [load_store.n:51][load_store.n:93]
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1101) // 0100011xxx0x1101
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:0] == 5'b01101) // 0100011xxxx01101
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b001; // pm_write_copy0___pm_write_r_ILR_E1 [load_store.n:130](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1110) // 0100011xxx0x1110
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:0] == 5'b01110) // 0100011xxxx01110
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b010; // pm_write_copy0___pm_write_r_ISR_E1 [load_store.n:130](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1011) // 0100011xxx0x1011
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:0] == 5'b01011) // 0100011xxxx01011
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b011; // pm_write_copy0___pm_write_r_LR_E1 [load_store.n:130](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1010) // 0100011xxx0x1010
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:0] == 5'b01010) // 0100011xxxx01010
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b100; // pm_write_copy0___pm_write_r_SP_E1 [load_store.n:130](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1100) // 0100011xxx0x1100
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:0] == 5'b01100) // 0100011xxxx01100
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b101; // pm_write_copy0___pm_write_r_SR_E1 [load_store.n:130](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100011xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100011 && reg_IR_ID[4:3] == 2'b00) // 0100011xxxx00xxx
         )
      begin
        en_mux_pm_write_bin_sel_E1 = 3'b110; // pm_write_copy0_rse1_E1 [load_store.n:130](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1100) // 0100001xxx0x1100
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:0] == 5'b01100) // 0100001xxxx01100
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3:0] == 4'b1100) // 0111xxxxxxxx1100
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b001; // cp_dm_write_rec_E1 [load_store.n:57][load_store.n:99](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100001xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:3] == 2'b00) // 0100001xxxx00xxx
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3] == 1'b0) // 0111xxxxxxxx0xxx
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b010; // dm_write_copy0_rse1_E1 [load_store.n:57][load_store.n:99](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1101) // 0100001xxx0x1101
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:0] == 5'b01101) // 0100001xxxx01101
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3:0] == 4'b1101) // 0111xxxxxxxx1101
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b011; // dm_write_copy_dm_write1_E1 [load_store.n:57][load_store.n:99](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1110) // 0100001xxx0x1110
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:0] == 5'b01110) // 0100001xxxx01110
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3:0] == 4'b1110) // 0111xxxxxxxx1110
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b100; // dm_write_copy_dm_write2_E1 [load_store.n:57][load_store.n:99](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1011) // 0100001xxx0x1011
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:0] == 5'b01011) // 0100001xxxx01011
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3:0] == 4'b1011) // 0111xxxxxxxx1011
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b101; // dm_write_copy_dm_write3_E1 [load_store.n:57][load_store.n:99](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3:0] == 4'b1010) // 0100001xxx0x1010
        || ( reg_IR_ID[15:9] == 7'b0100001 && reg_IR_ID[4:0] == 5'b01010) // 0100001xxxx01010
        || ( reg_IR_ID[15:12] == 4'b0111 && reg_IR_ID[3:0] == 4'b1010) // 0111xxxxxxxx1010
         )
      begin
        en_mux_dm_write_bin_sel_E1 = 3'b110; // dm_write_copy_dm_write4_E1 [load_store.n:57][load_store.n:99](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 0100010xxx0x0xxx
        || ( reg_IR_ID[15:9] == 7'b0100010 && reg_IR_ID[4:3] == 2'b00) // 0100010xxxx00xxx
         )
      begin
        en_mux_rte1_bin_sel_E1 = 3'b001; // rte1_copy0_pm_read_E1 [load_store.n:116](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:11] == 5'b00000) // 00000xxxxxxxxxxx
        || ( reg_IR_ID[15:12] == 4'b0000 && reg_IR_ID[10] == 1'b0) // 0000x0xxxxxxxxxx
        || ( reg_IR_ID[15:10] == 6'b000111) // 000111xxxxxxxxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:9] == 3'b011 && reg_IR_ID[5:4] == 2'b00) // 000x011xxx00xxxx
        || ( reg_IR_ID[15:13] == 3'b000 && reg_IR_ID[11:9] == 3'b110) // 000x110xxxxxxxxx
        || ( reg_IR_ID[15:14] == 2'b00 && reg_IR_ID[12:9] == 4'b0001) // 00x0001xxxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b1100000) // 1100000xxxxxxxxx
         )
      begin
        en_mux_rte1_bin_sel_E1 = 3'b010; // rte1_copy0_alut_E1 [alu.n:76][alu.n:127][alu.n:143][alu.n:156][alu.n:168](tmicro.n:161)
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0110 && reg_IR_ID[3] == 1'b0) // 0110xxxxxxxx0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[5] == 1'b0 && reg_IR_ID[3] == 1'b0) // 01x0000xxx0x0xxx
        || ( reg_IR_ID[15:14] == 2'b01 && reg_IR_ID[12:9] == 4'b0000 && reg_IR_ID[4:3] == 2'b00) // 01x0000xxxx00xxx
         )
      begin
        en_mux_rte1_bin_sel_E1 = 3'b011; // rte1_copy0_dm_read_E1 [load_store.n:51][load_store.n:93](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:10] == 6'b000100) // 000100xxxxxxxxxx
        || ( reg_IR_ID[15:11] == 5'b00010 && reg_IR_ID[9] == 1'b0) // 00010x0xxxxxxxxx
         )
      begin
        en_mux_rte1_bin_sel_E1 = 3'b100; // rte1_copy0_sht_E1 [alu.n:190](tmicro.n:161)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[2:1] == 2'b01) // 001001010xxxx01x
        || ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[2:1] == 2'b10) // 001001010xxxx10x
        || ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[1:0] == 2'b10) // 001001010xxxxx10
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3] == 1'b0) // 0011xxxxxxxx0xxx
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:7] == 5'b01010 && reg_IR_ID[3] == 1'b0) // 001x01010xxx0xxx
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:9] == 3'b010 && reg_IR_ID[7:3] == 5'b00010) // 001x010x00010xxx
        || ( reg_IR_ID[15:13] == 3'b001 && reg_IR_ID[11:3] == 9'b011000000) // 001x011000000xxx
        || ( reg_IR_ID[15:3] == 13'b1000000001000) // 1000000001000xxx
         )
      begin
        en_mux_rte1_bin_sel_E1 = 3'b101; // rte1_copy0_wbus_E1 [move.n:48][move.n:55][move.n:62][move.n:106][dma.n:70](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010111011100000) // 0010111011100000
         )
      begin
        en_mux_lcw_bin_sel_E1 = 2'b01; // lcw_copy0___CTaddr_cstP32_E1 [control.n:202]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010111011011) // 0010111011011xxx
         )
      begin
        en_mux_lcw_bin_sel_E1 = 2'b10; // lcw_copy0_rse1_E1 [control.n:191]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010011000100001) // 0010011000100001
        || ( reg_IR_ID[15:4] == 12'b001011100111) // 001011100111xxxx
         )
      begin
        en_mux_iew_bin_sel_E1 = 2'b01; // iew_copy0___CTuint1_cstV0_E1 [move.n:87][control.n:224]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010011000100000) // 0010011000100000
         )
      begin
        en_mux_iew_bin_sel_E1 = 2'b10; // iew_copy0___CTuint1_cstV1_E1 [move.n:76]
      end
      if (
           ( reg_IR_ID[15:7] == 9'b000110000) // 000110000xxxxxxx
         )
      begin
        en_mux_mulx_bin_sel_E1 = 2'b10; // mulx_copy_mulx2_E1 [alu.n:218][alu.n:219]
      end
      if (
           ( reg_IR_ID[15:7] == 9'b000110000) // 000110000xxxxxxx
        || ( reg_IR_ID[15:8] == 8'b00011000 && reg_IR_ID[6] == 1'b1) // 00011000x1xxxxxx
         )
      begin
        en_mux_muly_bin_sel_E1 = 2'b10; // muly_copy_muly2_E1 [alu.n:218][alu.n:219][alu.n:221]
      end
      if (
           ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[3] == 1'b0) // 0011xxxxxxxx0xxx
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[2:1] == 2'b01) // 0011xxxxxxxxx01x
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[2:1] == 2'b10) // 0011xxxxxxxxx10x
        || ( reg_IR_ID[15:12] == 4'b0011 && reg_IR_ID[1:0] == 2'b10) // 0011xxxxxxxxxx10
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0001; // wbus_copy0___CTsbyte_cstP4_E1 [move.n:62]
      end
      if (
           ( reg_IR_ID[15:3] == 13'b1000000001000) // 1000000001000xxx
        || ( reg_IR_ID[15:4] == 12'b100000000100 && reg_IR_ID[2:1] == 2'b01) // 100000000100x01x
        || ( reg_IR_ID[15:4] == 12'b100000000100 && reg_IR_ID[2:1] == 2'b10) // 100000000100x10x
        || ( reg_IR_ID[15:4] == 12'b100000000100 && reg_IR_ID[1:0] == 2'b10) // 100000000100xx10
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0010; // wbus_copy0_dma_ready_E1 [dma.n:70]
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3:0] == 4'b1100) // 001001010xxx1100
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3:0] == 4'b1100) // 00100101x01x1100
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3:0] == 4'b1100) // 00100101x10x1100
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:0] == 6'b101100) // 00100101xx101100
        || ( reg_IR_ID[15:0] == 16'b0010011000011100) // 0010011000011100
        || ( reg_IR_ID[15:4] == 12'b001011100111) // 001011100111xxxx
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3:0] == 4'b1100) // 10000000001x1100
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:0] == 5'b11100) // 1000000000x11100
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0011; // cp_wbus_rec_E1 [move.n:48][move.n:96][control.n:225][dma.n:51](tmicro.n:132)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010010000010) // 0010010000010xxx
        || ( reg_IR_ID[15:4] == 12'b001001000001 && reg_IR_ID[2:1] == 2'b01) // 001001000001x01x
        || ( reg_IR_ID[15:4] == 12'b001001000001 && reg_IR_ID[2:1] == 2'b10) // 001001000001x10x
        || ( reg_IR_ID[15:4] == 12'b001001000001 && reg_IR_ID[1:0] == 2'b10) // 001001000001xx10
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0100; // wbus_copy0___CTword_cstP16_E1 [move.n:55]
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3] == 1'b0) // 001001010xxx0xxx
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3] == 1'b0) // 00100101x01x0xxx
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3] == 1'b0) // 00100101x10x0xxx
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:3] == 3'b100) // 00100101xx100xxx
        || ( reg_IR_ID[15:3] == 13'b0010011000010) // 0010011000010xxx
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3] == 1'b0) // 10000000001x0xxx
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:3] == 2'b10) // 1000000000x10xxx
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0101; // wbus_copy0_rse1_E1 [move.n:48][move.n:96][dma.n:51](tmicro.n:125)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3:0] == 4'b1101) // 001001010xxx1101
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3:0] == 4'b1101) // 00100101x01x1101
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3:0] == 4'b1101) // 00100101x10x1101
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:0] == 6'b101101) // 00100101xx101101
        || ( reg_IR_ID[15:0] == 16'b0010011000011101) // 0010011000011101
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3:0] == 4'b1101) // 10000000001x1101
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:0] == 5'b11101) // 1000000000x11101
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0110; // wbus_copy_wbus1_E1 [move.n:48][move.n:96][dma.n:51](tmicro.n:134)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3:0] == 4'b1110) // 001001010xxx1110
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3:0] == 4'b1110) // 00100101x01x1110
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3:0] == 4'b1110) // 00100101x10x1110
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:0] == 6'b101110) // 00100101xx101110
        || ( reg_IR_ID[15:0] == 16'b0010011000011110) // 0010011000011110
        || ( reg_IR_ID[15:0] == 16'b0010111011001000) // 0010111011001000
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3:0] == 4'b1110) // 10000000001x1110
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:0] == 5'b11110) // 1000000000x11110
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b0111; // wbus_copy_wbus2_E1 [move.n:48][move.n:96][control.n:238][dma.n:51](tmicro.n:135)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3:0] == 4'b1011) // 001001010xxx1011
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3:0] == 4'b1011) // 00100101x01x1011
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3:0] == 4'b1011) // 00100101x10x1011
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:0] == 6'b101011) // 00100101xx101011
        || ( reg_IR_ID[15:0] == 16'b0010011000011011) // 0010011000011011
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3:0] == 4'b1011) // 10000000001x1011
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:0] == 5'b11011) // 1000000000x11011
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b1000; // wbus_copy_wbus3_E1 [move.n:48][move.n:96][dma.n:51](tmicro.n:131)
      end
      if (
           ( reg_IR_ID[15:7] == 9'b001001010 && reg_IR_ID[3:0] == 4'b1010) // 001001010xxx1010
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b01 && reg_IR_ID[3:0] == 4'b1010) // 00100101x01x1010
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[6:5] == 2'b10 && reg_IR_ID[3:0] == 4'b1010) // 00100101x10x1010
        || ( reg_IR_ID[15:8] == 8'b00100101 && reg_IR_ID[5:0] == 6'b101010) // 00100101xx101010
        || ( reg_IR_ID[15:0] == 16'b0010011000011010) // 0010011000011010
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3:0] == 4'b1010) // 10000000001x1010
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:0] == 5'b11010) // 1000000000x11010
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b1001; // wbus_copy_wbus4_E1 [move.n:48][move.n:96][dma.n:51](tmicro.n:130)
      end
      if (
           ( reg_IR_ID[15:3] == 13'b0010011000000) // 0010011000000xxx
        || ( reg_IR_ID[15:4] == 12'b001001100000 && reg_IR_ID[2:1] == 2'b01) // 001001100000x01x
        || ( reg_IR_ID[15:4] == 12'b001001100000 && reg_IR_ID[2:1] == 2'b10) // 001001100000x10x
        || ( reg_IR_ID[15:4] == 12'b001001100000 && reg_IR_ID[1:0] == 2'b10) // 001001100000xx10
         )
      begin
        en_mux_wbus_bin_sel_E1 = 4'b1010; // wbus_copy_wbus5_E1 [move.n:106]
      end
      if (
           ( reg_IR_ID[15:4] == 12'b001011101010) // 001011101010xxxx
         )
      begin
        en_mux_trgt_bin_sel_E1 = 2'b11; // trgt_copy0_rse1_E1 [control.n:112][control.n:145](tmicro.n:160)
      end
      if (
           ( reg_IR_ID[15:8] == 8'b00101111) // 00101111xxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b0010111 && reg_IR_ID[7:0] == 8'b10010000) // 0010111x10010000
         )
      begin
        en_mux_tcc_ohe_sel_E1 = 1'b1; // tcc_copy0_cndr_E1 [control.n:95][control.n:121]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b0010011000100001) // 0010011000100001
        || ( reg_IR_ID[15:8] == 8'b00101111) // 00101111xxxxxxxx
        || ( reg_IR_ID[15:9] == 7'b0010111 && reg_IR_ID[7:4] == 4'b0111) // 0010111x0111xxxx
        || ( reg_IR_ID[15:9] == 7'b0010111 && reg_IR_ID[7:3] == 5'b10100) // 0010111x10100xxx
        || ( reg_IR_ID[15:9] == 7'b0010111 && reg_IR_ID[7:5] == 3'b110 && reg_IR_ID[3:0] == 4'b0000) // 0010111x110x0000
         )
      begin
        en_mux_die1_ohe_sel_E1 = 1'b1; // die1_copy0___CTbool_cstV1_E1 [move.n:86][control.n:94][control.n:144][control.n:162][control.n:223][control.n:252]
      end
      if (
           ( reg_IR_ID[15:0] == 16'b1000000000000000) // 1000000000000000
         )
      begin
        en_mux_cbus_bin_sel_E1 = 2'b01; // cbus_copy0___CTuint2_cstV0_E1 [dma.n:61]
      end
      if (
           ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[3] == 1'b0) // 10000000001x0xxx
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[2:1] == 2'b01) // 10000000001xx01x
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[2:1] == 2'b10) // 10000000001xx10x
        || ( reg_IR_ID[15:5] == 11'b10000000001 && reg_IR_ID[1:0] == 2'b10) // 10000000001xxx10
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4:3] == 2'b10) // 1000000000x10xxx
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4] == 1'b1 && reg_IR_ID[2:1] == 2'b01) // 1000000000x1x01x
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4] == 1'b1 && reg_IR_ID[2:1] == 2'b10) // 1000000000x1x10x
        || ( reg_IR_ID[15:6] == 10'b1000000000 && reg_IR_ID[4] == 1'b1 && reg_IR_ID[1:0] == 2'b10) // 1000000000x1xx10
         )
      begin
        en_mux_cbus_bin_sel_E1 = 2'b10; // cbus_copy0___CTuint2_cstP10_E1 [dma.n:50]
      end
    end
    predec_E1_enabling[1:0] = en_dlflg_bin_sel_E1;
    predec_E1_enabling[6:2] = en_alu_bin_sel_E1;
    predec_E1_enabling[8:7] = en_sh_bin_sel_E1;
    predec_E1_enabling[10:9] = en_mul_bin_sel_E1;
    predec_E1_enabling[13:11] = en_controller_bin_sel_E1;
    predec_E1_enabling[16] = en_reg_R_ohe_sel_E1;
    predec_E1_enabling[15:14] = en_reg_R_bin_sel_E1;
    predec_E1_enabling[19:17] = en_reg_LR_bin_sel_E1;
    predec_E1_enabling[21:20] = en_reg_SP_bin_sel_E1;
    predec_E1_enabling[22] = en_reg_LF_ohe_sel_E1;
    predec_E1_enabling[23] = en_reg_LS_ohe_sel_E1;
    predec_E1_enabling[24] = en_reg_LE_ohe_sel_E1;
    predec_E1_enabling[25] = en_reg_LC_ohe_sel_E1;
    predec_E1_enabling[26] = en_reg_CND_ohe_sel_E1;
    predec_E1_enabling[29:27] = en_reg_CND_bin_sel_E1;
    predec_E1_enabling[32:30] = en_reg_CB_bin_sel_E1;
    predec_E1_enabling[35:33] = en_reg_IE_bin_sel_E1;
    predec_E1_enabling[37:36] = en_reg_SRa_bin_sel_E1;
    predec_E1_enabling[39:38] = en_reg_SRb_bin_sel_E1;
    predec_E1_enabling[42:40] = en_reg_IM_bin_sel_E1;
    predec_E1_enabling[44:43] = en_reg_ILR_bin_sel_E1;
    predec_E1_enabling[46:45] = en_reg_ISR_bin_sel_E1;
    predec_E1_enabling[47] = en_reg_ocd_data_ohe_sel_E1;
    predec_E1_enabling[49:48] = en_mem_PM_bin_sel_E1;
    predec_E1_enabling[51:50] = en_mem_DM_bin_sel_E1;
    predec_E1_enabling[52] = en_mux_pm_addr_ohe_sel_E1;
    predec_E1_enabling[55:53] = en_mux_pm_write_bin_sel_E1;
    predec_E1_enabling[56] = en_mux_dm_addr_ohe_sel_E1;
    predec_E1_enabling[59:57] = en_mux_dm_write_bin_sel_E1;
    predec_E1_enabling[62:60] = en_mux_rte1_bin_sel_E1;
    predec_E1_enabling[63] = en_mux_lfw_ohe_sel_E1;
    predec_E1_enabling[65:64] = en_mux_lcw_bin_sel_E1;
    predec_E1_enabling[67:66] = en_mux_iew_bin_sel_E1;
    predec_E1_enabling[69:68] = en_mux_mulx_bin_sel_E1;
    predec_E1_enabling[71:70] = en_mux_muly_bin_sel_E1;
    predec_E1_enabling[75:72] = en_mux_wbus_bin_sel_E1;
    predec_E1_enabling[77:76] = en_mux_trgt_bin_sel_E1;
    predec_E1_enabling[78] = en_mux_offs_ohe_sel_E1;
    predec_E1_enabling[79] = en_mux_tcc_ohe_sel_E1;
    predec_E1_enabling[80] = en_mux_die1_ohe_sel_E1;
    predec_E1_enabling[81] = en_mux_jcr_ohe_sel_E1;
    predec_E1_enabling[82] = en_mux_jc_ohe_sel_E1;
    predec_E1_enabling[84:83] = en_mux_cbus_bin_sel_E1;
    predec_E1_enabling[85] = en_mux___LC_lcw_wad_ohe_sel_E1;
  end

  always @ (posedge clock or posedge reset)
  begin : ID_stage_start
    if (reset)
    begin
      reg_ID_valid <= 1'b0;
      reg_IR_ID <= NOP;
    end
    else
    begin
      reg_ID_valid <= trn_ID_valid_in;
      reg_IR_ID <= trn_IR_ID;
    end
  end

  assign ID_enabling = predec_ID_enabling;

  assign trn_E1_valid = reg_ID_valid && !kill_ID_in;

  always @ (posedge clock or posedge reset)
  begin : E1_stage_start
    if (reset)
    begin
      reg_IR_E1 <= NOP;
      E1_enabling <= 0;
    end
    else
    begin
      reg_IR_E1 <= reg_IR_ID;
      E1_enabling <= predec_E1_enabling;
    end
  end

  always @ (posedge clock or posedge reset)
  begin : p_R_ag1p_graddr
    if (reset)
    begin
      r_R_ag1p_graddr <= 0;
    end
    else
    begin
      if (en_R_ag1p_graddr_ID)
        r_R_ag1p_graddr <= R_ag1p_graddr_ID;
    end
  end

  assign R_ag1p_grad_out = en_R_ag1p_graddr_ID ? R_ag1p_graddr_ID :
    r_R_ag1p_graddr; // R_ag1p_graddr

  always @ (posedge clock or posedge reset)
  begin : p_R_rre1_graddr
    if (reset)
    begin
      r_R_rre1_graddr <= 0;
    end
    else
    begin
      if (en_R_rre1_graddr_E1)
        r_R_rre1_graddr <= R_rre1_graddr_E1;
    end
  end

  assign R_rre1_grad_out = r_R_rre1_graddr; // R_rre1_graddr

  always @ (posedge clock or posedge reset)
  begin : p_R_rse1_graddr
    if (reset)
    begin
      r_R_rse1_graddr <= 0;
    end
    else
    begin
      if (en_R_rse1_graddr_E1)
        r_R_rse1_graddr <= R_rse1_graddr_E1;
    end
  end

  assign R_rse1_grad_out = r_R_rse1_graddr; // R_rse1_graddr

  always @ (posedge clock or posedge reset)
  begin : p___R_rte1_waddr
    if (reset)
    begin
      r___R_rte1_waddr <= 0;
    end
    else
    begin
      if (en___R_rte1_waddr_E1)
        r___R_rte1_waddr <= __R_rte1_waddr_E1;
    end
  end

  assign __R_rte1_wad_out = r___R_rte1_waddr; // __R_rte1_waddr

  always @ (posedge clock or posedge reset)
  begin : p_R_rtid_gwaddr
    if (reset)
    begin
      r_R_rtid_gwaddr <= 0;
    end
    else
    begin
      if (en_R_rtid_gwaddr_ID)
        r_R_rtid_gwaddr <= R_rtid_gwaddr_ID;
    end
  end

  assign R_rtid_gwad_out = en_R_rtid_gwaddr_ID ? R_rtid_gwaddr_ID :
    r_R_rtid_gwaddr; // R_rtid_gwaddr

endmodule
