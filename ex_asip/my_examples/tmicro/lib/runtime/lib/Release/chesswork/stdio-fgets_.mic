
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:40 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i stdio-fgets_ tmicro


// m3;   next: m4 (next offset: 16)
000000  1 0  "0101000101000000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (20,SP,SP); 
000001  1 0  "0010010100001010"   // (R[0]) = rd_res_reg_1_B1 (SP); 
000002  1 0  "0011111011000100"   // (R[4]) = const_5_B2 (-20); 
000003  1 0  "0100000011000101"   // (R[5]) = load_1_B1 (R[3],DM); 
000004  1 0  "0000000000000100"   // (R[0],) = _pl_1_B1 (R[0],R[4]); 
000005  1 0  "0011000010010100"   // (R[4]) = const_4_B2 (); 
000006  1 0  "0011000010110011"   // (R[3]) = const_3_B2 (); 
000007  1 0  "0111111111101011"   // (__spill_DM[-2]) = stack_store_bndl_B1 (LR,SP,-2); 
000008  1 0  "0111111011010101"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[5],-19,DM,SP); 
000009  1 0  "0111111110000001"   // (DM) = store__pl_rd_res_reg_const_2_B1 (R[1],-8,DM,SP); 
000010  1 0  "0111111110010010"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[2],-7,DM,SP); 
000011  1 0  "0111111011100100"   // (DM) = store__pl_rd_res_reg_const_1_B1 (R[4],-18,DM,SP); 
000012  1 0  "0100001000000011"   // (DM) = store_1_B1 (R[3],R[0],DM); 
000013  1 0  "0111111111110001"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[1],SP,-1); 
000014  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000015  0 0  "0000000000000000"   // /

// m4 subroutine call;   next: m5 (next offset: 16)

// m5;   next: m9, jump target: m8 (next offset: 21)
000016  1 0  "0110111011100000"   // (R[0]) = load__pl_rd_res_reg_const_1_B1 (-18,DM,SP); 
000017  1 0  "0011000000000010"   // (R[2]) = const_1_B2 (); 
000018  1 0  "0001101001000010"   // (CND) = _ne_1_B1 (R[0],R[2]); 
000019  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 
000020  1 0  "0010111100000000"   // () = jump_const_2_B1 (CND,0); 

// m9;   next: m12 (next offset: 22)
000021  1 0  "0110111111110000"   // (R[0]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 

// m8;   next: m12 (next offset: 22)

// m12 (next offset: /)
000022  1 0  "0110111111101011"   // (LR) = stack_load_bndl_B1 (__spill_DM[-2],SP,-2); 
000023  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000024  1 0  "0101111011000000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-20,SP,SP); 
000025  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

