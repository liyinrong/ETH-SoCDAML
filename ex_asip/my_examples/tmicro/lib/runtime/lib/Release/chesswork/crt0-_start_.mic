
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:53 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i crt0-_start_ tmicro


// m5;   next: m6 (next offset: 9)
000000  1 0  "0101000000110000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (3,SP,SP); 
000001  1 0  "0111111111110010"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[2],SP,-1); 
000002  1 0  "0111111111100001"   // (__spill_DM[-2]) = stack_store_bndl_B1 (R[1],SP,-2); 
000003  1 0  "0011000000000011"   // (R[3]) = const_2_B2 (); 
000004  2 0  "0010010000010001"   // (R[1]) = const_1_B1 (0); 
000005  0 0  "0000000000000000"   // /
000006  1 0  "0011000000000010"   // (R[2]) = const_2_B2 (); 
000007  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000008  0 0  "0000000000000000"   // /

// m6 subroutine call;   next: m19 (next offset: 9)

// m19, jump target: m1 (next offset: 13)
000009  2 0  "0010010000010001"   // (R[1]) = const_1_B1 (-1); 
000010  0 0  "0000000000000000"   // /
000011  1 0  "0111111111010001"   // (__spill_DM[-3]) = stack_store_bndl_B1 (R[1],SP,-3); 
000012  1 0  "0010110100000100"   // () = jump_const_1_B1 (4); 

// m14;   next: m15 (next offset: 17)
000013  1 0  "0100000001100010" .loop_nesting 1    // (R[2],R[1]) = load__pl_const_1_B1 (R[1],DM); 
000014  1 0  "0010111010100010"   // (LR) = bsr_1_B1 (R[2]); 
000015  1 0  "0111111111010001"   // (__spill_DM[-3]) = stack_store_bndl_B1 (R[1],SP,-3); 
000016  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

// m15 subroutine call;   next: m80 (next offset: 17)

// m80;   next: m1 (next offset: 17)

// m1;   next: m16 (next offset: 17)

// m16;   next: m21, jump target: m14 (next offset: 24)
000017  1 0  "0110111111010001"   // (R[1]) = stack_load_bndl_B1 (__spill_DM[-3],SP,-3); 
000018  2 0  "0010010000010010"   // (R[2]) = const_1_B1 (0); 
000019  0 0  "0000000000000000"   // /
000020  1 0  "0100000001010000"   // (R[1],R[0]) = _pl_const_1_B1 (R[1]); 
000021  1 0  "0001101001001010"   // (CND) = _ne_1_B1 (R[1],R[2]); 
000022  1 0  "0100000001100010"   // (R[1],R[2]) = _pl_const_2_B1 (R[1]); 
000023  1 0  "0010111111110100"   // () = jump_const_2_B1 (CND,-12); 

// m21;   next: m22 (next offset: 28)
000024  1 0  "0110111111110010" .loop_nesting 0    // (R[2]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000025  1 0  "0110111111100001"   // (R[1]) = stack_load_bndl_B1 (__spill_DM[-2],SP,-2); 
000026  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000027  0 0  "0000000000000000"   // /

// m22 subroutine call;   next: m23 (next offset: 28)

// m23;   next: m24 (next offset: 32)
000028  1 0  "0111111111110000"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[0],SP,-1); 
000029  1 0  "0011000000000000"   // (R[0]) = const_2_B2 (); 
000030  2 0  "0010111010011000"   // (LR) = bsr_const_1_B1 (0); 
000031  0 0  "0000000000000000"   // /

// m24 subroutine call;   next: m78 (next offset: 32)

// m78;   next: m26 (next offset: 33)
000032  1 0  "0110111111110000"   // (R[0]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 

// m26 chess_exit;   next: m76 (next offset: 33)

// m76;   next: m2 (next offset: 34)
000033  1 0  "0010111000000000" .swstall "for_chess_exit"   // () = vd_nop_E1 (); 

// m2, jump target: m2 (next offset: /)
000034  1 0  "0010110111111111" .loop_nesting 1    // () = jump_const_1_B1 (-1); 

