
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:41:44 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strcat_ tmicro

[
    0 : strcat typ=iword bnd=e stl=PM
   10 : __sp typ=word bnd=b stl=SP
   11 : s1__rstr typ=word bnd=b stl=DM
   12 : s2__rstr typ=word bnd=b stl=DM
   14 : __la typ=addr bnd=p tref=addr__
   16 : s1 typ=addr bnd=p tref=__P__cchar__
   17 : s2 typ=addr bnd=p tref=__P__cchar__
   31 : __fch_s1__rstr typ=word bnd=m
   32 : __ct_0 typ=word val=0f bnd=m
   34 : __tmp typ=bool bnd=m
   41 : __fch_s2__rstr typ=word bnd=m
   47 : __tmp typ=bool bnd=m
   59 : __shv_s1 typ=addr bnd=m
   60 : __shv_s1 typ=addr bnd=m
   61 : __shv_s2 typ=addr bnd=m
   70 : __either typ=bool bnd=m
   71 : __trgt typ=sbyte val=-4j bnd=m
   72 : __trgt typ=sbyte val=-5j bnd=m
   73 : __seff typ=any bnd=m
   74 : s1 typ=addr bnd=p tref=__P__cchar__
   75 : s1 typ=addr bnd=p tref=__P__cchar__
   76 : s1 typ=addr bnd=p tref=__P__cchar__
]
Fstrcat {
    #139 off=0 nxt=12
    (__sp.9 var=10) source ()  <12>;
    (s1__rstr.10 var=11) source ()  <13>;
    (s2__rstr.11 var=12) source ()  <14>;
    (__la.13 var=14 stl=LR off=0) inp ()  <16>;
    (s1.17 var=76 stl=R off=1) inp ()  <20>;
    (s2.20 var=17 stl=R off=2) inp ()  <23>;
    (__trgt.376 var=71) const_inp ()  <443>;
    <74> {
      (__ct_0.470 var=32 stl=wbus) const_1_B2 ()  <528>;
      (__ct_0.469 var=32 stl=R off=1) R_2_dr_move___CTwbus_word_cstP16_E1_wbus_2_word_B1 (__ct_0.470)  <554>;
    } stp=2;
    <75> {
      (s1.496 var=76 stl=R off=0) R_ra_move_R_addr_nguard (s1.17)  <569>;
    } stp=0;
    <76> {
      (s1.497 var=76 stl=R off=3) R_ra_move_R_addr_nguard (s1.496)  <570>;
    } stp=1;
    do {
        {
            (s1.420 var=16 stl=R off=3) entry (s1.421 s1.497)  <487>;
        } #10
        {
            <33> {
              (__fch_s1__rstr.98 var=31 stl=dm_read __shv_s1.361 var=59 stl=ag1q) load__pl_const_1_B1 (s1.419 s1__rstr.10)  <461>;
              (s1.419 var=16 stl=ag1p) ag1p_1_dr_move_R_1_addr (s1.420)  <535>;
              (__shv_s1.423 var=59 stl=R off=3) R_1_dr_move_ag1q_1_addr (__shv_s1.361)  <536>;
              (__fch_s1__rstr.425 var=31 stl=R off=4) R_2_dr_move_dm_read_2_word (__fch_s1__rstr.98)  <538>;
            } stp=0;
            <34> {
              (__tmp.101 var=34 stl=cndw) _ne_1_B1 (__fch_s1__rstr.424 __ct_0.426)  <462>;
              (__tmp.418 var=34 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.101)  <534>;
              (__fch_s1__rstr.424 var=31 stl=alur) alur_2_dr_move_R_2_word (__fch_s1__rstr.425)  <537>;
              (__ct_0.426 var=32 stl=alus) alus_2_dr_move_R_2_word (__ct_0.469)  <539>;
            } stp=1;
            <35> {
              () jump_const_1_B1 (__tmp.417 __trgt.376)  <463>;
              (__tmp.417 var=34 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.418)  <533>;
            } stp=2;
        } #12 off=3 nxt=17 tgt=12
        {
            () while_expr (__either.371)  <106>;
            (__either.371 var=70) undefined ()  <437>;
            (s1.421 var=16 stl=R off=3 s1.422 var=16 stl=R off=3) exit (__shv_s1.423)  <488>;
        } #13
    } #9
    #17 off=6 nxt=24
    (__trgt.377 var=72) const_inp ()  <444>;
    <32> {
      (s1.180 var=75 stl=ag1q __seff.391 var=73 stl=dm_read) _pl_const_1_B1 (s1.460)  <460>;
      (s1.453 var=75 stl=R off=3) R_1_dr_move_ag1q_1_addr (s1.180)  <550>;
      (s1.460 var=16 stl=ag1p) ag1p_1_dr_move_R_1_addr (s1.422)  <551>;
      (__seff.461 var=73 stl=R off=4) R_2_dr_move_dm_read_2_any (__seff.391)  <552>;
    } stp=0;
    do {
        {
            (s1__rstr.207 var=11) entry (s1__rstr.263 s1__rstr.10)  <221>;
            (s2.433 var=17 stl=R off=2) entry (s2.434 s2.20)  <498>;
            (s1.440 var=74 stl=R off=3) entry (s1.441 s1.453)  <504>;
        } #22
        {
            <28> {
              (__fch_s2__rstr.242 var=41 stl=dm_read __shv_s2.363 var=61 stl=ag1q) load__pl_const_1_B1 (s2.432 s2__rstr.11)  <456>;
              (s2.432 var=17 stl=ag1p) ag1p_1_dr_move_R_1_addr (s2.433)  <542>;
              (__shv_s2.436 var=61 stl=R off=2) R_1_dr_move_ag1q_1_addr (__shv_s2.363)  <543>;
              (__fch_s2__rstr.438 var=41 stl=R off=4) R_2_dr_move_dm_read_2_word (__fch_s2__rstr.242)  <545>;
            } stp=0;
            <29> {
              (__shv_s1.362 var=60 stl=ag1q s1__rstr.247 var=11) store__pl_const_1_B1 (__fch_s2__rstr.437 s1.439 s1__rstr.207)  <457>;
              (__fch_s2__rstr.437 var=41 stl=dm_write) dm_write_2_dr_move_R_2_word (__fch_s2__rstr.438)  <544>;
              (s1.439 var=74 stl=ag1p) ag1p_1_dr_move_R_1_addr (s1.440)  <546>;
              (__shv_s1.443 var=60 stl=R off=3) R_1_dr_move_ag1q_1_addr (__shv_s1.362)  <547>;
            } stp=1;
            <30> {
              (__tmp.250 var=47 stl=cndw) _ne_1_B1 (__fch_s2__rstr.444 __ct_0.445)  <458>;
              (__tmp.431 var=47 stl=CND off=0) CND_2_dr_move_cndw_2_bool (__tmp.250)  <541>;
              (__fch_s2__rstr.444 var=41 stl=alur) alur_2_dr_move_R_2_word (__fch_s2__rstr.438)  <548>;
              (__ct_0.445 var=32 stl=alus) alus_2_dr_move_R_2_word (__ct_0.469)  <549>;
            } stp=2;
            <31> {
              () jump_const_1_B1 (__tmp.430 __trgt.377)  <459>;
              (__tmp.430 var=47 stl=tcc) tcc_2_dr_move_CND_2_bool (__tmp.431)  <540>;
            } stp=3;
        } #24 off=7 nxt=30 tgt=24
        {
            () while_expr (__either.373)  <264>;
            (s1__rstr.263 var=11 s1__rstr.264 var=11) exit (s1__rstr.247)  <271>;
            (__either.373 var=70) undefined ()  <440>;
            (s2.434 var=17 stl=R off=2 s2.435 var=17 stl=R off=2) exit (__shv_s2.436)  <499>;
            (s1.441 var=74 stl=R off=3 s1.442 var=74 stl=R off=3) exit (__shv_s1.443)  <505>;
        } #25
    } #21
    #30 off=11 nxt=-2
    () out (s1.496)  <356>;
    () sink (__sp.9)  <362>;
    () sink (s1__rstr.264)  <363>;
    <27> {
      () ret_1_B1 (__la.462)  <455>;
      (__la.462 var=14 stl=trgt) trgt_2_dr_move_LR_2_addr (__la.13)  <553>;
    } stp=0;
    75 -> 74 del=0;
} #0
0 : 'src/string.c';
----------
0 : (0,60:0,0);
9 : (0,63:4,3);
12 : (0,63:4,8);
17 : (0,64:4,16);
21 : (0,64:4,17);
24 : (0,64:4,24);
30 : (0,65:4,29);
----------
106 : (0,63:4,8);
221 : (0,64:4,17);
264 : (0,64:4,24);
271 : (0,64:4,24);
455 : (0,65:4,29);
456 : (0,64:19,22) (0,64:22,0);
457 : (0,64:11,24) (0,64:14,0);
458 : (0,64:4,24);
459 : (0,64:4,24);
460 : (0,63:21,14);
461 : (0,63:11,8) (0,63:14,0);
462 : (0,63:4,8);
463 : (0,63:4,8);
528 : (0,63:4,0);
569 : (0,63:11,0);
570 : (0,63:11,0);

