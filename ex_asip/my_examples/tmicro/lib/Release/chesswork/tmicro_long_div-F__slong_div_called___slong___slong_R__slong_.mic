
// File generated by mist version O-2018.09#f5599cac26#190121, Tue May 28 10:42:08 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../.. -I../../isg -r +f +i tmicro_long_div-F__slong_div_called___slong___slong_R__slong_ tmicro


// m64;   next: m225, jump target: m8 (next offset: 8)
000000  1 0  "0101000000100000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (2,SP,SP); 
000001  1 0  "0010010100010011"   // R[1] = R[3]; 
000002  1 0  "0011000000000110"   // (R[6]) = const_3_B2 (); 
000003  1 0  "0111111111110001"   // (__spill_DM[-1]) = stack_store_bndl_B1 (R[1],SP,-1); 
000004  1 0  "0000111110001110"   // (CND) = _ge_1_B1 (R[1],R[6]); 
000005  1 0  "0111111111100101"   // (__spill_DM[-2]) = stack_store_bndl_B1 (R[5],SP,-2); 
000006  1 0  "0010010100000010"   // R[0] = R[2]; 
000007  1 0  "0010111100000010"   // () = jump_const_2_B1 (CND,2); 

// m225;   next: m78 (next offset: 11)
000008  1 0  "0000010000110000"   // (R[0],CB) = sub_1_B1 (R[6],R[0]); 
000009  1 0  "0110111111110001"   // (R[1]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000010  1 0  "0000011001110001"   // (R[1],CB) = subb_1_B1 (R[6],R[1],CB); 

// m8;   next: m78 (next offset: 11)

// m78;   next: m229, jump target: m14 (next offset: 13)
000011  1 0  "0000111110101110"   // (CND) = _ge_1_B1 (R[5],R[6]); 
000012  1 0  "0010111100000010"   // () = jump_const_2_B1 (CND,2); 

// m229;   next: m62 (next offset: 16)
000013  1 0  "0000010100110100"   // (R[4],CB) = sub_1_B1 (R[6],R[4]); 
000014  1 0  "0110111111100101"   // (R[5]) = stack_load_bndl_B1 (__spill_DM[-2],SP,-2); 
000015  1 0  "0000011101110101"   // (R[5],CB) = subb_1_B1 (R[6],R[5],CB); 

// m14;   next: m62 (next offset: 16)

// m62;   next: m210 (next offset: 21)
000016  1 0  "0011000011110011"   // (R[3]) = const_1_B2 (); 
000017  1 0  "0011000000000010"   // (R[2]) = const_3_B2 (); 
000018  3 0  "0010111011100000"   // () = hwdo_const_const_1_B1 (37); 
000019  0 0  "0000000000100101"   // /
000020  0 0  "0000000000100000"   // /

// m210;   next: m215, jump target: m237 (next offset: 29)
000021  1 0  "0000000110110110" .loop_nesting 1    // (R[6],CB) = add_1_B1 (R[6],R[6]); 
000022  1 0  "0000001010010010"   // (R[2],CB) = addc_1_B1 (R[2],R[2],CB); 
000023  1 0  "0001001111001011"   // (R[7]) = _rs_1_B1 (R[1],R[3]); 
000024  1 0  "0000000000000000"   // (R[0],CB) = add_1_B1 (R[0],R[0]); 
000025  1 0  "0000101110110111"   // (R[6]) = _or_1_B1 (R[6],R[7]); 
000026  1 0  "0000001001001001"   // (R[1],CB) = addc_1_B1 (R[1],R[1],CB); 
000027  1 0  "0000111001101010"   // (CND) = _lt_1_B1 (R[5],R[2]); 
000028  1 0  "0010111100000011"   // () = jump_const_2_B1 (CND,3); 

// m215;   next: m218, jump target: m27 (next offset: 31)
000029  1 0  "0001101001101010"   // (CND) = _ne_1_B1 (R[5],R[2]); 
000030  1 0  "0010111100000101"   // () = jump_const_2_B1 (CND,5); 

// m218;   next: m237, jump target: m27 (next offset: 33)
000031  1 0  "0000111101100110"   // (CND) = _gt_1_B1 (R[4],R[6]); 
000032  1 0  "0010111100000011"   // () = jump_const_2_B1 (CND,3); 

// m237;   next: m253 (next offset: 37)
000033  1 0  "0000010110110100"   // (R[6],CB) = sub_1_B1 (R[6],R[4]); 
000034  1 0  "0011000000010111"   // (R[7]) = const_2_B2 (); 
000035  1 0  "0000101000000111"   // (R[0]) = _or_1_B1 (R[0],R[7]); 
000036  1 0  "0000011010010101"   // (R[2],CB) = subb_1_B1 (R[2],R[5],CB); 

// m27;   next: m253 (next offset: 37)

// m253;   next: m252, loop target: m210 (next offset: 38)
000037  1 0  "0010111000000000" .swstall "between_loop_ends"   // () = vd_nop_E1 (); 

// m252;   next: m241, jump target: m39 (next offset: 45)
000038  1 0  "0111111111010010" .loop_nesting 0    // (__spill_DM[-3]) = stack_store_bndl_B1 (R[2],SP,-3); 
000039  1 0  "0011000000000101"   // (R[5]) = const_3_B2 (); 
000040  1 0  "0110111111110100"   // (R[4]) = stack_load_bndl_B1 (__spill_DM[-1],SP,-1); 
000041  1 0  "0111111111000110"   // (__spill_DM[-4]) = stack_store_bndl_B1 (R[6],SP,-4); 
000042  1 0  "0000111110100101"   // (CND) = _ge_1_B1 (R[4],R[5]); 
000043  1 0  "0110111111100010"   // (R[2]) = stack_load_bndl_B1 (__spill_DM[-2],SP,-2); 
000044  1 0  "0010111100000101"   // () = jump_const_2_B1 (CND,5); 

// m241;   next: m182 (next offset: 51)
000045  1 0  "0110111111000011"   // (R[3]) = stack_load_bndl_B1 (__spill_DM[-4],SP,-4); 
000046  1 0  "0000010011101011"   // (R[3],CB) = sub_1_B1 (R[5],R[3]); 
000047  1 0  "0110111111010110"   // (R[6]) = stack_load_bndl_B1 (__spill_DM[-3],SP,-3); 
000048  1 0  "0000011110101110"   // (R[6],CB) = subb_1_B1 (R[5],R[6],CB); 
000049  1 0  "0111111111010110"   // (__spill_DM[-3]) = stack_store_bndl_B1 (R[6],SP,-3); 
000050  1 0  "0111111111000011"   // (__spill_DM[-4]) = stack_store_bndl_B1 (R[3],SP,-4); 

// m39;   next: m182 (next offset: 51)

// m182;   next: m246, jump target: m45 (next offset: 54)
000051  1 0  "0000110100010100"   // (R[4]) = _er_1_B1 (R[4],R[2]); 
000052  1 0  "0000111110100101"   // (CND) = _ge_1_B1 (R[4],R[5]); 
000053  1 0  "0010111100000001"   // () = jump_const_2_B1 (CND,1); 

// m246;   next: m49 (next offset: 56)
000054  1 0  "0000010000101000"   // (R[0],CB) = sub_1_B1 (R[5],R[0]); 
000055  1 0  "0000011001101001"   // (R[1],CB) = subb_1_B1 (R[5],R[1],CB); 

// m45;   next: m49 (next offset: 56)

// m49 (next offset: /)
000056  1 0  "0010111011000000"   // () = ret_1_B1 (LR); 
000057  1 0  "0101111111100000"   // (SP) = _pl_rd_res_reg_const_wr_res_reg_1_B2 (-2,SP,SP); 
000058  1 0  "0010111000000000" .swstall "delay_slot"   // () = vd_nop_E1 (); 

