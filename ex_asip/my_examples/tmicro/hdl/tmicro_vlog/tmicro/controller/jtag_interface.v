
// File generated by Go version O-2018.09#f5599cac26#190121, Tue May 28 10:45:21 2024
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// go -B -I../lib -F -D__tct_patch__=300 -Verilog -otmicro_vlog -cgo_options.cfg -Itmicro_vlog/tmp_pdg -updg -updg_controller tmicro



`timescale 1ns/1ps

// module jtag_interface : jtag_interface
module jtag_interface
  ( input         reset_ext,
    input         clock,
    input  [15:0] dbg_data_po_in,
    input         jtag_capture_dr_in,
    input         jtag_shift_dr_in,
    input         jtag_si_in,
    input         jtag_tck_in,
    input         jtag_update_dr_in,
    input         jtag_update_ir_in,
    output [15:0] dbg_data_pi_out,
    output        dbg_data_we_out,
    output        dbg_instr_exec_out,
    output        jtag_so_out
  );


  reg    dbg_data_we_REG;
  reg    dbg_instr_exec_REG;
  reg    jtag_update_dr_REG;
  reg    jtag_update_ir_REG;
  reg    [2:0] sync_dr_REG;
  reg    [2:0] sync_ir_REG;


  assign dbg_instr_exec_out = dbg_instr_exec_REG;
  assign dbg_data_we_out = dbg_data_we_REG;

  // delay over JTAG clock (decode new JTAG instruction AFTER update_ir cycle)
  always @ (posedge jtag_tck_in)
  begin: jtag_update_ir_delay
    jtag_update_ir_REG <= jtag_update_ir_in;
  end

  // synchronisation to processor clock
  always @ (posedge clock or posedge reset_ext)
  begin: sync_update_ir_proc
    if (reset_ext)
    begin
      sync_ir_REG <= {3{1'b1}};
      dbg_instr_exec_REG <= 1'b0;
    end
    else
    begin
      sync_ir_REG[0] <= jtag_update_ir_REG;
      sync_ir_REG[1] <= sync_ir_REG[0];
      sync_ir_REG[2] <= sync_ir_REG[1];
      dbg_instr_exec_REG <= sync_ir_REG[1] && !sync_ir_REG[2];
    end
  end

  // scan register contains new value AFTER update_dr cycle
  always @ (posedge jtag_tck_in)
  begin: update_dr_delay
    jtag_update_dr_REG <= jtag_update_dr_in;
  end

  // synchronisation to processor clock
  always @ (posedge clock or posedge reset_ext)
  begin: sync_update_dr_proc
    if (reset_ext)
    begin
      sync_dr_REG <= {3{1'b1}};
      dbg_data_we_REG <= 1'b0;
    end
    else
    begin
      sync_dr_REG[0] <= jtag_update_dr_REG;
      sync_dr_REG[1] <= sync_dr_REG[0];
      sync_dr_REG[2] <= sync_dr_REG[1];
      dbg_data_we_REG <= sync_dr_REG[1] && !sync_dr_REG[2];
    end
  end

  jtag_scan_register #(16) inst_dbg_scan_reg(
      .jtag_capture_dr_in(jtag_capture_dr_in),
      .jtag_par_in(dbg_data_po_in),
      .jtag_shift_dr_in(jtag_shift_dr_in),
      .jtag_si_in(jtag_si_in),
      .jtag_tck_in(jtag_tck_in),
      .jtag_update_dr_in(jtag_update_dr_in),
      .jtag_par_out(dbg_data_pi_out),
      .jtag_so_out(jtag_so_out));

endmodule
